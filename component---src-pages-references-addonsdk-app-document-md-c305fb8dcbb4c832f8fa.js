"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[7372],{18138:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return l},default:function(){return h}});var n=a(58168),d=a(80045),r=(a(88763),a(15680)),m=a(83407);const i=["components"],l={},o=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",t)},p=o("InlineAlert"),x=o("CodeBlock"),s={_frontmatter:l},g=m.A;function h(e){let{components:t}=e,a=(0,d.A)(e,i);return(0,r.mdx)(g,(0,n.A)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"addonuisdkappdocument"},"addOnUISdk.app.document"),(0,r.mdx)("p",null,"Provides access to the methods needed for retrieving ",(0,r.mdx)("a",{parentName:"p",href:"#general-methods"},"document metadata"),", ",(0,r.mdx)("a",{parentName:"p",href:"../../guides/develop/use_cases/content_management.md#importing-content"},"importing content")," such as images, audio and video into the document, and for ",(0,r.mdx)("a",{parentName:"p",href:"../../guides/develop/use_cases/content_management.md#exporting-content"},"exporting content")," from the current document."),(0,r.mdx)("h2",{id:"general-methods"},"General Methods"),(0,r.mdx)("h3",{id:"id"},"id()"),(0,r.mdx)("p",null,"Retrieves the id of the document."),(0,r.mdx)("h4",{id:"signature"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"id(): Promise<string | undefined>")),(0,r.mdx)("h4",{id:"return-value"},"Return Value"),(0,r.mdx)("p",null,"A resolved ",(0,r.mdx)("inlineCode",{parentName:"p"},"Promise")," containing the ",(0,r.mdx)("inlineCode",{parentName:"p"},"id")," of the document."),(0,r.mdx)(p,{slots:"text",variant:"info",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Note:")," A ",(0,r.mdx)("inlineCode",{parentName:"p"},"documentIdAvailable")," event is triggered when the document id is available in the application. You can listen for this event via the ",(0,r.mdx)("a",{parentName:"p",href:"./addonsdk-app.md#on"},(0,r.mdx)("inlineCode",{parentName:"a"},"addOnUISdk.app.on()"))," method."),(0,r.mdx)("h4",{id:"example"},"Example"),(0,r.mdx)(x,{slots:"heading, code",repeat:"1",languages:"JavaScript",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"usage"},"Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\nfunction setId(id) { /* ... */ }\n\naddOnUISdk.ready.then(() => setId(await addOnUISdk.app.document.id()));\n\naddOnUISdk.app.on("documentAvailable", data => {\n  setId(data.documentId);\n});\n')),(0,r.mdx)("h3",{id:"title"},"title()"),(0,r.mdx)("p",null,"Retrieves the title/name of the document."),(0,r.mdx)("h4",{id:"signature-1"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"title(): Promise<string>")),(0,r.mdx)("h4",{id:"return-value-1"},"Return Value"),(0,r.mdx)("p",null,"A resolved ",(0,r.mdx)("inlineCode",{parentName:"p"},"Promise")," containing the ",(0,r.mdx)("inlineCode",{parentName:"p"},"title")," (ie: name) of the document."),(0,r.mdx)(p,{slots:"text",variant:"info",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Note:")," A ",(0,r.mdx)("inlineCode",{parentName:"p"},"documentTitleChange")," event is triggered when the document title is changed in the application. You can listen for this event via the ",(0,r.mdx)("a",{parentName:"p",href:"./addonsdk-app.md#on"},(0,r.mdx)("inlineCode",{parentName:"a"},"addOnUISdk.app.on()"))," method."),(0,r.mdx)("h4",{id:"example-1"},"Example"),(0,r.mdx)(x,{slots:"heading, code",repeat:"1",languages:"JavaScript",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"usage-1"},"Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\nfunction setTitle(title) { /* ... */ }\n\naddOnUISdk.ready.then(() => setTitle(await addOnUISdk.app.document.title()));\n\naddOnUISdk.app.on("documentTitleChange", data => {\n  setTitle(data.documentTitle);\n});\n')),(0,r.mdx)("h3",{id:"getpagesmetadata"},"getPagesMetadata()"),(0,r.mdx)("p",null,"Retrieve the metadata for all of the pages in the document."),(0,r.mdx)("h4",{id:"signature-2"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"getPagesMetadata(options: PageMetadataOptions): Promise<PageMetadata[]>")),(0,r.mdx)("h4",{id:"parameters"},"Parameters"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"options")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Object")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("a",{parentName:"td",href:"#pagemetadataoptions"},(0,r.mdx)("inlineCode",{parentName:"a"},"PageMetadataOptions"))," object.")))),(0,r.mdx)("h4",{id:"return-value-2"},"Return Value"),(0,r.mdx)("p",null,"A resolved ",(0,r.mdx)("inlineCode",{parentName:"p"},"Promise")," containing a ",(0,r.mdx)("a",{parentName:"p",href:"#pagemetadata"},(0,r.mdx)("inlineCode",{parentName:"a"},"PageMetadata"))," array containing all of the pages in the document."),(0,r.mdx)(x,{slots:"heading, code",repeat:"1",languages:"JavaScript",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"usage-2"},"Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\n// Wait for the SDK to be ready\nawait addOnUISdk.ready;\n\n// Get metadata of all the pages\nasync function logMetadata() {\n  try {\n    const pages = (await addOnUISdk.app.document.getPagesMetadata({\n                            range: addOnUISdk.constants.Range.specificPages,\n                            pageIds: [\n                                "7477a5e7-02b2-4b8d-9bf9-f09ef6f8b9fc",\n                                "d45ba3fc-a3df-4a87-80a5-655e5f8f0f96"\n                            ]\n                        })) as PageMetadata[];\n    for (const page of pages) {\n      console.log("Page id: ", page.id);\n      console.log("Page title: ", page.title);\n      console.log("Page size: ", page.size);\n      console.log("Page has premium content: ", page.hasPremiumContent);\n      console.log("Page has timelines: ", page.hasTemporalContent);\n      console.log("Pixels per inch: ", page.pixelsPerInch);\n      console.log("Is page print ready: ", page.isPrintReady);\n    }\n  }\n  catch(error) {\n    console.log("Failed to get metadata:", error);\n  }\n}\n')),(0,r.mdx)("h4",{id:"pagemetadata"},(0,r.mdx)("inlineCode",{parentName:"h4"},"PageMetadata")),(0,r.mdx)("p",null,"The metadata of a page."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"id")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The id of the page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"title")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The title of the page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"size")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"{ width: number, height: number }")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The size of the page in pixels.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"hasPremiumContent")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("inlineCode",{parentName:"td"},"true")," if the page has premium content, ",(0,r.mdx)("inlineCode",{parentName:"td"},"false")," if not.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"hasTemporalContent")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("inlineCode",{parentName:"td"},"true")," if the page has timelines, ",(0,r.mdx)("inlineCode",{parentName:"td"},"false")," if not.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"pixelsPerInch?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"number")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The pixels per inch of the page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"isPrintReady?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Indicates whether the page has passed various internal quality checks to ensure high quality output when printed. While the specifics may change over time, Adobe Express checks for sufficient image resolution and sizes to ensure that a print will be of good quality. If this is ",(0,r.mdx)("inlineCode",{parentName:"td"},"false"),", the output may be blurry or of poor quality (based on internal heuristics).")))),(0,r.mdx)("h4",{id:"pagemetadataoptions"},(0,r.mdx)("inlineCode",{parentName:"h4"},"PageMetadataOptions")),(0,r.mdx)("p",null,"This object is passed as a parameter to the ",(0,r.mdx)("a",{parentName:"p",href:"#getpagesmetadata"},(0,r.mdx)("inlineCode",{parentName:"a"},"getPagesMetadata"))," method and includes the range and optional ",(0,r.mdx)("inlineCode",{parentName:"p"},"pageIds")," for which you want to retrieve metadata for."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"range")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Range of the document to get the metadata")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"pageIds?: string[]")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Ids of the pages (Only required when the range is ",(0,r.mdx)("inlineCode",{parentName:"td"},"specificPages"),")")))),(0,r.mdx)("h2",{id:"import-content-methods"},"Import Content Methods"),(0,r.mdx)("h3",{id:"addimage"},"addImage()"),(0,r.mdx)("p",null,"Adds an image/gif/Ps/Ai files to the current page."),(0,r.mdx)("h4",{id:"signature-3"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"addImage(imageBlob: Blob, attributes?: MediaAttributes): Promise<void>")),(0,r.mdx)("h4",{id:"parameters-1"},"Parameters"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"imageBlob")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Blob")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The image to add to the page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"attributes?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#mediaattributes"},(0,r.mdx)("inlineCode",{parentName:"a"},"MediaAttributes"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Attributes that can be passed when adding image/Ps/Ai files to the page (i.e., ",(0,r.mdx)("inlineCode",{parentName:"td"},"title"),").")))),(0,r.mdx)("h4",{id:"return-value-3"},"Return Value"),(0,r.mdx)("p",null,"A resolved promise if the image was successfully added to the canvas; otherwise, it will throw an error with the rejected promise."),(0,r.mdx)("h4",{id:"example-usage"},"Example Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'// Add image(blob) to the current page\nasync function addImageFromBlob(blob) {\n  try {\n    await document.addImage(blob);\n  } catch (error) {\n    console.log("Failed to add the image to the page.");\n  }\n}\n\n// Add image(url) to the current page\nasync function addImageFromURL(url) {\n  try {\n    const blob = await fetch(url).then((response) => response.blob());\n    await document.addImage(blob);\n  } catch (error) {\n    console.log("Failed to add the image to the page.");\n  }\n}\n')),(0,r.mdx)(p,{slots:"text",variant:"info",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Refer to the ",(0,r.mdx)("a",{parentName:"p",href:"#image-requirements"},"image requirements")," section for specific details on supported image sizes and GIF handling."),(0,r.mdx)("h3",{id:"addanimatedimage"},"addAnimatedImage()"),(0,r.mdx)("p",null,"Adds an animated image (gif) to the current page."),(0,r.mdx)("h4",{id:"signature-4"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"addAnimatedImage(imageBlob: Blob, attributes?: MediaAttributes): Promise<void>")),(0,r.mdx)("h4",{id:"parameters-2"},"Parameters"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"imageBlob")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Blob")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The image to add to the page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"attributes?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#mediaattributes"},(0,r.mdx)("inlineCode",{parentName:"a"},"MediaAttributes"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Attributes that can be passed when adding animated gifs to the page (i.e., ",(0,r.mdx)("inlineCode",{parentName:"td"},"title"),").")))),(0,r.mdx)("h4",{id:"return-value-4"},"Return Value"),(0,r.mdx)("p",null,"A resolved promise if the animated image was successfully added to the canvas; otherwise, it will throw an error with the rejected promise."),(0,r.mdx)("h4",{id:"example-usage-1"},"Example Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'// Add animated image(blob) to the current page\nasync function addAnimatedImageFromBlob(blob) {\n  try {\n    await document.addAnimatedImage(blob);\n  } catch (error) {\n    console.log("Failed to add the animated image to the page.");\n  }\n}\n')),(0,r.mdx)(p,{slots:"text",variant:"info",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Refer to the ",(0,r.mdx)("a",{parentName:"p",href:"#image-requirements"},"image requirements")," section for specific details on supported image sizes and GIF handling."),(0,r.mdx)("h3",{id:"addvideo"},"addVideo()"),(0,r.mdx)("p",null,"Adds a video to the current page."),(0,r.mdx)("h4",{id:"signature-5"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"addVideo(videoBlob: Blob): Promise<void>")),(0,r.mdx)("h4",{id:"parameters-3"},"Parameters"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"videoBlob")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Blob")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The video to add to the page.")))),(0,r.mdx)("h4",{id:"example-usage-2"},"Example Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'async function addVideoFromBlob(blob) {\n  try {\n    await document.addVideo(blob);\n  } catch (error) {\n    console.log("Failed to add the video to the page.");\n  }\n}\n\nasync function addVideoFromURL(url) {\n  try {\n    const blob = await fetch(url).then((response) => response.blob());\n    await document.addVideo(blob);\n  } catch (error) {\n    console.log("Failed to add the video to the page.");\n  }\n}\n')),(0,r.mdx)("h3",{id:"addaudio"},"addAudio()"),(0,r.mdx)("p",null,"Adds audio to the current page."),(0,r.mdx)("h4",{id:"signature-6"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"addAudio(audioBlob: Blob, attributes: MediaAttributes): Promise<void>")),(0,r.mdx)("h4",{id:"parameters-4"},"Parameters"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"audioBlob")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Blob")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The audio to add to the page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"attributes")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#mediaattributes"},(0,r.mdx)("inlineCode",{parentName:"a"},"MediaAttributes"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Attributes to pass when adding the audio to the page (ie: ",(0,r.mdx)("inlineCode",{parentName:"td"},"title"),", which is mandatory).")))),(0,r.mdx)("h4",{id:"return-value-5"},"Return Value"),(0,r.mdx)("p",null,"A resolved promise if the audio was successfully added to the canvas; otherwise will throw an error with the rejected promise."),(0,r.mdx)("h4",{id:"example-usage-3"},"Example Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'async function addAudioFromBlob(blob) {\n  try {\n      await document.addAudio(blob, {title: "Jazzy beats", author: "Jazzy"});\n  }\n  catch(error) {\n      console.log("Failed to add the audio to the page.");\n  }\n}\n\nasync function addAudioFromURL(url) {\n  try {\n      const blob = await fetch(url).then(response => response.blob());\n      await document.addAudio(blob, {title: "Jazzy beats", author: "Jazzy"});\n  }\n  catch(error) {\n      console.log("Failed to add the audio to the page.");\n  }\n')),(0,r.mdx)("h4",{id:"mediaattributes"},(0,r.mdx)("inlineCode",{parentName:"h4"},"MediaAttributes")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"title")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Media title (mandatory for audio import).")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"author?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Media author")))),(0,r.mdx)(p,{slots:"text",variant:"info",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Refer to the ",(0,r.mdx)("a",{parentName:"p",href:"../../guides/develop/use_cases/content_management.md#importing-content"},"importing content use case")," and the ",(0,r.mdx)("a",{parentName:"p",href:"/express-add-ons-docs/samples.md#import-images-from-local"},"import-images-from-local")," in the code samples for general importing content examples."),(0,r.mdx)("h3",{id:"importpdf"},"importPdf()"),(0,r.mdx)("p",null,"Imports a PDF as a new Adobe Express document."),(0,r.mdx)("h4",{id:"signature-7"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"importPdf(blob: Blob, attributes: MediaAttributes): void;")),(0,r.mdx)("h4",{id:"parameters-5"},"Parameters"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"blob")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Blob")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The PDF to add to the page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"attributes?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#mediaattributes"},(0,r.mdx)("inlineCode",{parentName:"a"},"MediaAttributes"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Attributes that can be passed when adding PDFs to the page (i.e., ",(0,r.mdx)("inlineCode",{parentName:"td"},"title"),").")))),(0,r.mdx)("h4",{id:"return-value-6"},"Return Value"),(0,r.mdx)("p",null,"None"),(0,r.mdx)("h4",{id:"example-usage-4"},"Example Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'import AddOnSDKAPI from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\n// Reference to the active document\nconst { document } = AddOnSDKAPI.app;\n\nconst mediaAttributes = { title: "Sample.pdf" };\n\n// Import a PDF. Note this will be imported as a new Adobe Express document.\nfunction importPdf(blob, mediaAttributes) {\n  try {\n    document.importPdf(blob, mediaAttributes);\n  } catch (error) {\n    console.log("Failed to import the pdf.");\n  }\n}\n\n// Import a PDF from a URL. Note this will be imported as a new Adobe Express document.\nasync function importPdfFrom(url) {\n  try {\n    const blob = await fetch(url).then((response) => response.blob());\n    document.importPdf(blob, { title: "Sample.pdf" });\n  } catch (error) {\n    console.log("Failed to import the pdf.");\n  }\n}\n')),(0,r.mdx)("h3",{id:"importpresentation"},"importPresentation()"),(0,r.mdx)("p",null,"Imports a presentation as a new Adobe Express document. ",(0,r.mdx)("strong",{parentName:"p"},"Note:")," Currently Express only supports PowerPoint presentations."),(0,r.mdx)("h4",{id:"signature-8"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"importPresentation(blob: Blob, attributes: MediaAttributes): void;")),(0,r.mdx)("h4",{id:"parameters-6"},"Parameters"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"blob")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Blob")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The PowerPoint presentation (",(0,r.mdx)("inlineCode",{parentName:"td"},".pptx"),") to add to the page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"attributes?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#mediaattributes"},(0,r.mdx)("inlineCode",{parentName:"a"},"MediaAttributes"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Attributes that can be passed when adding a presentation to the page (i.e., ",(0,r.mdx)("inlineCode",{parentName:"td"},"title"),").")))),(0,r.mdx)("h4",{id:"return-value-7"},"Return Value"),(0,r.mdx)("p",null,"None"),(0,r.mdx)("h4",{id:"example-usage-5"},"Example Usage"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'import AddOnSDKAPI from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\n// Reference to the active document\nconst { document } = AddOnSDKAPI.app;\n\nconst mediaAttributes = { title: "Sample.pptx" }; // only Pptx is supported by Express\n\n// Import a presentation. Note: this will be imported as a new Adobe Express presentation.\nfunction importPresentation(blob, mediaAttributes) {\n  try {\n    document.importPresentation(blob, mediaAttributes);\n  } catch (error) {\n    console.log("Failed to add the presentation to the document.");\n  }\n}\n\n// Import a powerpoint presentation from a URL. Note: this will be imported as a new Adobe Express presentation.\nasync function importPresentationFrom(url) {\n  try {\n    const blob = await fetch(url).then((response) => response.blob());\n    document.importPresentation(blob, { title: "Sample.pptx" });\n  } catch (error) {\n    console.log("Failed to add the presentation to document.");\n  }\n}\n')),(0,r.mdx)("h3",{id:"image-requirements"},"Image requirements"),(0,r.mdx)("p",null,"When importing images, the size of the images for all types ",(0,r.mdx)("strong",{parentName:"p"},"except ",(0,r.mdx)("inlineCode",{parentName:"strong"},"gif"))," images should not exceed ",(0,r.mdx)("strong",{parentName:"p"},"8000px")," or ",(0,r.mdx)("strong",{parentName:"p"},"40MB"),"."),(0,r.mdx)("p",null,"For ",(0,r.mdx)("inlineCode",{parentName:"p"},"gif")," images, ",(0,r.mdx)("a",{parentName:"p",href:"https://helpx.adobe.com/express/create-and-edit-videos/change-file-formats/import-gif-limits.html"},"the technical requirements are listed here")," and summarized below for quick reference:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Maximum resolution:")," 1080px"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Maximum size:")," 10 MB"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Maximum GIFs per scene:")," 7")),(0,r.mdx)(p,{slots:"header, text1, text2",variant:"info",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"IMPORTANT: Animated GIFs"),(0,r.mdx)("p",null,"Both ",(0,r.mdx)("inlineCode",{parentName:"p"},"addImage()")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"addAnimatedImage()")," support ",(0,r.mdx)("inlineCode",{parentName:"p"},"gif")," file types, however, you should use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"addAnimatedImage()")," method when you want to add an ",(0,r.mdx)("em",{parentName:"p"},"animated GIF")," specifically but note that it is subject to the size criteria listed above. When the criteria aren't met, only the first frame will be added."),(0,r.mdx)("p",null,"If you supply ",(0,r.mdx)("inlineCode",{parentName:"p"},"addImage()")," with an animated GIF, only the first frame will be added by default."),(0,r.mdx)("p",null,"*","*"," See the ",(0,r.mdx)("a",{parentName:"p",href:"../../guides/faq.md#what-are-the-supported-file-formats-for-imported-content-in-adobe-express"},"FAQ's")," for the specific file formats allowed for imported content."),(0,r.mdx)("h3",{id:"errors"},"Errors"),(0,r.mdx)("p",null,"The table below describes the possible error messages that may occur when using the import methods, with a description of the scenario that would cause them to be returned."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:"right"},"Error Message"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Error Scenario"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"Invalid blob."),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Blob is invalid.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"Unsupported mime type : ",(0,r.mdx)("inlineCode",{parentName:"td"},"${blob.type}")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Mime type is invalid.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"Import image width or height exceed the maximum limit : ",(0,r.mdx)("inlineCode",{parentName:"td"},"${maxSupportedDimension}")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The imported image dimensions exceed the maximum limit if any defined by Express.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"Import image size exceed the maximum limit: ",(0,r.mdx)("inlineCode",{parentName:"td"},"${maxSupportedSize}MB")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The imported image size exceeds the maximum limit if any defined by Express.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"No active page available."),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Current page doesn't exist.")))),(0,r.mdx)("h2",{id:"export-content-methods"},"Export Content Methods"),(0,r.mdx)("h3",{id:"createrenditions"},"createRenditions()"),(0,r.mdx)("p",null,"Generate renditions of the current page, specific pages or the entire document in a specified format for export."),(0,r.mdx)("h4",{id:"signature-9"},"Signature"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"createRenditions(renditionOptions: RenditionOptions, renditionIntent?: RenditionIntent): Promise<Rendition[]>")),(0,r.mdx)("h4",{id:"parameters-7"},"Parameters"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"renditionOptions")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Object")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("a",{parentName:"td",href:"#renditionoptions"},(0,r.mdx)("inlineCode",{parentName:"a"},"RenditionOptions"))," object.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"renditionIntent")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("a",{parentName:"td",href:"./addonsdk-constants.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"RenditionIntent"))," constant value.")))),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"NOTE:")," The default value for ",(0,r.mdx)("inlineCode",{parentName:"p"},"renditionIntent")," is ",(0,r.mdx)("inlineCode",{parentName:"p"},"export"),". If it's set to ",(0,r.mdx)("inlineCode",{parentName:"p"},"preview"),", it also requires the ",(0,r.mdx)("inlineCode",{parentName:"p"},"renditionPreview")," flag to be set to ",(0,r.mdx)("inlineCode",{parentName:"p"},"true")," in the ",(0,r.mdx)("a",{parentName:"p",href:"../manifest/index.md#requirements"},"manifest ",(0,r.mdx)("inlineCode",{parentName:"a"},"requirements"))," section. Additionally, when implementing the premium content flows where you present a dialog or option to allow the user to upgrade, you must be sure to also include the following permissions in the ",(0,r.mdx)("a",{parentName:"p",href:"../../references/manifest/index.md#entrypointspermissionssandbox"},(0,r.mdx)("inlineCode",{parentName:"a"},"sandbox"))," attribute of your ",(0,r.mdx)("inlineCode",{parentName:"p"},"manifest.json")," to allow the Adobe Express pricing page to load properly:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'"permissions": {\n    "sandbox": ["allow-popups-to-escape-sandbox", "allow-popups", "allow-downloads"]\n}\n')),(0,r.mdx)("p",null,"Refer to the ",(0,r.mdx)("a",{parentName:"p",href:"../../guides/develop/use_cases/content_management.md#premium-content"},"exporting content use case example")," for more specific details on options for handling the export of premium content."),(0,r.mdx)("h4",{id:"renditionoptions"},(0,r.mdx)("inlineCode",{parentName:"h4"},"RenditionOptions")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"range")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("a",{parentName:"td",href:"./addonsdk-constants.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"Range"))," constant value.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"format")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("a",{parentName:"td",href:"./addonsdk-constants.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"RenditionFormat"))," constant value.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"pageIds?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string[]")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Ids of the pages (only required if the range is ",(0,r.mdx)("a",{parentName:"td",href:"./addonsdk-constants.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"specificPages"),")"))))),(0,r.mdx)("h4",{id:"jpgrenditionoptions"},(0,r.mdx)("inlineCode",{parentName:"h4"},"JpgRenditionOptions")),(0,r.mdx)("p",null,"Extends the ",(0,r.mdx)("a",{parentName:"p",href:"#renditionoptions"},(0,r.mdx)("inlineCode",{parentName:"a"},"RenditionOptions"))," object and adds the following additional options for ",(0,r.mdx)("inlineCode",{parentName:"p"},"jpg")," renditions:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"backgroundColor?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"number")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Integer in 0xRRGGBB format of the background color you wish to sit behind any transparent areas. By default it is derived from the entity for which the rendition needs to be created.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"quality?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"number")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"A number between 0 and 1, indicating image quality. Default is 1.0.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#requested-size-notes"},(0,r.mdx)("inlineCode",{parentName:"a"},"requestedSize?"))),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"{width?: number; height?: number}")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Requested size (in pixels).")))),(0,r.mdx)("h4",{id:"pngrenditionoptions"},(0,r.mdx)("inlineCode",{parentName:"h4"},"PngRenditionOptions")),(0,r.mdx)("p",null,"Extends the ",(0,r.mdx)("a",{parentName:"p",href:"#renditionoptions"},(0,r.mdx)("inlineCode",{parentName:"a"},"RenditionOptions"))," object and adds the following additional options for ",(0,r.mdx)("inlineCode",{parentName:"p"},"png")," renditions:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"backgroundColor?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"number")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Integer in 0xRRGGBB format of the background color you wish to sit behind any transparent areas. By default it is derived from the entity for which the rendition needs to be created.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#requested-size-notes"},(0,r.mdx)("inlineCode",{parentName:"a"},"requestedSize?"))),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"{width?: number; height?: number}")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Requested size (in pixels).")))),(0,r.mdx)("h4",{id:"requested-size-notes"},"Requested Size Notes"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"The supported size is from 1 x 1 to width x height."),(0,r.mdx)("li",{parentName:"ul"},"Aspect ratio is maintained while scaling the rendition based on the requested size."),(0,r.mdx)("li",{parentName:"ul"},"Up-scaling is currently not supported."),(0,r.mdx)("li",{parentName:"ul"},"If the requested size is invalid, it will be ignored and the original size rendition will be created."),(0,r.mdx)("li",{parentName:"ul"},"Some examples of what the actual exported sizes will be, depending on the page size and requested size are in the table below for reference.")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Page Size"),(0,r.mdx)("th",{parentName:"tr",align:null},"Requested Size"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Exported Size"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"400 x 600"),(0,r.mdx)("td",{parentName:"tr",align:null},"200 x 200"),(0,r.mdx)("td",{parentName:"tr",align:"right"},"134 x 200")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"400 x 600"),(0,r.mdx)("td",{parentName:"tr",align:null},"200 x 400"),(0,r.mdx)("td",{parentName:"tr",align:"right"},"200 x 300")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"400 x 600"),(0,r.mdx)("td",{parentName:"tr",align:null},"200 x -200"),(0,r.mdx)("td",{parentName:"tr",align:"right"},"400 x 600")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},"400 x 600"),(0,r.mdx)("td",{parentName:"tr",align:null},"800 x 1000"),(0,r.mdx)("td",{parentName:"tr",align:"right"},"400 x 600")))),(0,r.mdx)("h4",{id:"pdfrenditionoptions"},(0,r.mdx)("inlineCode",{parentName:"h4"},"PdfRenditionOptions")),(0,r.mdx)("p",null,"Extends the ",(0,r.mdx)("a",{parentName:"p",href:"#renditionoptions"},(0,r.mdx)("inlineCode",{parentName:"a"},"RenditionOptions"))," object and adds the following additional options for ",(0,r.mdx)("inlineCode",{parentName:"p"},"pdf")," renditions:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"bleed?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#bleed"},(0,r.mdx)("inlineCode",{parentName:"a"},"Bleed"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Bleed for the page. In printing, bleed is printing that goes beyond the edge of where the sheet will be trimmed. In other words, the bleed is the area to be trimmed off. The parameter is optional, and if left undefined, then no bleed is assumed. If ",(0,r.mdx)("inlineCode",{parentName:"td"},"bleed")," is defined, ",(0,r.mdx)("inlineCode",{parentName:"td"},"CropBox")," and ",(0,r.mdx)("inlineCode",{parentName:"td"},"TrimBox")," will be the size of the Express document, ",(0,r.mdx)("inlineCode",{parentName:"td"},"BleedBox")," and ",(0,r.mdx)("inlineCode",{parentName:"td"},"MediaBox")," will be equal to each other, and they will expand on all sides (left, top, right, bottom) with the amount/unit specified by ",(0,r.mdx)("inlineCode",{parentName:"td"},"bleed"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"pageBoxes?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#pdfpageboxes"},(0,r.mdx)("inlineCode",{parentName:"a"},"PdfPageBoxes"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Exposes the ability to customize each PDF Page Box (",(0,r.mdx)("inlineCode",{parentName:"td"},"MediaBox"),", ",(0,r.mdx)("inlineCode",{parentName:"td"},"BleedBox"),", ",(0,r.mdx)("inlineCode",{parentName:"td"},"CropBox"),", ",(0,r.mdx)("inlineCode",{parentName:"td"},"TrimBox"),") dimensions by defining how much it should expand on each side beyond the Express document page size. If ",(0,r.mdx)("inlineCode",{parentName:"td"},"pageBoxes")," are defined, then ",(0,r.mdx)("inlineCode",{parentName:"td"},"PdfRenditionOptions.bleed")," is ignored.")))),(0,r.mdx)("h4",{id:"bleed"},(0,r.mdx)("inlineCode",{parentName:"h4"},"Bleed")),(0,r.mdx)("p",null,"Represents a ",(0,r.mdx)("em",{parentName:"p"},"bleed")," for a page. In printing, ",(0,r.mdx)("em",{parentName:"p"},"bleed")," is printing that goes beyond the edge of where the sheet will be trimmed. In other words, the bleed is the area to be trimmed off. If the value is left undefined, then no bleed will be assumed."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"amount?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"number")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The amount for the bleed.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"unit")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"../addonsdk/addonsdk-constants.md#constants"},(0,r.mdx)("inlineCode",{parentName:"a"},"BleedUnit"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The unit in which the bleed amount is expressed.")))),(0,r.mdx)("h4",{id:"pdfpageboxes"},(0,r.mdx)("inlineCode",{parentName:"h4"},"PdfPageBoxes")),(0,r.mdx)("p",null,"Represents all of the PDF page boxes (",(0,r.mdx)("inlineCode",{parentName:"p"},"MediaBox"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"BleedBox"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"CropBox"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"TrimBox"),")."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"mediaBox?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#pdfpagebox"},(0,r.mdx)("inlineCode",{parentName:"a"},"PdfPageBox"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Media box")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"bleedBox?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#pdfpagebox"},(0,r.mdx)("inlineCode",{parentName:"a"},"PdfPageBox"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Bleed box")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"cropBox?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#pdfpagebox"},(0,r.mdx)("inlineCode",{parentName:"a"},"PdfPageBox"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Crop box")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"trimBox?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#pdfpagebox"},(0,r.mdx)("inlineCode",{parentName:"a"},"PdfPageBox"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Trim box")))),(0,r.mdx)("h4",{id:"pdfpagebox"},(0,r.mdx)("inlineCode",{parentName:"h4"},"PdfPageBox")),(0,r.mdx)("p",null,"Represents a PDF page box."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"margins")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#pdfpageboxmargins"},(0,r.mdx)("inlineCode",{parentName:"a"},"PdfPageBoxMargins"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Margins for a box")))),(0,r.mdx)("h4",{id:"pdfpageboxmargins"},(0,r.mdx)("inlineCode",{parentName:"h4"},"PdfPageBoxMargins")),(0,r.mdx)("p",null,"Represents margins for a PDF page box."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"top?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#bleed"},(0,r.mdx)("inlineCode",{parentName:"a"},"Bleed"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Top margin")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"bottom?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#bleed"},(0,r.mdx)("inlineCode",{parentName:"a"},"Bleed"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Bottom margin")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"left?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#bleed"},(0,r.mdx)("inlineCode",{parentName:"a"},"Bleed"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Left margin")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"right?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#bleed"},(0,r.mdx)("inlineCode",{parentName:"a"},"Bleed"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Right margin")))),(0,r.mdx)("h4",{id:"mp4renditionoptions"},(0,r.mdx)("inlineCode",{parentName:"h4"},"Mp4RenditionOptions")),(0,r.mdx)("p",null,"Extends the ",(0,r.mdx)("a",{parentName:"p",href:"#renditionoptions"},(0,r.mdx)("inlineCode",{parentName:"a"},"RenditionOptions"))," object and adds the following additional options for ",(0,r.mdx)("inlineCode",{parentName:"p"},"mp4")," renditions:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"format")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("a",{parentName:"td",href:"./addonsdk-constants.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"RenditionFormat.mp4"))," constant value.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"resolution?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},(0,r.mdx)("a",{parentName:"td",href:"./addonsdk-constants.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"VideoResolution"))," constant value.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"customResolution?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"number")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Only required/used if the ",(0,r.mdx)("inlineCode",{parentName:"td"},"resolution")," is ",(0,r.mdx)("inlineCode",{parentName:"td"},"VideoResolution.custom"))))),(0,r.mdx)("h4",{id:"return-value-8"},"Return Value"),(0,r.mdx)("p",null,"A ",(0,r.mdx)("inlineCode",{parentName:"p"},"Promise")," with an array of page ",(0,r.mdx)("inlineCode",{parentName:"p"},"Rendition")," objects (see ",(0,r.mdx)("a",{parentName:"p",href:"#pagerendition"},(0,r.mdx)("inlineCode",{parentName:"a"},"PageRendition")),"). The array will contain one item if the ",(0,r.mdx)("inlineCode",{parentName:"p"},"currentPage")," range is requested, an array of specific pages when the ",(0,r.mdx)("inlineCode",{parentName:"p"},"specificPages")," range is requested, or all pages when the ",(0,r.mdx)("inlineCode",{parentName:"p"},"entireDocument")," range is specified. Each rendition returned will contain the ",(0,r.mdx)("inlineCode",{parentName:"p"},"type"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"title"),",",(0,r.mdx)("a",{parentName:"p",href:"#pagemetadata"},"metadata for the page")," and a ",(0,r.mdx)("inlineCode",{parentName:"p"},"blob")," of the rendition itself. ",(0,r.mdx)("strong",{parentName:"p"},"Note:")," If you requested ",(0,r.mdx)("inlineCode",{parentName:"p"},"PDF")," for the format with a larger range than ",(0,r.mdx)("inlineCode",{parentName:"p"},"currentPage"),", a single file will be generated which includes the entire range. When the format is ",(0,r.mdx)("inlineCode",{parentName:"p"},"JPG/PNG/MP4"),", an array of files will be generated that represents each page."),(0,r.mdx)(x,{slots:"heading, code",repeat:"2",languages:"JavaScript, TypeScript",mdxType:"CodeBlock"}),(0,r.mdx)("h4",{id:"javascript"},"JavaScript"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\n// Wait for the SDK to be ready\nawait addOnUISdk.ready;\n\n// Display preview of all pages in the AddOn UI\nasync function displayPreview() {\n  try {\n    const renditionOptions = {\n      range: addOnUISdk.constants.Range.entireDocument,\n      format: addOnUISdk.constants.RenditionFormat.png,\n      backgroundColor: 0x7faa77ff,\n    };\n    const renditions = await addOnUISdk.app.document.createRenditions(\n      renditionOptions,\n      addOnUISdk.constants.RenditionIntent.preview\n    );\n    renditions.forEach((rendition) => {\n      const image = document.createElement("img");\n      image.src = URL.createObjectURL(rendition.blob);\n      document.body.appendChild(image);\n    });\n  } catch (error) {\n    console.log("Failed to create renditions:", error);\n  }\n}\n')),(0,r.mdx)("h4",{id:"typescript"},"TypeScript"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-ts"},'import addOnUISdk from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\n// Wait for the SDK to be ready\nawait addOnUISdk.ready;\n\n// Display preview of all pages in the AddOn UI\nasync function displayPreview() {\n  try {\n    const renditionOptions: PngRenditionOptions = {\n      range: Range.entireDocument,\n      format: RenditionFormat.png,\n      backgroundColor: 0x7faa77ff,\n    };\n    const renditions = await addOnUISdk.app.document.createRenditions(\n      renditionOptions,\n      RenditionIntent.preview\n    );\n    renditions.forEach((rendition) => {\n      const image = document.createElement("img");\n      image.src = URL.createObjectURL(rendition.blob);\n      document.body.appendChild(image);\n    });\n  } catch (error) {\n    console.log("Failed to create renditions:", error);\n  }\n}\n')),(0,r.mdx)("h4",{id:"rendition"},(0,r.mdx)("inlineCode",{parentName:"h4"},"Rendition")),(0,r.mdx)("p",null,"A rendition object representing a page in the document, returned from ",(0,r.mdx)("a",{parentName:"p",href:"#createrenditions"},(0,r.mdx)("inlineCode",{parentName:"a"},"createRenditions")),". See"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"type?")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Type of Rendition. Value is always ",(0,r.mdx)("inlineCode",{parentName:"td"},"page"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"blob")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"Blob")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Blob containing the rendition")))),(0,r.mdx)("h4",{id:"pagerendition"},(0,r.mdx)("inlineCode",{parentName:"h4"},"PageRendition")),(0,r.mdx)("p",null,"An extension of ",(0,r.mdx)("a",{parentName:"p",href:"#rendition"},(0,r.mdx)("inlineCode",{parentName:"a"},"Rendition")),", returned in the response to ",(0,r.mdx)("a",{parentName:"p",href:"#createrenditions"},(0,r.mdx)("inlineCode",{parentName:"a"},"createRenditions")),". This object ",(0,r.mdx)("strong",{parentName:"p"},"includes everything in ",(0,r.mdx)("a",{parentName:"strong",href:"#rendition"},(0,r.mdx)("inlineCode",{parentName:"a"},"Rendition"))),", as well as:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Name"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"title")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"string")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The page title of the rendition")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"metadata")),(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("a",{parentName:"td",href:"#pagemetadata"},(0,r.mdx)("inlineCode",{parentName:"a"},"PageMetadata"))),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Page metadata")))),(0,r.mdx)("p",null,"*","*"," See the ",(0,r.mdx)("a",{parentName:"p",href:"../../guides/faq.md#what-are-the-supported-mime-typesfile-formats-for-exported-content"},"FAQs")," for the file formats and mime types supported for exported content."),(0,r.mdx)(p,{slots:"text",variant:"info",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Refer to the ",(0,r.mdx)("a",{parentName:"p",href:"../../guides/develop/use_cases/content_management.md#exporting-content"},"exporting content use case example")," and the ",(0,r.mdx)("a",{parentName:"p",href:"/express-add-ons-docs/samples.md"},"export-sample")," in the code samples for usage examples."),(0,r.mdx)("h3",{id:"errors-1"},"Errors"),(0,r.mdx)("p",null,"The table below describes the possible error messages that may occur when using the export methods, with a description of the scenario that will return them."),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:"right"},"Error Message"),(0,r.mdx)("th",{parentName:"tr",align:"right"},"Error Scenario"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"Invalid range: ",(0,r.mdx)("inlineCode",{parentName:"td"},"${options.range}")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Range value is invalid.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"No active page available."),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Range is ",(0,r.mdx)("inlineCode",{parentName:"td"},"Range.currentPage")," and there is no active page.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"Unsupported rendition format: ",(0,r.mdx)("inlineCode",{parentName:"td"},"${options.format}")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Rendition format is unsupported.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"Invalid background color: ",(0,r.mdx)("inlineCode",{parentName:"td"},"${options.backgroundColor}")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Background color is invalid.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"Invalid quality parameter: ",(0,r.mdx)("inlineCode",{parentName:"td"},"${options.quality} not in range [0,1]")),(0,r.mdx)("td",{parentName:"tr",align:"right"},"Quality property is invalid in jpeg.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"No video element in the specified range."),(0,r.mdx)("td",{parentName:"tr",align:"right"},"No video is present in the range when trying to export mp4.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:"right"},"USER_NOT_ENTITLED_TO_PREMIUM_CONTENT"),(0,r.mdx)("td",{parentName:"tr",align:"right"},"The user is trying to export premium content but is not entitled to it.")))))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-addonsdk-app-document-md-c305fb8dcbb4c832f8fa.js.map