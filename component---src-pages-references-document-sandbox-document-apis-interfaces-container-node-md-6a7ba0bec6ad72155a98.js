"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[4693],{49489:function(e,n,d){d.r(n),d.d(n,{_frontmatter:function(){return i},default:function(){return p}});var a=d(87462),r=d(45987),t=(d(15007),d(64983)),o=d(91515);const m=["components"],i={},l={_frontmatter:i},s=o.Z;function p(e){let{components:n}=e,d=(0,r.Z)(e,m);return(0,t.mdx)(s,(0,a.Z)({},l,d,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("p",null,(0,t.mdx)("a",{parentName:"p",href:"../overview.md"},"@express-document-sdk")," / ContainerNode"),(0,t.mdx)("h1",{id:"interface-containernode"},"Interface: ContainerNode"),(0,t.mdx)("p",null,"Interface for any node that contains an entirely generic collection of children. Some ContainerNode classes may host\n",(0,t.mdx)("em",{parentName:"p"},"additional"),' children in other specific "slots," such as background or mask layers; and non-ContainerNode classes may\nalso hold children in specified "slots." Use ',(0,t.mdx)("a",{parentName:"p",href:"../classes/Node.md#allchildren"},"allChildren")," for read access to children regardless of node type."),(0,t.mdx)("p",null,"Some ContainerNode classes may be full-fledged Node subclasses (such as Group), while others may be a subclass of the\nmore minimal BaseNode (such as Artboard)."),(0,t.mdx)("h2",{id:"hierarchy"},"Hierarchy"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},(0,t.mdx)("a",{parentName:"p",href:"../classes/BaseNode.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"BaseNode"))),(0,t.mdx)("p",{parentName:"li"},"↳ ",(0,t.mdx)("strong",{parentName:"p"},(0,t.mdx)("inlineCode",{parentName:"strong"},"ContainerNode"))))),(0,t.mdx)("h2",{id:"implemented-by"},"Implemented by"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"../classes/ArtboardNode.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"ArtboardNode"))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("a",{parentName:"li",href:"../classes/GroupNode.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"GroupNode")))),(0,t.mdx)("h2",{id:"accessors"},"Accessors"),(0,t.mdx)("h3",{id:"allchildren"},"allChildren"),(0,t.mdx)("p",null,"• ",(0,t.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,t.mdx)("strong",{parentName:"p"},"allChildren"),"(): ",(0,t.mdx)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,t.mdx)("inlineCode",{parentName:"p"},"Iterable"),"<",(0,t.mdx)("a",{parentName:"p",href:"../classes/BaseNode.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"BaseNode")),">",">"),(0,t.mdx)("p",null,"Returns a read-only list of all children of the node. General-purpose content containers such as ArtboardNode or\nGroupNode also provide a mutable ",(0,t.mdx)("a",{parentName:"p",href:"ContainerNode.md#children"},"children"),' list. Other nodes with a more specific structure can\nhold children in various discrete "slots"; this ',(0,t.mdx)("inlineCode",{parentName:"p"},"allChildren")," list includes ",(0,t.mdx)("em",{parentName:"p"},"all")," such children and reflects their\noverall display z-order."),(0,t.mdx)("p",null,"Although BaseNode's allChildren may yield other BaseNodes, the subclasses Node and ArtboardNode override allChildren\nto guarantee all their children are full-fledged Node instances."),(0,t.mdx)("h4",{id:"returns"},"Returns"),(0,t.mdx)("p",null,(0,t.mdx)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,t.mdx)("inlineCode",{parentName:"p"},"Iterable"),"<",(0,t.mdx)("a",{parentName:"p",href:"../classes/BaseNode.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"BaseNode")),">",">"),(0,t.mdx)("h4",{id:"inherited-from"},"Inherited from"),(0,t.mdx)("p",null,"BaseNode.allChildren"),(0,t.mdx)("hr",null),(0,t.mdx)("h3",{id:"children"},"children"),(0,t.mdx)("p",null,"• ",(0,t.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,t.mdx)("strong",{parentName:"p"},"children"),"(): ",(0,t.mdx)("a",{parentName:"p",href:"../classes/ItemList.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"ItemList")),"<",(0,t.mdx)("a",{parentName:"p",href:"../classes/Node.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"Node")),">"),(0,t.mdx)("p",null,"The node's children. Use the methods on this ItemList object to get, add, and remove children."),(0,t.mdx)("h4",{id:"returns-1"},"Returns"),(0,t.mdx)("p",null,(0,t.mdx)("a",{parentName:"p",href:"../classes/ItemList.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"ItemList")),"<",(0,t.mdx)("a",{parentName:"p",href:"../classes/Node.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"Node")),">"),(0,t.mdx)("hr",null),(0,t.mdx)("h3",{id:"id"},"id"),(0,t.mdx)("p",null,"• ",(0,t.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,t.mdx)("strong",{parentName:"p"},"id"),"(): ",(0,t.mdx)("inlineCode",{parentName:"p"},"string")),(0,t.mdx)("p",null,"A unique identifier for this node that stays the same when the file is closed & reopened, or if the node is\nmoved to a different part of the document."),(0,t.mdx)("h4",{id:"returns-2"},"Returns"),(0,t.mdx)("p",null,(0,t.mdx)("inlineCode",{parentName:"p"},"string")),(0,t.mdx)("h4",{id:"inherited-from-1"},"Inherited from"),(0,t.mdx)("p",null,"BaseNode.id"),(0,t.mdx)("hr",null),(0,t.mdx)("h3",{id:"parent"},"parent"),(0,t.mdx)("p",null,"• ",(0,t.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,t.mdx)("strong",{parentName:"p"},"parent"),"(): ",(0,t.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,t.mdx)("a",{parentName:"p",href:"../classes/BaseNode.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"BaseNode"))),(0,t.mdx)("p",null,"The node's parent. The parent chain will eventually reach ExpressRootNode for all nodes that are part of the document\ncontent."),(0,t.mdx)("p",null,'Nodes that have been deleted are "orphaned," with a parent chain that terminates in ',(0,t.mdx)("inlineCode",{parentName:"p"},"undefined")," without reaching the\nroot node. Such nodes cannot be selected, so it is unlikely to encounter one unless you retain a reference to a node\nthat was part of the document content earlier. Deleted nodes can be reattached to the scenegraph, e.g. via Undo."),(0,t.mdx)("h4",{id:"returns-3"},"Returns"),(0,t.mdx)("p",null,(0,t.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,t.mdx)("a",{parentName:"p",href:"../classes/BaseNode.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"BaseNode"))),(0,t.mdx)("h4",{id:"inherited-from-2"},"Inherited from"),(0,t.mdx)("p",null,"BaseNode.parent"),(0,t.mdx)("hr",null),(0,t.mdx)("h3",{id:"type"},"type"),(0,t.mdx)("p",null,"• ",(0,t.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,t.mdx)("strong",{parentName:"p"},"type"),"(): ",(0,t.mdx)("a",{parentName:"p",href:"../enums/SceneNodeType.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"SceneNodeType"))),(0,t.mdx)("p",null,"The node's type."),(0,t.mdx)("h4",{id:"returns-4"},"Returns"),(0,t.mdx)("p",null,(0,t.mdx)("a",{parentName:"p",href:"../enums/SceneNodeType.md"},(0,t.mdx)("inlineCode",{parentName:"a"},"SceneNodeType"))),(0,t.mdx)("h4",{id:"inherited-from-3"},"Inherited from"),(0,t.mdx)("p",null,"BaseNode.type"),(0,t.mdx)("h2",{id:"methods"},"Methods"),(0,t.mdx)("h3",{id:"removefromparent"},"removeFromParent"),(0,t.mdx)("p",null,"▸ ",(0,t.mdx)("strong",{parentName:"p"},"removeFromParent"),"(): ",(0,t.mdx)("inlineCode",{parentName:"p"},"void")),(0,t.mdx)("p",null,"Removes the node from its parent - effectively deleting it, if the node is not re-added to another parent before the\ndocument is closed."),(0,t.mdx)("p",null,"If parent is a basic ContainerNode, this is equivalent to ",(0,t.mdx)("inlineCode",{parentName:"p"},"node.parent.children.remove(node)"),'. For nodes with other\nchild "slots," removes the child from whichever slot it resides in, if possible. Throws if the slot does not permit\nremoval. No-op if node is already an orphan.'),(0,t.mdx)("h4",{id:"returns-5"},"Returns"),(0,t.mdx)("p",null,(0,t.mdx)("inlineCode",{parentName:"p"},"void")),(0,t.mdx)("h4",{id:"inherited-from-4"},"Inherited from"),(0,t.mdx)("p",null,(0,t.mdx)("a",{parentName:"p",href:"../classes/BaseNode.md"},"BaseNode"),".",(0,t.mdx)("a",{parentName:"p",href:"../classes/BaseNode.md#removefromparent"},"removeFromParent")))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-document-sandbox-document-apis-interfaces-container-node-md-6a7ba0bec6ad72155a98.js.map