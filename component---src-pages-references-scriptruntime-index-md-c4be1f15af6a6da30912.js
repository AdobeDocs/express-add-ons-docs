"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[7014],{73862:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return d},default:function(){return h}});var i,a=n(87462),o=n(63366),m=(n(15007),n(64983)),r=n(91515),s=["components"],d={},p=(i="InlineAlert",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.mdx)("div",e)}),c={_frontmatter:d},u=r.Z;function h(e){var t=e.components,n=(0,o.Z)(e,s);return(0,m.mdx)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"script-runtime"},"Script Runtime"),(0,m.mdx)("p",null,"The script runtime is a sandboxed JavaScript execution environment based on ",(0,m.mdx)("a",{parentName:"p",href:"https://bellard.org/quickjs/"},"QuickJS")," which allows to execute third-party JavaScript code securely and synchronously in another JavaScript environment."),(0,m.mdx)(p,{slots:"text",variant:"warning",mdxType:"InlineAlert"}),(0,m.mdx)("p",null,"The script runtime references are currently ",(0,m.mdx)("strong",{parentName:"p"},"experimental only"),", so you will need to set ",(0,m.mdx)("inlineCode",{parentName:"p"},"experimentalApi")," flag to ",(0,m.mdx)("inlineCode",{parentName:"p"},"true")," in the ",(0,m.mdx)("a",{parentName:"p",href:"../manifest/index.md#requirements"},(0,m.mdx)("inlineCode",{parentName:"a"},"requirements"))," section of the ",(0,m.mdx)("inlineCode",{parentName:"p"},"manifest.json")," to use them. ",(0,m.mdx)("em",{parentName:"p"},"Please do not use these APIs in any add-ons you plan to distribute or submit with updates until they have been deemed stable.")),(0,m.mdx)("h2",{id:"overview"},"Overview"),(0,m.mdx)("p",null,"The script runtime exposes three categories of APIs, which each have their own specific references and are outlined below."),(0,m.mdx)("h3",{id:"communication-apis"},"Communication APIs"),(0,m.mdx)("p",null,"The ",(0,m.mdx)("a",{parentName:"p",href:"./communication/"},"communication APIs")," allow you to communicate between the script runtime and the iframe runtime where your add-on is running via exposed APIs.  "),(0,m.mdx)("h3",{id:"common-apis"},"Common APIs"),(0,m.mdx)("p",null,"The ",(0,m.mdx)("a",{parentName:"p",href:"./common/"},"common APIs")," are objects and functions injected by the script runtime to allow you the ability to access common utility functions in your JavaScript. "),(0,m.mdx)("h3",{id:"editor-apis"},"Editor APIs"),(0,m.mdx)("p",null,"The ",(0,m.mdx)("a",{parentName:"p",href:"./editor/"},"editor APIs")," provide access to the user's document structure and properties, and allow you to make changes to it via high-level authoring APIs. "),(0,m.mdx)("h2",{id:"script-runtime-javascript-engine"},"Script Runtime JavaScript Engine"),(0,m.mdx)("p",null,"The script runtime is based on ",(0,m.mdx)("a",{parentName:"p",href:"https://bellard.org/quickjs/"},"QuickJS")," and implements a subset of the ",(0,m.mdx)("a",{parentName:"p",href:"https://tc39.es/ecma262/"},"ES2020 specification"),". "),(0,m.mdx)("p",null,"Some key concepts to note about the script runtime include:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"Limited access to browser APIs (see the ",(0,m.mdx)("a",{parentName:"li",href:"./common/"},"Common APIs")," reference). Note however, you can use the ",(0,m.mdx)("a",{parentName:"li",href:"./communication/"},"communication APIs")," to expose browser APIs (ie: ",(0,m.mdx)("inlineCode",{parentName:"li"},"fetch"),") from the iframe environment to be used in the script runtime."),(0,m.mdx)("li",{parentName:"ul"},"Runs in a slower execution environment."),(0,m.mdx)("li",{parentName:"ul"},"Provides no debugging capabilities other than those provided by the ",(0,m.mdx)("a",{parentName:"li",href:"../common/index.md#injected-objects"},"injected ",(0,m.mdx)("inlineCode",{parentName:"a"},"console")," functions"),"."),(0,m.mdx)("li",{parentName:"ul"},"Runs in the same context/thread as the host's application business logic, (e.g. the authoring worker thread in Adobe Express), thus providing access to interact with it via the injected APIs.")),(0,m.mdx)("h2",{id:"getting-started-with-the-apis"},"Getting Started with the APIs"),(0,m.mdx)("p",null,"The methods defined in the ",(0,m.mdx)("a",{parentName:"p",href:"./communication/"},"communication API reference")," are used to expose and use the API proxies between the iframe and script environments of your add-on. Start with the ",(0,m.mdx)("a",{parentName:"p",href:"./communication/"},"communication reference")," to learn more about how to expose APIs and use them from either  environment."),(0,m.mdx)("h3",{id:"script-entry-point"},"Script entry point"),(0,m.mdx)("p",null,"To use the script runtime in your add-on, start by defining a new ",(0,m.mdx)("inlineCode",{parentName:"p"},"script")," entry point in your ",(0,m.mdx)("inlineCode",{parentName:"p"},"manifest.json")," file with the value set to the name of the file containing the JavaScript code you're using with the script runtime functions: "),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-json"},'    "entryPoints": [\n        {\n            "type": "panel",\n            "id": "panel1",\n            "main": "index.html",\n            "script": "code.js" \n        }\n    ]\n')),(0,m.mdx)("p",null,"The JavaScript code in the file referenced can then access any of the injected global objects and module APIs defined in all of the APIs outlined in this set of references (",(0,m.mdx)("a",{parentName:"p",href:"./communication/"},"communication APIs"),", ",(0,m.mdx)("a",{parentName:"p",href:"./common/"},"common APIs")," and ",(0,m.mdx)("a",{parentName:"p",href:"./editor/"},"editor APIs"),"."),(0,m.mdx)("h2",{id:"code-samples"},"Code Samples"),(0,m.mdx)("p",null,"The following ",(0,m.mdx)("a",{parentName:"p",href:"https://github.com/AdobeDocs/express-add-on-samples/tree/main/script-runtime-samples"},"code samples")," have been provided to help you get started using these new script runtime APIs."),(0,m.mdx)("h3",{id:"communication-iframe-script-runtime-sample"},(0,m.mdx)("a",{parentName:"h3",href:"https://github.com/AdobeDocs/express-add-on-samples/tree/main/script-runtime-samples/communication-iframe-script-runtime"},"communication-iframe-script-runtime sample")),(0,m.mdx)("p",null,"Demonstrates the use of the communication APIs to expose and proxy APIs bidirectionally between the iframe and script runtime environments. Also includes demonstrating how to use some of the ",(0,m.mdx)("a",{parentName:"p",href:"./common/"},"common APIs")," such as ",(0,m.mdx)("inlineCode",{parentName:"p"},"setTimeout()")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"console.log()"),"."),(0,m.mdx)("h3",{id:"editor-apis-sample"},(0,m.mdx)("a",{parentName:"h3",href:"https://github.com/AdobeDocs/express-add-on-samples/tree/main/script-runtime-samples/editor-apis"},"editor-apis sample")),(0,m.mdx)("p",null,"Demonstrates how to use the ",(0,m.mdx)("a",{parentName:"p",href:"./editor/"},"editor APIs")," to create various shapes and add them to the document. "),(0,m.mdx)("h3",{id:"image-and-page-sample"},(0,m.mdx)("a",{parentName:"h3",href:"https://github.com/AdobeDocs/express-add-on-samples/tree/main/script-runtime-samples/image-and-page"},"image-and-page sample")),(0,m.mdx)("p",null,"A more comprehensive example of using the ",(0,m.mdx)("a",{parentName:"p",href:"./editor/"},"editor APIs")," to add a page, images and shapes, as well as clear the artboard."))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-scriptruntime-index-md-c4be1f15af6a6da30912.js.map