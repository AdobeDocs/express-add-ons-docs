{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-interfaces-container-node-md-b793765f7eb6ee43512a.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/interfaces/ContainerNode.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / ContainerNode`}</p>\n    <h1 {...{\n      \"id\": \"interface-containernode\"\n    }}>{`Interface: ContainerNode`}</h1>\n    <p>{`Interface for any node that contains an entirely generic collection of children. Some ContainerNode classes may host\n`}<em parentName=\"p\">{`additional`}</em>{` children in other specific \"slots,\" such as background or mask layers; and non-ContainerNode classes may\nalso hold children in specified \"slots.\" Use `}<a parentName=\"p\" {...{\n        \"href\": \"../classes/Node.md#allchildren\"\n      }}>{`allChildren`}</a>{` for read access to children regardless of node type.`}</p>\n    <p>{`Some ContainerNode classes may be full-fledged Node subclasses (such as Group), while others may be a subclass of the\nmore minimal BaseNode (such as Artboard).`}</p>\n    <h2 {...{\n      \"id\": \"hierarchy\"\n    }}>{`Hierarchy`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"../classes/BaseNode.md\"\n          }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></p>\n        <p parentName=\"li\">{`↳ `}<strong parentName=\"p\"><inlineCode parentName=\"strong\">{`ContainerNode`}</inlineCode></strong></p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"implemented-by\"\n    }}>{`Implemented by`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../classes/ArtboardNode.md\"\n        }}><inlineCode parentName=\"a\">{`ArtboardNode`}</inlineCode></a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../classes/GroupNode.md\"\n        }}><inlineCode parentName=\"a\">{`GroupNode`}</inlineCode></a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessors\"\n    }}>{`Accessors`}</h2>\n    <h3 {...{\n      \"id\": \"allchildren\"\n    }}>{`allChildren`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`allChildren`}</strong>{`(): `}<inlineCode parentName=\"p\">{`Readonly`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`Iterable`}</inlineCode>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"../classes/BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a>{`>`}{`>`}</p>\n    <p>{`Returns a read-only list of all children of the node. General-purpose content containers such as ArtboardNode or\nGroupNode also provide a mutable `}<a parentName=\"p\" {...{\n        \"href\": \"ContainerNode.md#children\"\n      }}>{`children`}</a>{` list. Other nodes with a more specific structure can\nhold children in various discrete \"slots\"; this `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` list includes `}<em parentName=\"p\">{`all`}</em>{` such children and reflects their\noverall display z-order.`}</p>\n    <p>{`Although BaseNode's allChildren may yield other BaseNodes, the subclasses Node and ArtboardNode override allChildren\nto guarantee all their children are full-fledged Node instances.`}</p>\n    <h4 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`Readonly`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`Iterable`}</inlineCode>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"../classes/BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a>{`>`}{`>`}</p>\n    <h4 {...{\n      \"id\": \"inherited-from\"\n    }}>{`Inherited from`}</h4>\n    <p>{`BaseNode.allChildren`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"children\"\n    }}>{`children`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`children`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"../classes/ItemList.md\"\n      }}><inlineCode parentName=\"a\">{`ItemList`}</inlineCode></a>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"../classes/Node.md\"\n      }}><inlineCode parentName=\"a\">{`Node`}</inlineCode></a>{`>`}</p>\n    <p>{`The node's children. Use the methods on this ItemList object to get, add, and remove children.`}</p>\n    <h4 {...{\n      \"id\": \"returns-1\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../classes/ItemList.md\"\n      }}><inlineCode parentName=\"a\">{`ItemList`}</inlineCode></a>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"../classes/Node.md\"\n      }}><inlineCode parentName=\"a\">{`Node`}</inlineCode></a>{`>`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"parent\"\n    }}>{`parent`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`parent`}</strong>{`(): `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"../classes/BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></p>\n    <p>{`The node's parent. The parent chain will eventually reach ExpressRootNode for all nodes that are part of the document\ncontent.`}</p>\n    <p>{`Nodes that have been deleted are \"orphaned,\" with a parent chain that terminates in `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` without reaching the\nroot node. Such nodes cannot be selected, so it is unlikely to encounter one unless you retain a reference to a node\nthat was part of the document content earlier. Deleted nodes can be reattached to the scenegraph, e.g. via Undo.`}</p>\n    <h4 {...{\n      \"id\": \"returns-2\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"../classes/BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"inherited-from-1\"\n    }}>{`Inherited from`}</h4>\n    <p>{`BaseNode.parent`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"type\"\n    }}>{`type`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`type`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"../enums/SceneNodeType.md\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeType`}</inlineCode></a></p>\n    <p>{`The node's type.`}</p>\n    <h4 {...{\n      \"id\": \"returns-3\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../enums/SceneNodeType.md\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeType`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"inherited-from-2\"\n    }}>{`Inherited from`}</h4>\n    <p>{`BaseNode.type`}</p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"removefromparent\"\n    }}>{`removeFromParent`}</h3>\n    <p>{`▸ `}<strong parentName=\"p\">{`removeFromParent`}</strong>{`(): `}<inlineCode parentName=\"p\">{`void`}</inlineCode></p>\n    <p>{`Removes the node from its parent - effectively deleting it, if the node is not re-added to another parent before the\ndocument is closed.`}</p>\n    <p>{`If parent is a basic ContainerNode, this is equivalent to `}<inlineCode parentName=\"p\">{`node.parent.children.remove(node)`}</inlineCode>{`. For nodes with other\nchild \"slots,\" removes the child from whichever slot it resides in, if possible. Throws if the slot does not permit\nremoval. No-op if node is already an orphan.`}</p>\n    <h4 {...{\n      \"id\": \"returns-4\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`void`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"inherited-from-3\"\n    }}>{`Inherited from`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../classes/BaseNode.md\"\n      }}>{`BaseNode`}</a>{`.`}<a parentName=\"p\" {...{\n        \"href\": \"../classes/BaseNode.md#removefromparent\"\n      }}>{`removeFromParent`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}