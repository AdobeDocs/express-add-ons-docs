{"version":3,"file":"component---src-pages-guides-develop-use-cases-content-authoring-md-67cfb9e2b826f857d306.js","mappings":"0TAMaA,EAAe,CAAC,EACvBC,EAAgBC,GAAQ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,EACMI,EAAcN,EAAc,eAC5BO,EAAYP,EAAc,aAC1BQ,EAAc,CAClBT,gBAEIU,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIV,GAAKY,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOV,EAAAA,EAAAA,KAACI,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBN,EAAK,CAAEW,WAAYA,EAAYI,QAAQ,eAG5EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,kCACJ,mCACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,mCACJ,oCACJA,EAAAA,EAAAA,KAAA,SAAI,wBAAuBA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACrC,KAAQ,oEACN,iBAAqB,8IAC3Bb,EAAAA,EAAAA,KAAA,SAAI,0DAAyDA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACvE,KAAQ,oEACN,iBAAqB,qCAAoCb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACzE,KAAQ,6FACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,YAA4B,+JAC7Db,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,2nBAmBNb,EAAAA,EAAAA,KAACC,EAAW,CAACa,MAAM,OAAOC,QAAQ,OAAOH,QAAQ,iBACjDZ,EAAAA,EAAAA,KAAA,SAAI,aAAYA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC1B,KAAQ,4FACN,6CAAiD,4FAA2Fb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC5J,KAAQ,kCACN,2BAA+B,2EACrCb,EAAAA,EAAAA,KAAA,MACE,GAAM,8BACJ,+BACJA,EAAAA,EAAAA,KAAA,SAAI,2EAA0EA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACxF,KAAQ,6DACN,iCAAqC,yMAAwMb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,qBAAkC,oDAAmDb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,uBAAoC,qCACpab,EAAAA,EAAAA,KAAA,MACE,GAAM,8BACJ,+BACJA,EAAAA,EAAAA,KAAA,SAAI,sCAAqCA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,qBAAkC,iCACvGb,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,YACJA,EAAAA,EAAAA,KAACE,EAAS,CAACY,MAAM,gBAAgBE,OAAO,IAAIC,UAAU,aAAaL,QAAQ,eAC3EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,SACJ,UACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,gSAUNb,EAAAA,EAAAA,KAAA,MACE,GAAM,iCACJ,kCACJA,EAAAA,EAAAA,KAAA,SAAI,sCAAqCA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,uBAAoC,iCACzGb,EAAAA,EAAAA,KAAA,MACE,GAAM,aACJ,YACJA,EAAAA,EAAAA,KAACE,EAAS,CAACY,MAAM,gBAAgBE,OAAO,IAAIC,UAAU,aAAaL,QAAQ,eAC3EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,UACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,oTAUNb,EAAAA,EAAAA,KAAA,MACE,GAAM,4BACJ,6BACJA,EAAAA,EAAAA,KAAA,SAAI,wEAAuEA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACrF,KAAQ,+EACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,uBAAuC,mBAAkBb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,2BAAwC,4CAC9Jb,EAAAA,EAAAA,KAACE,EAAS,CAACY,MAAM,gBAAgBE,OAAO,IAAIC,UAAU,aAAaL,QAAQ,eAC3EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,UACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,2kCA+BV,CAEAP,EAAWY,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/guides/develop/use_cases/content_authoring.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"content-authoring-and-metadata\"\n    }}>{`Content Authoring and Metadata`}</h1>\n    <h2 {...{\n      \"id\": \"authoring-adobe-express-content\"\n    }}>{`Authoring Adobe Express Content`}</h2>\n    <p>{`We provide a set of `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/\"\n      }}>{`Document APIs`}</a>{` that can be used to interact with the document for common use cases like creating shapes, adding pages, clearing the artboard, and more.`}</p>\n    <p>{`The following code snippet illustrates how to use the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/\"\n      }}>{`Document APIs`}</a>{` from the script running in your `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/index.md#getting-started-with-the-apis\"\n      }}><inlineCode parentName=\"a\">{`code.js`}</inlineCode></a>{`; for instance, to access the current document, create a rectangle, set some properties and a fill for the rectangle, and finally, add it to the document.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { editor, colorUtils } from \"express-document-sdk\";\n\nconst insertionParent = editor.context.insertionParent; // get node to insert content into\n\nconst rectangle = editor.createRectangle();\nrectangle.width = 200;\nrectangle.height = 150;\nrectangle.translation = { x: 100, y: 20 };\nconsole.log(rectangle); // for debugging purpose\n\nconst [red, green, blue, alpha] = [0.8, 0.6, 0.2, 0.7];\n// Note: alpha param is optional\nconst aColor = colorUtils.fromRGB(red,green,blue,alpha)\n\nconst rectangleFill = editor.makeColorFill(aColor);\nrectangle.fill = rectangleFill;\n\ninsertionParent.children.append(rectangle);\n`}</code></pre>\n    <InlineAlert slots=\"text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/index.md#getting-started-with-the-apis\"\n      }}>{`getting started with the Document Sandbox`}</a>{` for more details on how to set up your add-on to use the script-based APIs, as well as `}<a parentName=\"p\" {...{\n        \"href\": \"../../tutorials/grids-addon.md\"\n      }}>{`this extensive tutorial`}</a>{` provided to help you build your first add-on using the Document APIs.`}</p>\n    <h2 {...{\n      \"id\": \"document-and-page-metadata\"\n    }}>{`Document and Page Metadata`}</h2>\n    <p>{`You can retrieve some information about the current document using the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/addonsdk/app-document.md\"\n      }}>{`Add-on UI SDK Document object`}</a>{`. Currently, there are methods that allow you to retrieve the ID of the document and the title (i.e., name). Also, associated events will let you listen for when the document is available (via the `}<inlineCode parentName=\"p\">{`documentAvailable`}</inlineCode>{` event) and when the title has changed (via the `}<inlineCode parentName=\"p\">{`documentTitleChange`}</inlineCode>{` event). See the examples below.`}</p>\n    <h3 {...{\n      \"id\": \"retrieving-the-document-id\"\n    }}>{`Retrieving the Document ID`}</h3>\n    <p>{`The example below listens for the `}<inlineCode parentName=\"p\">{`documentAvailable`}</inlineCode>{` event and then sets the id.`}</p>\n    <h4 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h4>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnUISdk from \"https://new.express.adobe.com/static/add-on-sdk/sdk.js\";\n\nfunction setId(id) { /* ... */ } \n  \naddOnUISdk.ready.then(() => setId(await addOnUISdk.app.document.id()));\n  \naddOnUISdk.app.on(\"documentAvailable\", data => {\n  setId(data.documentId);\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"retrieving-the-document-title\"\n    }}>{`Retrieving the document title`}</h3>\n    <p>{`The example below listens for the `}<inlineCode parentName=\"p\">{`documentTitleChange`}</inlineCode>{` event and then sets the id.`}</p>\n    <h4 {...{\n      \"id\": \"example-1\"\n    }}>{`Example`}</h4>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"usage-1\"\n    }}>{`Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnUISdk from \"https://new.express.adobe.com/static/add-on-sdk/sdk.js\";\n\nfunction setTitle(title) { /* ... */ } \n  \naddOnUISdk.ready.then(() => setTitle(await addOnUISdk.app.document.title()));\n  \naddOnUISdk.app.on(\"documentTitleChange\", data => {\n  setTitle(data.documentTitle);\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"retrieving-page-metadata\"\n    }}>{`Retrieving page metadata`}</h3>\n    <p>{`If you want to retrieve metadata for pages in the document, use the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/addonsdk/app-document.md#getpagesmetadata\"\n      }}><inlineCode parentName=\"a\">{`getPagesMetadata()`}</inlineCode></a>{` method in the `}<inlineCode parentName=\"p\">{`addOnUISdk.app.document`}</inlineCode>{` object, as shown in the example below.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"usage-2\"\n    }}>{`Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnUISdk from \"https://new.express.adobe.com/static/add-on-sdk/sdk.js\";\n\n// Wait for the SDK to be ready\nawait addOnUISdk.ready;\n \n// Get metadata of all the pages\nasync function logMetadata() {\n  try {\n    const pages = (await addOnUISdk.app.document.getPagesMetadata({\n                            range: addOnUISdk.constants.Range.specificPages,\n                            pageIds: [\n                                \"7477a5e7-02b2-4b8d-9bf9-f09ef6f8b9fc\",\n                                \"d45ba3fc-a3df-4a87-80a5-655e5f8f0f96\"\n                            ]\n                        })) as PageMetadata[];\n    for (const page of pages) {\n      console.log(\"Page id: \", page.id);\n      console.log(\"Page title: \", page.title);\n      console.log(\"Page size: \", page.size);\n      console.log(\"Page has premium content: \", page.hasPremiumContent);\n      console.log(\"Page has timelines: \", page.hasTemporalContent);\n      console.log(\"Pixels per inch: \", page.pixelsPerInch);\n    }\n  }\n  catch(error) {\n    console.log(\"Failed to get metadata:\", error);\n  }\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","InlineAlert","CodeBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","repeat","languages","isMDXComponent"],"sourceRoot":""}