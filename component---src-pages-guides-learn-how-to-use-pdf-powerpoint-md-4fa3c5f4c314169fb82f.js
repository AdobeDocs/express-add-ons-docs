"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6719],{36581:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return r},default:function(){return m}});var n=a(58168),o=a(80045),d=(a(88763),a(15680)),p=a(83407);const s=["components"],r={},i={_frontmatter:r},c=p.A;function m(e){let{components:t}=e,a=(0,o.A)(e,s);return(0,d.mdx)(c,(0,n.A)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"use-pdf-and-powerpoint"},"Use PDF and PowerPoint"),(0,d.mdx)("h2",{id:"import-pdf-into-the-page"},"Import PDF into the page"),(0,d.mdx)("p",null,"You can add PDFs to the page using the ",(0,d.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/app-document.md#importpdf"},(0,d.mdx)("inlineCode",{parentName:"a"},"importPdf()"))," method of the ",(0,d.mdx)("inlineCode",{parentName:"p"},"addOnUISdk.app.document")," object, which expects a ",(0,d.mdx)("inlineCode",{parentName:"p"},"Blob")," object as an argument and a ",(0,d.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/app-document.md#mediaattributes"},(0,d.mdx)("inlineCode",{parentName:"a"},"MediaAttribute"))," object with a title (mandatory) and author (optional) as the second."),(0,d.mdx)("p",null,"PDF and PowerPoint imports will trigger a consent dialogue that asks the user to confirm the process; it's not possible to bypass it. As soon as the process starts, another dialogue will preview the PDF and track the operation progress."),(0,d.mdx)("p",null,(0,d.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,d.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"41.5625%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,d.mdx)("picture",{parentName:"span"},"\n          ",(0,d.mdx)("source",{parentName:"picture",srcSet:["/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/5530d/pdf_import.webp 320w","/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/0c8fb/pdf_import.webp 640w","/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/94b1e/pdf_import.webp 1280w","/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/0b34d/pdf_import.webp 1920w","/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/f3963/pdf_import.webp 2500w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,d.mdx)("source",{parentName:"picture",srcSet:["/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/dd4a7/pdf_import.png 320w","/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/0f09e/pdf_import.png 640w","/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/bbbf7/pdf_import.png 1280w","/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/ac7a9/pdf_import.png 1920w","/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/6482f/pdf_import.png 2500w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/png"}),"\n          ",(0,d.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/bbbf7/pdf_import.png",alt:"PDF Import dialogue",title:"PDF Import dialogue",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")),(0,d.mdx)("p",null,"Supported vector elements will be kept editable (e.g., shapes with rounded corners, text, etc.), and all pages will be imported."),(0,d.mdx)("h3",{id:"example"},"Example"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://express.adobe.com/static/add-on-sdk/sdk.js";\n\naddOnUISdk.ready.then(async () => {\n  try {\n    const pdfUrl = "https://url/to/your/file.pdf";\n\n    const pdf = await fetch(pdfUrl);\n    const pdfBlob = await pdf.blob();\n\n    await addOnUISdk.app.document.importPdf(\n      pdfBlob, // ðŸ‘ˆ Blob object\n      {\n        title: "Official Launch Party",\n        author: "Adobe",\n      }\n    );\n  } catch (e) {\n    console.error("Failed to add the PDF", e);\n  }\n});\n')),(0,d.mdx)("p",null,"Please note that you can use ",(0,d.mdx)("inlineCode",{parentName:"p"},"fetch()")," also to get PDFs that are local to the add-on; in this case, you can use paths relative to the add-on's root."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://express.adobe.com/static/add-on-sdk/sdk.js";\n\naddOnUISdk.ready.then(async () => {\n  try {\n    // ðŸ‘‡ Local PDF\n     const pdfUrl = "./OfficialLaunchParty.pdf";\n    const pdf = await fetch(pdfUrl);\n    // ... same as before\n')),(0,d.mdx)("h3",{id:"importing-converted-documents"},"Importing converted documents"),(0,d.mdx)("p",null,"If your add-on converts Word documents (",(0,d.mdx)("inlineCode",{parentName:"p"},".docx"),") or Google Docs (",(0,d.mdx)("inlineCode",{parentName:"p"},".gdoc"),") to PDF before importing, you can use the ",(0,d.mdx)("inlineCode",{parentName:"p"},"sourceMimeType"),' parameter to improve the user experience. When specified, the import consent dialog displays the message "Import a document" rather than the default "Import a PDF".'),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},'// Import a PDF that was converted from a Word document\nawait addOnUISdk.app.document.importPdf(convertedPdfBlob, {\n  title: "Converted Document",\n  sourceMimeType: "docx" // Shows "Import a document" in the dialog\n});\n')),(0,d.mdx)("h2",{id:"import-powerpoint-into-the-page"},"Import PowerPoint into the page"),(0,d.mdx)("p",null,"For PowerPoint files, the process is similar to the one for PDFs, but you need to use the ",(0,d.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/app-document.md#importpresentation"},(0,d.mdx)("inlineCode",{parentName:"a"},"importPowerPoint()"))," method instead. The method supports both ",(0,d.mdx)("inlineCode",{parentName:"p"},".pptx")," and ",(0,d.mdx)("inlineCode",{parentName:"p"},".ppt")," files, and shows the same consent and progress dialogues as seen above."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://express.adobe.com/static/add-on-sdk/sdk.js";\n\naddOnUISdk.ready.then(async () => {\n  try {\n    const powerPointUrl = "https://url/to/your/file.pptx";\n    // Or\n    // const powerPointUrl = "./OfficialLaunchParty.pptx";\n\n    const powerPoint = await fetch(powerPointUrl);\n    const powerPointBlob = await powerPoint.blob();\n\n    await addOnUISdk.app.document.importPowerPoint(\n      powerPointBlob, // ðŸ‘ˆ Blob object\n      {\n        title: "Official Launch Party",\n        author: "Adobe",\n      }\n    );\n  } catch (e) {\n    console.error("Failed to add the PDF", e);\n  }\n});\n')))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-learn-how-to-use-pdf-powerpoint-md-4fa3c5f4c314169fb82f.js.map