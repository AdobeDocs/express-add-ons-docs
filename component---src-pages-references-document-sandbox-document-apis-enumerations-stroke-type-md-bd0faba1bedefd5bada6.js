"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[3434],{57151:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return s},default:function(){return c}});var o=t(58168),r=t(80045),a=(t(88763),t(15680)),d=t(83407);const m=["components"],s={},i=(l="InlineAlert",function(e){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.mdx)("div",e)});var l;const p={_frontmatter:s},u=d.A;function c(e){let{components:n}=e,t=(0,r.A)(e,m);return(0,a.mdx)(u,(0,o.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,(0,a.mdx)("a",{parentName:"p",href:"../overview.md"},"@express-document-sdk")," / StrokeType"),(0,a.mdx)("h1",{id:"enumeration-stroketype"},"Enumeration: StrokeType"),(0,a.mdx)(i,{slots:"text",variant:"warning",mdxType:"InlineAlert"}),(0,a.mdx)("p",null,(0,a.mdx)("em",{parentName:"p"},"Do not depend on the literal string values of these constants"),", as they may change. Always reference the enum identifiers in your code."),(0,a.mdx)(i,{slots:"text",variant:"warning",mdxType:"InlineAlert"}),(0,a.mdx)("p",null,(0,a.mdx)("em",{parentName:"p"},"Additional stroke types may be added in the future.")," If your code has different branches or cases depending on stroke type,\nalways have a default/fallback case to handle any unknown values you may encounter."),(0,a.mdx)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,a.mdx)("h3",{id:"color"},"color"),(0,a.mdx)("p",null,"â€¢ ",(0,a.mdx)("strong",{parentName:"p"},"color"),": ",(0,a.mdx)("inlineCode",{parentName:"p"},'"Color"')),(0,a.mdx)("p",null,"A solid-color stroke, with optional dashes."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-document-sandbox-document-apis-enumerations-stroke-type-md-bd0faba1bedefd5bada6.js.map