{"version":3,"file":"component---src-pages-references-addonsdk-instance-runtime-md-f88a7c4db47dae27b76f.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/addonsdk/instance-runtime.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"addonsdkinstanceruntime\"\n    }}>{`AddOnSdk.instance.runtime`}</h1>\n    <p>{`Represents the runtime of the current add-on.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"type\"\n    }}><inlineCode parentName=\"h3\">{`type`}</inlineCode></h3>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"addonsdk-constants.md\"\n      }}>{`RuntimeType`}</a>{` constant representing the entrypoint creating this backend object (ie: `}<inlineCode parentName=\"p\">{`\"panel\"`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`\"dialog\"`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`\"script\"`}</inlineCode>{`).`}</p>\n    <h3 {...{\n      \"id\": \"dialog\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"../addonsdk/runtime-dialog.md\"\n      }}><inlineCode parentName=\"a\">{`Dialog`}</inlineCode></a></h3>\n    <p>{`(Optional) When the `}<inlineCode parentName=\"p\">{`RuntimeType`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`\"dialog\"`}</inlineCode>{`, this object will contain the reference to the `}<a parentName=\"p\" {...{\n        \"href\": \"runtime-dialog.md\"\n      }}>{`modal dialog`}</a>{` the add-on invoked, and can be used to programmatically close the dialog and send results back to the caller. Will be `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` when no modal dialog is present. Check out the `}<a parentName=\"p\" {...{\n        \"href\": \"../../guides/develop/use_cases.md#modal-dialogs\"\n      }}>{`modal dialogs use case examples`}</a>{` for more details on using dialogs, as well as the related `}<a parentName=\"p\" {...{\n        \"href\": \"../addonsdk/addonsdk-app.md#showmodaldialog\"\n      }}><inlineCode parentName=\"a\">{`showModalDialog`}</inlineCode>{` method`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"experimental-methods\"\n    }}>{`Experimental Methods`}</h2>\n    <p>{`The following methods allow you to communicate bidirectionally between the add-on running in the iframe and the `}<a parentName=\"p\" {...{\n        \"href\": \"../scriptruntime/\"\n      }}>{`script runtime`}</a>{` environments.`}</p>\n    <p><strong parentName=\"p\">{`IMPORTANT:`}</strong>{` These methods are currently `}<strong parentName=\"p\"><em parentName=\"strong\">{`experimental only`}</em></strong>{` and should not be used in any add-ons you will be distributing until they have been deemed stable. To use these methods, you will first need to set the `}<inlineCode parentName=\"p\">{`experimentalApis`}</inlineCode>{` flag to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in the `}<a parentName=\"p\" {...{\n        \"href\": \"../manifest/index.md#requirements\"\n      }}><inlineCode parentName=\"a\">{`requirements`}</inlineCode></a>{` section of the `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"exposeapi\"\n    }}>{`exposeApi()`}</h3>\n    <p>{`Use this method to expose an API from your UI code running in the iframe to another runtime (ie: the `}<a parentName=\"p\" {...{\n        \"href\": \"../scriptruntime/\"\n      }}>{`script runtime`}</a>{` defined in your `}<inlineCode parentName=\"p\">{`code.js`}</inlineCode>{` for instance).`}</p>\n    <h4 {...{\n      \"id\": \"signature\"\n    }}>{`Signature`}</h4>\n    <p><inlineCode parentName=\"p\">{`exposeApi<T>(obj: T): void`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`obj`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`The concrete object/class instance to expose to other runtimes. This method call is allowed only once. Subsequent calls are ignored. `}<strong parentName=\"td\">{`Note`}</strong>{`: you cannot expose entire classes from one runtime and create an instance of that class in another.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"apiproxy\"\n    }}>{`apiProxy()`}</h3>\n    <p>{`Requests a promise-based proxy object from another runtime to be used to call the APIs exposed by that other runtime via the `}<inlineCode parentName=\"p\">{`exposeApi`}</inlineCode>{` method.`}</p>\n    <h4 {...{\n      \"id\": \"signature-1\"\n    }}>{`Signature`}</h4>\n    <p><inlineCode parentName=\"p\">{`async apiProxy(runtimeType: RuntimeType): Promise<Remote<unknown>>`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"parameters-1\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`runtimeType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`RuntimeType`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`The runtime type to create the proxy object from (ie: \"script\" for instance, which maps to the code referenced in the `}<a parentName=\"td\" {...{\n              \"href\": \"../scriptruntime/index.md#script-entry-point\"\n            }}><inlineCode parentName=\"a\">{`script`}</inlineCode>{` entryPoint`}</a>{` in your add-on's `}<inlineCode parentName=\"td\">{`manifest.js`}</inlineCode>{` file).`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"return\"\n    }}>{`Return`}</h4>\n    <p>{`A promise which resolves to an API proxy object exposed by the desired runtime as soon as the other runtime is finished initializing.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` Calling the method again for the same runtime type will return a new proxy object without any behavior difference.`}</p>\n    <h4 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`AddOnSdk.ready.then(async () => {\n    console.log(\"AddOnSdk is ready for use.\");\n    const { runtime } = AddOnSdk.instance;\n\n    let createShapesButton = document.getElementById(\"createShapesButton\");\n    createShapesButton.addEventListener(\"click\", async (e) => {\n        const scriptApis = await runtime.apiProxy(\"script\");\n        try {\n            let result = await scriptApis.createShapes();\n            console.log(result);\n        } catch (exc) {\n            console.error(exc.message, exc.stack);\n        }\n        \n    });\n});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}