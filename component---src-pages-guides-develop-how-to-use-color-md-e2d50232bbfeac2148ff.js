"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[9903],{82229:function(e,n,o){o.r(n),o.d(n,{_frontmatter:function(){return d},default:function(){return x}});var t=o(58168),r=o(80045),l=(o(88763),o(15680)),a=o(83407);const i=["components"],d={},s=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",n)},m=s("InlineAlert"),c=s("CodeBlock"),p={_frontmatter:d},h=a.A;function x(e){let{components:n}=e,o=(0,r.A)(e,i);return(0,l.mdx)(h,(0,t.A)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"use-color"},"Use Color"),(0,l.mdx)("h2",{id:"create-colors"},"Create colors"),(0,l.mdx)("p",null,"Colors in Adobe Express are created as instances of the ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/interfaces/Color.md"},(0,l.mdx)("inlineCode",{parentName:"a"},"Color"))," class: objects with ",(0,l.mdx)("inlineCode",{parentName:"p"},"red"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"green"),", ",(0,l.mdx)("inlineCode",{parentName:"p"},"blue"),", and ",(0,l.mdx)("inlineCode",{parentName:"p"},"alpha")," (optional) values in the range from 0 to 1. The ",(0,l.mdx)("inlineCode",{parentName:"p"},"alpha")," value represents the opacity of the color, with 0 being fully transparent and 1 fully opaque."),(0,l.mdx)("p",null,"The entrypoint for creating colors is the ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/ColorUtils.md"},(0,l.mdx)("inlineCode",{parentName:"a"},"colorUtils"))," class, imported from the ",(0,l.mdx)("inlineCode",{parentName:"p"},'"express-document-sdk"'),", so we're talking about ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/index.md"},"Document APIs")," here. Especially the static ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/ColorUtils.md#fromrgb"},(0,l.mdx)("inlineCode",{parentName:"a"},"fromRgb()"))," and ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/ColorUtils.md#fromhex"},(0,l.mdx)("inlineCode",{parentName:"a"},"fromHex()"))," methods."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},'// sandbox/code.js\nimport { editor, colorUtils } from "express-document-sdk";\n\n// Alpha is optional, defaults to 1\nconst red = colorUtils.fromRgb(1, 0, 0);\nconst green = colorUtils.fromHex("#00FF00");\n\n// With alpha\nconst feldgrau = colorUtils.fromRgb(0.28, 0.32, 0.39, 0.5); // 50% opacity\nconst heliotrope = colorUtils.fromHex("#C768F780"); // 50% opacity\n')),(0,l.mdx)("p",null,"In case you need it, you can also convert a color to a HEX string using the ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/ColorUtils.md#tohex"},(0,l.mdx)("inlineCode",{parentName:"a"},"toHex()"))," method. Please note that the alpha value is always included in the output string."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},"const red = colorUtils.fromRgb(1, 0, 0);\nconst redHex = colorUtils.toHex(red); // #FF0000FF\n")),(0,l.mdx)("h2",{id:"apply-colors"},"Apply colors"),(0,l.mdx)("p",null,"You can directly set the ",(0,l.mdx)("inlineCode",{parentName:"p"},"color")," property of a Text node via ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/TextContentModel.md#applycharacterstyles"},(0,l.mdx)("inlineCode",{parentName:"a"},"applyCharacterStyles()")),":"),(0,l.mdx)("h3",{id:"example-text-color"},"Example: Text color"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},'// sandbox/code.js\nimport { editor, colorUtils } from "express-document-sdk";\n\n// Assuming the user has selected a text frame\nconst textNode = editor.context.selection[0];\n\n// Apply character styles to the first three letters\ntextNode.fullContent.applyCharacterStyles(\n  { color: colorUtils.fromHex("#E1A141") }, // ðŸ‘ˆ\n  { start: 0, length: 3 }\n);\n')),(0,l.mdx)("p",null,"See the ",(0,l.mdx)("a",{parentName:"p",href:"./use_text.md"},"Use Text")," page for more examples."),(0,l.mdx)("h3",{id:"example-fill-and-stroke-colors"},"Example: Fill and Stroke colors"),(0,l.mdx)("p",null,"Colors are not directly applied, instead, to shapes; more generally, they are used to create ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/interfaces/Fill.md"},(0,l.mdx)("inlineCode",{parentName:"a"},"Fill"))," and ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/interfaces/Stroke.md"},(0,l.mdx)("inlineCode",{parentName:"a"},"Stroke"))," objects with the ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/Editor.md#makecolorfill"},(0,l.mdx)("inlineCode",{parentName:"a"},"editor.makeColorFill()"))," and ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/Editor.md#makestroke"},(0,l.mdx)("inlineCode",{parentName:"a"},"editor.makeStroke()"))," methods, respectively, that you can then apply to ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/FillableNode.md"},(0,l.mdx)("inlineCode",{parentName:"a"},"Fillable"))," and ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/StrokableNode.md"},(0,l.mdx)("inlineCode",{parentName:"a"},"Strokable"))," nodes."),(0,l.mdx)("p",null,"If you're confused, worry not! This is the wondrous word of object oriented programming. The following example should clarify things:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},'// sandbox/code.js\nimport { editor, colorUtils } from "express-document-sdk";\n\n// Create the shape\nconst ellipse = editor.createEllipse();\nellipse.width = 100;\nellipse.height = 50;\nellipse.translation = { x: 50, y: 50 };\n\n// Generate the needed colors\nconst innerColor = colorUtils.fromHex("#A38AF0");\nconst outerColor = colorUtils.fromHex("#2ACfA9");\n\n// Make the colorFill and the Stroke\nconst innerColorFill = editor.makeColorFill(innerColor);\nconst outerColorStroke = editor.makeStroke({\n  color: outerColor,\n  width: 20,\n});\n\n// ðŸ‘‡ Apply the fill and stroke\nellipse.fill = innerColorFill;\nellipse.stroke = outerColorStroke;\n\n// Add the shape to the document\neditor.context.insertionParent.children.append(ellipse);\n')),(0,l.mdx)("p",null,"While the ",(0,l.mdx)("inlineCode",{parentName:"p"},"fill")," property is more straightforward to create, the ",(0,l.mdx)("inlineCode",{parentName:"p"},"color")," is just one of the possible properties of a ",(0,l.mdx)("inlineCode",{parentName:"p"},"stroke"),", as you can read in the ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/interfaces/SolidColorStroke.md"},"SolidColorStroke")," interface reference."),(0,l.mdx)("p",null,"Simplifying the example above:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},'// ...\nellipse.fill = editor.makeColorFill(colorUtils.fromHex("#A38AF0"));\nellipse.stroke = editor.makeStroke({\n  color: colorUtils.fromHex("#2ACfA9"),\n  width: 20,\n});\n// ...\n')),(0,l.mdx)(m,{slots:"header, text",variant:"info",mdxType:"InlineAlert"}),(0,l.mdx)("p",null,"Naming conventions"),(0,l.mdx)("p",null,"Please note that Adobe Express uses the terms ",(0,l.mdx)("strong",{parentName:"p"},"make")," and ",(0,l.mdx)("strong",{parentName:"p"},"create")," to distinguish between plain objects and live document objects. You ",(0,l.mdx)("inlineCode",{parentName:"p"},"makeColorFill()"),", but ",(0,l.mdx)("inlineCode",{parentName:"p"},"createEllipse()"),"."),(0,l.mdx)("h2",{id:"use-the-color-picker"},"Use the Color Picker"),(0,l.mdx)("p",null,"Adobe Express includes a native Color Picker, with special features such as Recommended Swatches, Eyedropper, Themes, Library and Brand colors. The Color Picker is available also to add-ons, you can invoke it using the ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/addonsdk-app.md#showcolorpicker"},(0,l.mdx)("inlineCode",{parentName:"a"},"addOnUISdk.app.showColorPicker()"))," method."),(0,l.mdx)(m,{slots:"text",variant:"warning",mdxType:"InlineAlert"}),(0,l.mdx)("p",null,(0,l.mdx)("strong",{parentName:"p"},"IMPORTANT:")," This is currently ",(0,l.mdx)("strong",{parentName:"p"},(0,l.mdx)("em",{parentName:"strong"},"experimental only"))," and should not be used in any add-ons you will be distributing until it has been declared stable. To use it, you will first need to set the ",(0,l.mdx)("inlineCode",{parentName:"p"},"experimentalApis")," flag to ",(0,l.mdx)("inlineCode",{parentName:"p"},"true")," in the ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/manifest/index.md#requirements"},(0,l.mdx)("inlineCode",{parentName:"a"},"requirements"))," section of the ",(0,l.mdx)("inlineCode",{parentName:"p"},"manifest.json"),"."),(0,l.mdx)("h4",{id:"benefits"},"Benefits"),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"It simplifies the process of selecting a color, bypassing the Browser's color picker."),(0,l.mdx)("li",{parentName:"ul"},"It's in sync with any swatches or Brand colors defined in Adobe Express."),(0,l.mdx)("li",{parentName:"ul"},"It will evolve with Adobe Express, providing a consistent color picking experience across different parts of the application.")),(0,l.mdx)("p",null,"The ",(0,l.mdx)("inlineCode",{parentName:"p"},"showColorPicker()")," method accepts a reference to an HTML element as its first argument, which will become the color picker's anchor element. The picker will be positioned relative to this element, based on the placement options available in the ",(0,l.mdx)("inlineCode",{parentName:"p"},"ColorPickerPlacement")," enum; additionally, the anchor will receive a custom ",(0,l.mdx)("inlineCode",{parentName:"p"},'"colorpicker-color-change"')," event when the color changes and a ",(0,l.mdx)("inlineCode",{parentName:"p"},'"colorpicker-close"')," event when it is closed."),(0,l.mdx)("p",null,"The ",(0,l.mdx)("inlineCode",{parentName:"p"},"showColorPicker()")," method requires an HTML element as its anchor point. Here's how it works:"),(0,l.mdx)("ol",null,(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("strong",{parentName:"li"},"Anchor Element"))),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"Pass an HTML element reference as the first argument."),(0,l.mdx)("li",{parentName:"ul"},"The color picker will position itself relative to this element."),(0,l.mdx)("li",{parentName:"ul"},"Use the ",(0,l.mdx)("inlineCode",{parentName:"li"},"ColorPickerPlacement")," enum to control positioning.")),(0,l.mdx)("ol",{start:2},(0,l.mdx)("li",{parentName:"ol"},(0,l.mdx)("strong",{parentName:"li"},"Event Handling"))),(0,l.mdx)("ul",null,(0,l.mdx)("li",{parentName:"ul"},"The anchor element receives two custom events:",(0,l.mdx)("ul",{parentName:"li"},(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},'"colorpicker-color-change"'),": Fires when a new color is selected."),(0,l.mdx)("li",{parentName:"ul"},(0,l.mdx)("inlineCode",{parentName:"li"},'"colorpicker-close"'),": Fires when the picker is closed.")))),(0,l.mdx)("h3",{id:"example-show-the-color-picker"},"Example: Show the Color Picker"),(0,l.mdx)(c,{slots:"heading, code",repeat:"2",languages:"js, html",mdxType:"CodeBlock"}),(0,l.mdx)("h4",{id:"uiindexjs"},"ui/index.js"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk, {\n  ColorPickerEvents,\n  ColorPickerPlacement,\n} from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\naddOnUISdk.ready.then(async () => {\n  // Get the button element\n  const colorPickerButton = document.getElementById("colorPicker");\n\n  // Add a click event listener to the button to show the color picker\n  colorPickerButton.addEventListener("click", () => {\n    addOnUISdk.app.showColorPicker(colorPickerButton, {\n      // The title of the color picker\n      title: "Awesome Color Picker",\n      // The placement of the color picker\n      placement: ColorPickerPlacement.left,\n      // Whether the eyedropper hides the color picker\n      eyedropperHidesPicker: true,\n      // The initial color of the color picker\n      initialColor: 0x0000ff,\n      // Whether the alpha channel is disabled\n      disableAlphaChannel: false,\n    });\n  });\n\n  // Add a listener for the colorpicker-color-change event\n  colorPickerButton.addEventListener(ColorPickerEvents.colorChange, (event) => {\n    // Get the color from the event\n    console.log(event.detail.color);\n    // e.g., "#F0EDD8FF" in HEX (RRGGBBAA) format\n  });\n\n  // Add a listener for the colorpicker-close event\n  colorPickerButton.addEventListener(ColorPickerEvents.close, (event) => {\n    console.log(event.type); // "colorpicker-close"\n  });\n});\n')),(0,l.mdx)("h4",{id:"indexhtml"},"index.html"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-html"},'<button id="colorPicker">Show the Color Picker</button>\n')),(0,l.mdx)("p",null,"Please note that the color returned by the ",(0,l.mdx)("inlineCode",{parentName:"p"},"colorpicker-color-change")," event is always a string in HEX formatâ€”with or without an alpha value, e.g., ",(0,l.mdx)("inlineCode",{parentName:"p"},"#F0EDD8FF")," or ",(0,l.mdx)("inlineCode",{parentName:"p"},"#F0EDD8")," depending on the ",(0,l.mdx)("inlineCode",{parentName:"p"},"disableAlphaChannel")," option."),(0,l.mdx)("h3",{id:"example-hide-the-color-picker"},"Example: Hide the Color Picker"),(0,l.mdx)("p",null,"You can decide to hide picker UI e.g., after a certain amount of time."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},'colorPickerButton.addEventListener("click", () => {\n  addOnUISdk.app.showColorPicker(colorPickerButton, {\n    /* ... */\n  });\n  setTimeout(() => {\n    console.log("Hiding the Color Picker after 10 seconds");\n    addOnUISdk.app.hideColorPicker();\n  }, 10000);\n});\n')),(0,l.mdx)("h3",{id:"example-use-the-color"},"Example: Use the color"),(0,l.mdx)("p",null,"You can use any HTML element as the color picker's anchor element; in the example below, we're using a ",(0,l.mdx)("inlineCode",{parentName:"p"},"<div>")," element to display a color swatch."),(0,l.mdx)(c,{slots:"heading, code",repeat:"2",languages:"html, js",mdxType:"CodeBlock"}),(0,l.mdx)("h4",{id:"indexhtml-1"},"index.html"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-html"},'<style>\n  #color-display {\n    width: 30px;\n    height: 30px;\n    border: 1px solid black;\n    border-radius: 4px;\n    background-color: white;\n  }\n</style>\n<body>\n  <div id="color-display"></div>\n</body>\n')),(0,l.mdx)("h4",{id:"indexjs"},"index.js"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},'addOnUISdk.ready.then(async () => {\n  const colorDisplay = document.getElementById("color-display");\n\n  colorDisplay.addEventListener("click", () => {\n    addOnUISdk.app.showColorPicker(colorDisplay, {\n      title: "Color Picker 1",\n      placement: ColorPickerPlacement.left,\n      eyedropperHidesPicker: true,\n    });\n  });\n\n  colorDisplay.addEventListener(ColorPickerEvents.colorChange, (event) => {\n    // Update the color swatch display in the UI\n    colorDisplay.style.backgroundColor = event.detail.color;\n  });\n});\n')),(0,l.mdx)("p",null,"To use the picked color in the Document Sandbox, you can use the ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/classes/ColorUtils.md#fromhex"},(0,l.mdx)("inlineCode",{parentName:"a"},"colorUtils.fromHex()"))," method, which converts the HEX color string to a ",(0,l.mdx)("a",{parentName:"p",href:"../../../references/document-sandbox/document-apis/interfaces/Color.md"},(0,l.mdx)("inlineCode",{parentName:"a"},"Color"))," object."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-js"},'// sandbox/code.js\nconst color = colorUtils.fromHex(event.detail.color); // ðŸ‘ˆ A Color object\n\n// Use the color in the Document Sandbox, for example:\nlet selection = editor.context.selection;\nif (selection.length === 1 && selection[0].type === "Text") {\n  const textContentModel = selection[0].fullContent;\n  textContentModel.applyCharacterStyles({ color }); // ðŸ‘ˆ Using the color\n}\n')))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-develop-how-to-use-color-md-e2d50232bbfeac2148ff.js.map