"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[1411],{46609:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return r},default:function(){return c}});var d=a(58168),t=a(80045),s=(a(88763),a(15680)),l=a(83407);const o=["components"],r={},m=(p="InlineAlert",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.mdx)("div",e)});var p;const i={_frontmatter:r},u=l.A;function c(e){let{components:n}=e,a=(0,t.A)(e,o);return(0,s.mdx)(u,(0,d.A)({},i,a,{components:n,mdxType:"MDXLayout"}),(0,s.mdx)("h1",{id:"addonuisdkappui"},"addOnUISdk.app.ui"),(0,s.mdx)("p",null,"Provides you with UI related values from the Adobe Express host application where the add-on is running, so you can do things such as detect the ",(0,s.mdx)("a",{parentName:"p",href:"../../guides/develop/use_cases/environment_settings.md#detecting-locale-and-supported-locales"},"current locale")," or ",(0,s.mdx)("a",{parentName:"p",href:"../../guides/develop/use_cases/environment_settings.md#detecting-theme"},"theme")," in use to update your add-on user interface accordingly."),(0,s.mdx)("h2",{id:"properties"},"Properties"),(0,s.mdx)("h3",{id:"theme"},"theme"),(0,s.mdx)("p",null,"Access the theme currently set in Adobe Express. This value is accessed via the ",(0,s.mdx)("inlineCode",{parentName:"p"},"AddOnSdk.app.ui")," object, so you should ensure you only access this object after the AddOnSdk is initialized (via the ",(0,s.mdx)("inlineCode",{parentName:"p"},"ready"),")."),(0,s.mdx)("h4",{id:"values"},"Values"),(0,s.mdx)("p",null,"A ",(0,s.mdx)("inlineCode",{parentName:"p"},"string")," containing the current theme value. Currently ",(0,s.mdx)("strong",{parentName:"p"},'"light"')," is the only theme supported."),(0,s.mdx)("h4",{id:"example-usage"},"Example Usage"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},'addOnUISdk.ready.then(async () => {    \n    console.log(addOnUISdk.app.ui.theme); // output is "light"\n});\n')),(0,s.mdx)("h3",{id:"locale"},"locale"),(0,s.mdx)("p",null,"Access the locale currently set in Adobe Express. This value is accessed via the ",(0,s.mdx)("inlineCode",{parentName:"p"},"addOnUISdk.app.ui")," object, so you should ensure you only access this object after the ",(0,s.mdx)("inlineCode",{parentName:"p"},"addOnUISdk")," is initialized (via the ",(0,s.mdx)("inlineCode",{parentName:"p"},"addOnUISdk.ready"),")."),(0,s.mdx)("h4",{id:"values-1"},"Values"),(0,s.mdx)("p",null,"A ",(0,s.mdx)("inlineCode",{parentName:"p"},"string")," containing the current locale value. Current locale could be one of:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},"['cy-GB', 'da-DK', 'de-DE', 'en-US', 'es-ES', 'fi-FI', 'fr-FR', 'it-IT', \n'ja-JP', 'ko-KR', 'nb-NO', 'nl-NL', 'pt-BR', 'sv-SE', 'zh-Hans-CN', 'zh-Hant-TW','zz-ZZ']\n")),(0,s.mdx)("h4",{id:"example-usage-1"},"Example Usage"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},'addOnUISdk.ready.then(async () => {    \n    console.log(addOnUISdk.app.ui.locale); // output "es-ES" \n});\n')),(0,s.mdx)("h3",{id:"locales"},"locales"),(0,s.mdx)("p",null,"Access all locales currently supported in Adobe Express. This value is accessed via the ",(0,s.mdx)("inlineCode",{parentName:"p"},"addOnUISdk.app.ui")," object, so you should ensure you only access this object after the AddOnSdk is initialized (via the ",(0,s.mdx)("inlineCode",{parentName:"p"},"addOnUISdk.ready"),")."),(0,s.mdx)("h4",{id:"values-2"},"Values"),(0,s.mdx)("p",null,"A ",(0,s.mdx)("inlineCode",{parentName:"p"},"string")," array containing the supported locales:"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-json"},"locales: \n    ['cy-GB', 'da-DK', 'de-DE', 'en-US', 'es-ES', 'fi-FI', 'fr-FR', 'it-IT', 'ja-JP', 'ko-KR', 'nb-NO', 'nl-NL', 'pt-BR', 'sv-SE', 'zh-Hans-CN', 'zh-Hant-TW', 'zz-ZZ']\n")),(0,s.mdx)("h4",{id:"example-usage-2"},"Example Usage"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},'addOnUISdk.ready.then(async () => {    \n    console.log(JSON.stringify(addOnUISdk.app.ui.locales)) \n    // output is ["cy-GB","da-DK","de-DE","en-US","es-ES","fi-FI","fr-FR","it-IT","ja-JP","ko-KR","nb-NO","nl-NL","pt-BR","sv-SE","zh-Hans-CN","zh-Hant-TW","zz-ZZ"]\n});\n')),(0,s.mdx)("h2",{id:"events"},"Events"),(0,s.mdx)("h3",{id:"themechange"},"themechange"),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},(0,s.mdx)("inlineCode",{parentName:"strong"},"themechange: string")),(0,s.mdx)("br",null),'\nThe "themechange" event is fired when the user changes the UI theme in Adobe Express. It\'s used with the ',(0,s.mdx)("a",{parentName:"p",href:"../addonsdk/addonsdk-app.md"},(0,s.mdx)("inlineCode",{parentName:"a"},"addOnUISdk.app.on"))," function."),(0,s.mdx)("h4",{id:"parameters"},"Parameters"),(0,s.mdx)("p",null,"N/A"),(0,s.mdx)("h4",{id:"return-value"},"Return Value"),(0,s.mdx)("p",null,"N/A"),(0,s.mdx)("h4",{id:"example-usage-3"},"Example Usage"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},'addOnUISdk.app.on("themechange", (data) => {\n  applyTheme(data.theme); \n});\n')),(0,s.mdx)("h3",{id:"localechange"},"localechange"),(0,s.mdx)("p",null,(0,s.mdx)("strong",{parentName:"p"},(0,s.mdx)("inlineCode",{parentName:"strong"},"localechange: string")),(0,s.mdx)("br",null),'\nThe "localechange" event is fired when the user changes the UI theme in Adobe Express. It\'s used with the ',(0,s.mdx)("a",{parentName:"p",href:"../addonsdk/addonsdk-app.md"},(0,s.mdx)("inlineCode",{parentName:"a"},"addOnUISdk.app.on"))," function."),(0,s.mdx)("h4",{id:"parameters-1"},"Parameters"),(0,s.mdx)("p",null,"N/A"),(0,s.mdx)("h4",{id:"return-value-1"},"Return Value"),(0,s.mdx)("p",null,"N/A"),(0,s.mdx)("h4",{id:"example-usage-4"},"Example Usage"),(0,s.mdx)("pre",null,(0,s.mdx)("code",{parentName:"pre",className:"language-js"},'addOnUISdk.app.on("localechange", (data) => {\n  applyTheme(data.locale);\n});\n')),(0,s.mdx)(m,{slots:"text",variant:"success",mdxType:"InlineAlert"}),(0,s.mdx)("p",null,"Please see the ",(0,s.mdx)("strong",{parentName:"p"},"swc")," sample provided in the ",(0,s.mdx)("a",{parentName:"p",href:"../../samples.md"},"code samples")," within the ",(0,s.mdx)("strong",{parentName:"p"},"contributed")," folder as a reference for how to use the ",(0,s.mdx)("inlineCode",{parentName:"p"},"theme")," in your own add-on."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-addonsdk-app-ui-md-016c680a661d47329bd4.js.map