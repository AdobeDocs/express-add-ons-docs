{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-concepts-index-md-df101a22b7b396b9b80a.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/concepts/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"adobe-express-document-api-concepts\"\n    }}>{`Adobe Express Document API Concepts`}</h1>\n    <p>{`The structures that make up the Adobe Express Document Object Model, their features, and how they're reflected in the Reference documentation.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`In this article, you'll dive deep into the architecture and key elements of the Adobe Express Document Object Model (DOM) and why the Reference Documentation is the primary tool to explore it. Understanding the structures at play, hierarchy, and inheritance system will help you develop add-ons that exploit their full potential.`}</p>\n    <h3 {...{\n      \"id\": \"getting-started-with-the-dom\"\n    }}>{`Getting started with the DOM`}</h3>\n    <p>{`The notion of `}<strong parentName=\"p\">{`Document Object Model`}</strong>{` (DOM) is key to any scripting environment; developers refer to `}<em parentName=\"p\">{`scripting`}</em>{` when their programs use tools primarily available through the application's User Interface (UI) but programmatically, with code. For example, the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/guides/tutorials/grids-addon.md\"\n      }}>{`Grids tutorial`}</a>{` add-on creates a grid system while operating with built-in elements like shapes and editing their dimensions, positions, fills, and blending modes. If you were to implement an unsupported object type, you'd need to go beyond the combination of existing tools—i.e., outside the scripting realm.`}<sup parentName=\"p\" {...{\n        \"id\": \"fnref-1\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-1\",\n          \"className\": \"footnote-ref\"\n        }}>{`1`}</a></sup></p>\n    <p>{`It is essential to hierarchically organize the features that are surfaced`}<sup parentName=\"p\" {...{\n        \"id\": \"fnref-2\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-2\",\n          \"className\": \"footnote-ref\"\n        }}>{`2`}</a></sup>{` to the scripting layer. For example, a shape is not just contained within a document: it may be included in a particular Group in a certain Artboard, which belongs to a specific Page of a Document. Additionally, Ellipses and Rectangles, as shapes, share some properties, such as the ability to be filled or stroked with a solid color; in that respect, though, they differ from a bitmap image, which can be stroked but not filled.`}</p>\n    <p>{`More formally stated, any scripting environment must expose information about the `}<strong parentName=\"p\">{`Containment Structures`}</strong>{` (parent/child relations, like groups nesting shapes) and `}<strong parentName=\"p\">{`Inheritance Hierarchies`}</strong>{` (shared attributes like the opacity property available to both) of any element it deals with. Such a collection of organized information is called the Document Object Model, or DOM.`}</p>\n    <p>{`Developers with a front-end background may instinctively associate the notion of DOM with HTML and the Browser. Although it has been the most common case for decades, all applications supporting scripting rely on their own Document Object Model—as those working with desktop versions of the Creative Cloud know very well. The Adobe Express add-on system is technically different from CEP extensions in Adobe After Effects or UXP plugins in Adobe Photoshop; still, the concept of the DOM is equally valid.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"heading, text1, text2, text3w\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`Warning`}</strong>{` `}{/* 👈 won't be rendered */}</p>\n    <p>{`Some confusion may arise regarding the meaning of the following terms—let me clarify.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Document Model Sandbox`}</strong>{`: the sandboxed JavaScript environment that makes the Document API available to add-on developers. It's usually juxtaposed with the iframe UI: both reciprocally share APIs via proxy, as described in `}<a parentName=\"li\" {...{\n          \"href\": \"/express-add-ons-docs/guides/tutorials/stats-addon.md\"\n        }}>{`this tutorial`}</a>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Document Object Model`}</strong>{`: it represents Adobe Express documents' structure, the hierarchies between each element, and their inheritance.`}</li>\n    </ul>\n    <p>{`You may think about the Document API as operating in the context of the DOM—while the Document Model Sandbox provides a secure and isolated environment for such code to run.`}</p>\n    <h3 {...{\n      \"id\": \"coding-along\"\n    }}>{`Coding along`}</h3>\n    <p>{`You are encouraged to try the code snippets discussed here; please use `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/express-add-on-samples/tree/main/document-sandbox-samples/express-dimensions-addon\"\n      }}>{`this boilerplate`}</a>{` to follow along. It contains a demo add-on in two states: the complete version (in the `}<inlineCode parentName=\"p\">{`express-dimensions-end`}</inlineCode>{` folder, whose code is also found in the `}<a parentName=\"p\" {...{\n        \"href\": \"#final-project\"\n      }}>{`Final Project`}</a>{` section at the bottom of this page) and a starting point (`}<inlineCode parentName=\"p\">{`express-dimensions-start`}</inlineCode>{`) that you can also use to test your assumptions and inspect the Console. The Document API code belongs to the `}<inlineCode parentName=\"p\">{`src/documentSandbox/code.js`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nimport { editor, colorUtils } from \"express-document-sdk\";\nfunction start() {\n  runtime.exposeApi({\n    log: () => { \n      const selectedNode = editor.context.selection[0];\n      console.log(\"Currently selected node\", selectedNode);\n    },\n    // ...\n  });\n}\n`}</code></pre>\n    <p>{`Run the add-on, select any object in the UI, and click the \"Log selected node\" button: it'll be logged in the Console.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"51.87500000000001%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/5530d/refs-addon-log.webp 320w\", \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/0c8fb/refs-addon-log.webp 640w\", \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/94b1e/refs-addon-log.webp 1280w\", \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/0b34d/refs-addon-log.webp 1920w\", \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/d5269/refs-addon-log.webp 2560w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/dd4a7/refs-addon-log.png 320w\", \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/0f09e/refs-addon-log.png 640w\", \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/bbbf7/refs-addon-log.png 1280w\", \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/ac7a9/refs-addon-log.png 1920w\", \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/c7a69/refs-addon-log.png 2560w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/588a6599aa96020f7b8663aa8829faf2/bbbf7/refs-addon-log.png\",\n            \"alt\": \"refs addon log\",\n            \"title\": \"refs addon log\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"the-adobe-express-dom\"\n    }}>{`The Adobe Express DOM`}</h2>\n    <p>{`An Adobe Express document is internally represented as a hierarchical tree of `}<strong parentName=\"p\">{`nodes`}</strong>{`. Some of them may branch: in other words, contain other nodes, host children—like an Artboard or a Group with some shapes or media in them. Other ones are so-called leaf nodes: the tree's endpoints, for example, a text or a line.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"64.375%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/5530d/refs-addon-scenegraph.webp 320w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/0c8fb/refs-addon-scenegraph.webp 640w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/94b1e/refs-addon-scenegraph.webp 1280w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/0b34d/refs-addon-scenegraph.webp 1920w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/d5269/refs-addon-scenegraph.webp 2560w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/be35b/refs-addon-scenegraph.webp 2801w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/dd4a7/refs-addon-scenegraph.png 320w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/0f09e/refs-addon-scenegraph.png 640w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/bbbf7/refs-addon-scenegraph.png 1280w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/ac7a9/refs-addon-scenegraph.png 1920w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/c7a69/refs-addon-scenegraph.png 2560w\", \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/7ce87/refs-addon-scenegraph.png 2801w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/75ca40da706a1daf661fcf276d3d23e8/bbbf7/refs-addon-scenegraph.png\",\n            \"alt\": \"refs addon scenegraph\",\n            \"title\": \"refs addon scenegraph\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Such a structure is referred to as the `}<strong parentName=\"p\">{`Scenegraph`}</strong>{`, and it allows for efficient rendering, manipulation, and traversal of all scene elements.`}</p>\n    <h3 {...{\n      \"id\": \"object-oriented-programming-concepts\"\n    }}>{`Object-Oriented programming concepts`}</h3>\n    <p>{`Understanding the hierarchical tree of nodes in the Adobe Express DOM requires a firm grasp of a handful of key concepts in object-oriented programming (OOP).`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Classes`}</strong>{`: the blueprint for creating objects. They define a set of properties and methods the created objects (known as `}<em parentName=\"li\">{`instances`}</em>{` of that class) will have. For example, when users add a page to an Adobe Express document, a new `}<inlineCode parentName=\"li\">{`PageNode`}</inlineCode>{` class is `}<em parentName=\"li\">{`instantiated`}</em>{`. Such a Page instance comes by default with a peculiar set of accessors (properties) like `}<inlineCode parentName=\"li\">{`width`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`height`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`artboards`}</inlineCode>{` and methods like `}<inlineCode parentName=\"li\">{`removeFromParent()`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Inheritance`}</strong>{`: classes can inherit properties and methods from an existing class. The `}<inlineCode parentName=\"li\">{`LineNode`}</inlineCode>{` inherits from the `}<inlineCode parentName=\"li\">{`StrokableNode`}</inlineCode>{`, which in turn inherits from the `}<inlineCode parentName=\"li\">{`Node`}</inlineCode>{` class, establishing a parent/child relation.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Class Extension`}</strong>{`: this concept is closely related to Inheritance. A child class inherits the methods and properties from its parent and extends them with its additional ones. `}<inlineCode parentName=\"li\">{`TextNode`}</inlineCode>{` extends `}<inlineCode parentName=\"li\">{`Node`}</inlineCode>{`, adding, among others, the `}<inlineCode parentName=\"li\">{`text`}</inlineCode>{` property and the `}<inlineCode parentName=\"li\">{`setPositionInParent()`}</inlineCode>{` method.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Interfaces`}</strong>{`: define a `}<em parentName=\"li\">{`contract`}</em>{` for classes without implementing any behavior themselves. They specify a set of methods and properties a class must have but do not define how they work internally. For example, the `}<inlineCode parentName=\"li\">{`ContainerNode`}</inlineCode>{` interface mandates the implementation of `}<inlineCode parentName=\"li\">{`allChildren`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`children`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`parent`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` properties. Classes implementing this interface, such as `}<inlineCode parentName=\"li\">{`ArtboardNode`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`GroupNode`}</inlineCode>{`, are responsible for providing these properties' actual implementation. By doing so, these classes conform to the structure and requirements defined by the `}<inlineCode parentName=\"li\">{`ContainerNode`}</inlineCode>{` interface. Interfaces can be extended, too: the `}<inlineCode parentName=\"li\">{`ColorFill`}</inlineCode>{` inherits the `}<inlineCode parentName=\"li\">{`type`}</inlineCode>{` property from the `}<inlineCode parentName=\"li\">{`Fill`}</inlineCode>{` interface and extends it with an additional `}<inlineCode parentName=\"li\">{`color`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Compared to other Adobe desktop applications, the Adobe Express DOM features a remarkably clean class hierarchy, where every element has a well-defined lineage that traces back to a minimal set of root classes.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"15.625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/5530d/refs-addon-hierarchy.webp 320w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/0c8fb/refs-addon-hierarchy.webp 640w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/94b1e/refs-addon-hierarchy.webp 1280w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/0b34d/refs-addon-hierarchy.webp 1920w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/d5269/refs-addon-hierarchy.webp 2560w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/9b54d/refs-addon-hierarchy.webp 2602w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/dd4a7/refs-addon-hierarchy.png 320w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/0f09e/refs-addon-hierarchy.png 640w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/bbbf7/refs-addon-hierarchy.png 1280w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/ac7a9/refs-addon-hierarchy.png 1920w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/c7a69/refs-addon-hierarchy.png 2560w\", \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/de60c/refs-addon-hierarchy.png 2602w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/6758ad8b93a000e5f6697c4a9ec8aa16/bbbf7/refs-addon-hierarchy.png\",\n            \"alt\": \"refs addon hierarchy\",\n            \"title\": \"refs addon hierarchy\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h3 {...{\n      \"id\": \"how-to-read-the-reference\"\n    }}>{`How to read the Reference`}</h3>\n    <p>{`With this knowledge, you can use the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/\"\n      }}>{`Document APIs`}</a>{` reference as the primary tool to study and learn about the Adobe Express DOM.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"36.875%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/5530d/refs-addon-doc.webp 320w\", \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/0c8fb/refs-addon-doc.webp 640w\", \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/94b1e/refs-addon-doc.webp 1280w\", \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/0b34d/refs-addon-doc.webp 1920w\", \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/f3963/refs-addon-doc.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/dd4a7/refs-addon-doc.png 320w\", \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/0f09e/refs-addon-doc.png 640w\", \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/bbbf7/refs-addon-doc.png 1280w\", \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/ac7a9/refs-addon-doc.png 1920w\", \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/6482f/refs-addon-doc.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/fa6d710ff7c4a94775020a91c8919f79/bbbf7/refs-addon-doc.png\",\n            \"alt\": \"refs addon doc\",\n            \"title\": \"refs addon doc\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`There is a comprehensive list of Classes (`}<em parentName=\"p\">{`blueprints`}</em>{`), Interfaces (`}<em parentName=\"p\">{`contracts`}</em>{`), and Constants in the left navigation bar. Familiarize yourself with this content and learn how to read it.`}</p>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`EllipseNode`}</inlineCode>{` as an example, you can find:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<strong parentName=\"li\">{`class name`}</strong>{`, always PascalCase.`}</li>\n      <li parentName=\"ul\">{`A short `}<strong parentName=\"li\">{`description`}</strong>{` of what it represents and its role in the scenegraph.`}</li>\n      <li parentName=\"ul\">{`The `}<strong parentName=\"li\">{`inheritance tree`}</strong>{`: in this case, `}<inlineCode parentName=\"li\">{`EllipseNode`}</inlineCode>{` is a subclass of `}<inlineCode parentName=\"li\">{`FillableNode`}</inlineCode>{`; following the chain, you'll find that, in turn, this inherits from `}<inlineCode parentName=\"li\">{`StrokableNode`}</inlineCode>{`, which eventually comes from the `}<inlineCode parentName=\"li\">{`Node`}</inlineCode>{` root class.`}</li>\n      <li parentName=\"ul\">{`A list of `}<strong parentName=\"li\">{`accessors`}</strong>{` (properties), like `}<inlineCode parentName=\"li\">{`stroke`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`opacity`}</inlineCode>{`, etc.`}</li>\n      <li parentName=\"ul\">{`A list of `}<strong parentName=\"li\">{`methods`}</strong>{`, like `}<inlineCode parentName=\"li\">{`removeFromParent()`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`setPositionInParent()`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"62.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/5530d/refs-addon-ref.webp 320w\", \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/0c8fb/refs-addon-ref.webp 640w\", \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/94b1e/refs-addon-ref.webp 1280w\", \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/0b34d/refs-addon-ref.webp 1920w\", \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/f3963/refs-addon-ref.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/dd4a7/refs-addon-ref.png 320w\", \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/0f09e/refs-addon-ref.png 640w\", \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/bbbf7/refs-addon-ref.png 1280w\", \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/ac7a9/refs-addon-ref.png 1920w\", \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/6482f/refs-addon-ref.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/2087150422f9f50ed159e3b65d5f1192/bbbf7/refs-addon-ref.png\",\n            \"alt\": \"refs addon ref\",\n            \"title\": \"refs addon ref\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Some accessors are read-only, for instance, parent or rotation; some have `}<strong parentName=\"p\">{`getters`}</strong>{` and `}<strong parentName=\"p\">{`setters`}</strong>{`, like `}<inlineCode parentName=\"p\">{`locked`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`fill`}</inlineCode>{`. Properties can support a range of value kinds, from primitive values to objects, class instances, or collections. Let's break down the `}<inlineCode parentName=\"p\">{`translation`}</inlineCode>{` property as an example.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"62.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/5530d/refs-addon-accessor.webp 320w\", \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/0c8fb/refs-addon-accessor.webp 640w\", \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/94b1e/refs-addon-accessor.webp 1280w\", \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/0b34d/refs-addon-accessor.webp 1920w\", \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/f3963/refs-addon-accessor.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/dd4a7/refs-addon-accessor.png 320w\", \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/0f09e/refs-addon-accessor.png 640w\", \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/bbbf7/refs-addon-accessor.png 1280w\", \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/ac7a9/refs-addon-accessor.png 1920w\", \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/6482f/refs-addon-accessor.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/3b70098a406f8a65a9f6064592c32e47/bbbf7/refs-addon-accessor.png\",\n            \"alt\": \"refs addon accessor\",\n            \"title\": \"refs addon accessor\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`It's split into two parts: `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` (the getter, when you read the property) and `}<inlineCode parentName=\"p\">{`set`}</inlineCode>{` (the setter, when you write it). From the description, you see that it's a way to find out about the node's coordinates relative to its parent. The return type for the getter (wrapped with `}<inlineCode parentName=\"p\">{`< >`}</inlineCode>{` angle brackets) is `}<inlineCode parentName=\"p\">{`{ x: number, y: number}`}</inlineCode>{`, i.e. an object with numeric `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{` properties. You also read that this property is inherited from the `}<inlineCode parentName=\"p\">{`FillableNode`}</inlineCode>{` class that `}<inlineCode parentName=\"p\">{`EllipseNode`}</inlineCode>{` extends. The setter expects a `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`, which the Parameters table describes as of type `}<inlineCode parentName=\"p\">{`Object`}</inlineCode>{`, with the same numeric `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{` properties; it returns `}<inlineCode parentName=\"p\">{`void`}</inlineCode>{` (i.e., nothing). Given all this, it's possible to confidently write something along these lines.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const ellipse = editor.createEllipse();\neditor.context.insertionParent.children.append(ellipse); // attach to the scenegraph\nconsole.log(ellipse.translation); // { x: 0, y: 0 }\nellipse.translation = { x: 100, y: 50 };\n`}</code></pre>\n    <p>{`Some properties rely on interfaces to define their type. The ellipse's `}<inlineCode parentName=\"p\">{`stroke`}</inlineCode>{` happens to be of type `}<inlineCode parentName=\"p\">{`Stroke`}</inlineCode>{`, an interface whose `}<em parentName=\"p\">{`contract`}</em>{` mandates the implementation of five different properties: `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`dashPattern`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`dashOffset`}</inlineCode>{`.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"81.5625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/5530d/refs-addon-stroke.webp 320w\", \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/0c8fb/refs-addon-stroke.webp 640w\", \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/94b1e/refs-addon-stroke.webp 1280w\", \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/0b34d/refs-addon-stroke.webp 1920w\", \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/f3963/refs-addon-stroke.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/dd4a7/refs-addon-stroke.png 320w\", \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/0f09e/refs-addon-stroke.png 640w\", \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/bbbf7/refs-addon-stroke.png 1280w\", \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/ac7a9/refs-addon-stroke.png 1920w\", \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/6482f/refs-addon-stroke.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/e54e7bee50ade8bcbe0710446a747767/bbbf7/refs-addon-stroke.png\",\n            \"alt\": \"refs addon stroke\",\n            \"title\": \"refs addon stroke\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h3 {...{\n      \"id\": \"the-importance-of-constants\"\n    }}>{`The importance of Constants`}</h3>\n    <p>{`Let's use the `}<inlineCode parentName=\"p\">{`stroke`}</inlineCode>{` to demonstrate the use of Constants in the DOM. They are a named import—mind the lowercase spelling.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { editor, colorUtils, constants } from \"express-document-sdk\";\n`}</code></pre>\n    <p>{`They represent a safe, user-friendly way to refer to internal values (subject to change) that developers should not directly manipulate. For example, the stroke's `}<inlineCode parentName=\"p\">{`position`}</inlineCode>{` property is of type `}<inlineCode parentName=\"p\">{`StrokePosition`}</inlineCode>{`, which happens to be enumerable—a fixed set of pre-defined values.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"62.5%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/5530d/refs-addon-strokeposition.webp 320w\", \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/0c8fb/refs-addon-strokeposition.webp 640w\", \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/94b1e/refs-addon-strokeposition.webp 1280w\", \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/0b34d/refs-addon-strokeposition.webp 1920w\", \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/f3963/refs-addon-strokeposition.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/dd4a7/refs-addon-strokeposition.png 320w\", \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/0f09e/refs-addon-strokeposition.png 640w\", \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/bbbf7/refs-addon-strokeposition.png 1280w\", \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/ac7a9/refs-addon-strokeposition.png 1920w\", \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/6482f/refs-addon-strokeposition.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/b6e7875c68423d7e2f320d25c33620c6/bbbf7/refs-addon-strokeposition.png\",\n            \"alt\": \"refs addon strokeposition\",\n            \"title\": \"refs addon strokeposition\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Internally, the center, inside, and outside positions are represented with the integers `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`2`}</inlineCode>{`. You should instead use the `}<inlineCode parentName=\"p\">{`StrokePosition`}</inlineCode>{` constant and its available members:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`StrokePosition.center`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`StrokePosition.inside`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`StrokePosition.outside`}</inlineCode></li>\n    </ul>\n    <p>{`Using constants will ensure expected outcomes, in case Adobe Express engineers remap values in the future. This is the code needed to conclude the `}<inlineCode parentName=\"p\">{`stroke`}</inlineCode>{` example.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const ellipse = editor.createEllipse();\neditor.context.insertionParent.children.append(ellipse);\nellipse.stroke = {\n  color: { red: 0.7, green: 0.6, blue: 1, alpha: 1 },\n  dashOffset: 0,\n  dashPattern: [4, 2],\n  // position: 1 ❌\n  position: constants.StrokePosition.inside, // ✅\n  width: 3\n};\n`}</code></pre>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/guides/tutorials/stats-addon.md\"\n      }}>{`Document Stats tutorial`}</a>{` features an add-on that goes through all elements in the scenegraph and groups them by `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`, providing a count of each: `}<inlineCode parentName=\"p\">{`ComplexShape`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Group`}</inlineCode>{`, etc.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/express-add-ons-docs/assets/0bd437229c8ac38756f7e599371074bd/stats-addon-animation.gif\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`To log the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` property is acceptable in this specific case, although the proper way to check against node types involves constants; the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` itself is an internal string value mapped to the `}<inlineCode parentName=\"p\">{`SceneNodeType`}</inlineCode>{` enumerable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`❌ if (someNode.type === \"ab:Artboard\") { /* ... */ }\n✅ if (someNode.type === constants.SceneNodeType.artboard) { /* ... */ }\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"helper-functions\"\n    }}>{`Helper functions`}</h3>\n    <p>{`Let's return to strokes and fills: they are expressed as plain objects; in fact, all the properties the `}<inlineCode parentName=\"p\">{`Stroke`}</inlineCode>{` interface requires, like `}<inlineCode parentName=\"p\">{`dashPattern`}</inlineCode>{`, were previously provided. The `}<inlineCode parentName=\"p\">{`editor.makeStroke()`}</inlineCode>{` utility will fill in the default values when you don't provide them.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const ellipse = editor.createEllipse();\neditor.context.insertionParent.children.append(ellipse);\nellipse.stroke = editor.makeStroke({\n  color: { red: 0.7, green: 0.6, blue: 1, alpha: 1 }\n});\n`}</code></pre>\n    <p>{`Here, you get a 1-pixel, solid stroke of the provided color, the only property you've explicitly supplied. There's a similar helper function for the `}<inlineCode parentName=\"p\">{`ColorFill`}</inlineCode>{` interface.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`ellipse.fill = editor.makeColorFill({\n    red: 0.6, green: 0.9, blue: 0.6, alpha: 1,\n});\n`}</code></pre>\n    <p>{`If you wonder where all the help is since you've to type the entire color object manually anyway, let me remind you that the `}<inlineCode parentName=\"p\">{`fill`}</inlineCode>{` property is of type `}<inlineCode parentName=\"p\">{`ColorFill`}</inlineCode>{`: such an interface expects a `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` property (the one provided above) as well as a `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` expressed by the `}<inlineCode parentName=\"p\">{`FillType.color`}</inlineCode>{` constants. Without the `}<inlineCode parentName=\"p\">{`makeColorFill()`}</inlineCode>{` method, you must write the following.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`ellipse.fill = {\n  color: { red: 0.6, green: 0.9, blue: 0.6, alpha: 1 },\n  type: constants.FillType.color // 👈\n};\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text1, text2\" mdxType=\"InlineAlert\" />\n    <p>{`A specific `}<strong parentName=\"p\">{`naming convention`}</strong>{` exists for methods used in the Adobe Express DOM.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`make*`}</inlineCode>{`: used for plain objects and helper utilities, e.g.,`}<inlineCode parentName=\"li\">{`makeColorFill()`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`create*`}</inlineCode>{`: used for live document objects, like `}<inlineCode parentName=\"li\">{`createEllipse()`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`add*`}</inlineCode>{`: reserved to create complex structures like Pages and Artboards, adding them to the parent list automatically in a way that may also update the insertion point. Found in `}<inlineCode parentName=\"li\">{`addPage()`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`addArtboard()`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Speaking of colors, the `}<inlineCode parentName=\"p\">{`ColorUtils`}</inlineCode>{` module can output a proper `}<inlineCode parentName=\"p\">{`Color`}</inlineCode>{` from either a partial RGB object (where the `}<inlineCode parentName=\"p\">{`alpha`}</inlineCode>{` property is optional, defaulting to `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{`) or a Hex string with or without alpha, providing the reverse function as well.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const gecko = colorUtils.fromHex(\"#9de19a\");     // alpha is optional\n                                                 // or\nconst gecko = colorUtils.fromRGB(157, 225, 154); // alpha is optional\nellipse.fill = editor.makeColorFill(gecko);\nconst geckoHex = colorUtils.toHex(gecko);        // \"#9de19aff\" 👈 alpha is included\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"types-matter\"\n    }}>{`Types matter`}</h3>\n    <p>{`CLI versions from `}<inlineCode parentName=\"p\">{`\"1.1.1\"`}</inlineCode>{` onwards now scaffold add-ons with `}<strong parentName=\"p\">{`type definitions`}</strong>{` for JavaScript and TypeScript projects. If you're unfamiliar with TypeScript, these additional `}<inlineCode parentName=\"p\">{`.d.ts`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` files offer significant benefits. The `}<inlineCode parentName=\"p\">{`.d.ts`}</inlineCode>{` files, or `}<em parentName=\"p\">{`TypeScript declarations`}</em>{`, contain type information about the APIs. They describe the shape of JavaScript objects, providing TypeScript type-checking and autocompletion capabilities (in the form of IntelliSense in VSCode). The `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` files, on the other hand, are configuration files necessary to provide type information for global types in the sandbox runtime. For instance, the sandbox' Console only exposes a subset of the available methods: the `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` file (via `}<inlineCode parentName=\"p\">{`typeRoots`}</inlineCode>{`) informs the IntelliSense engine only to show the methods that are actually available.`}</p>\n    <p>{`The bottom line is that `}<inlineCode parentName=\"p\">{`.d.ts`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` files in your JavaScript (and TypeScript) projects give code editors knowledge about the Adobe Express document sandbox APIs: it's used to provide code completion and type checking, which can help you avoid errors and write code faster.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"45.62500000000001%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/5530d/refs-addon-intellisense.webp 320w\", \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/0c8fb/refs-addon-intellisense.webp 640w\", \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/94b1e/refs-addon-intellisense.webp 1280w\", \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/0b34d/refs-addon-intellisense.webp 1920w\", \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/f3963/refs-addon-intellisense.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/dd4a7/refs-addon-intellisense.png 320w\", \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/0f09e/refs-addon-intellisense.png 640w\", \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/bbbf7/refs-addon-intellisense.png 1280w\", \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/ac7a9/refs-addon-intellisense.png 1920w\", \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/6482f/refs-addon-intellisense.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/9453b02c514bbbc1e5a7d5c2be05cb55/bbbf7/refs-addon-intellisense.png\",\n            \"alt\": \"refs addon intellisense\",\n            \"title\": \"refs addon intellisense\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <InlineAlert variant=\"info\" slots=\"text1, text2, text3\" mdxType=\"InlineAlert\" />\n    <p>{`To use TypeScript declarations in existing projects, install the `}<inlineCode parentName=\"p\">{`@adobe/ccweb-add-on-sdk-types`}</inlineCode>{` package.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm install @adobe/ccweb-add-on-sdk-types --saveDev\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`.d.ts`}</inlineCode>{` files can be found in the `}<inlineCode parentName=\"p\">{`node_modules/@adobe/ccweb-add-on-sdk-types`}</inlineCode>{` folder.`}</p>\n    <p>{`While IntelliSense is undoubtedly handy, type safety can prevent errors that are otherwise difficult to foresee. Let me show you a revealing example.`}</p>\n    <p>{`Several classes in the Adobe Express DOM have a `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` property, like `}<inlineCode parentName=\"p\">{`GroupNode`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`ArtboardNode`}</inlineCode>{`—both implementing the `}<inlineCode parentName=\"p\">{`ContainerNode`}</inlineCode>{` interface. Intuitively, their `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` are the contained elements: a group can hold bitmap images, shapes, and whatnot. `}<inlineCode parentName=\"p\">{`ContainerNode`}</inlineCode>{` also mandates the implementation of an `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` property, which, apparently, serves the same purpose (we'll get to the difference in a moment).`}</p>\n    <p>{`The type for `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` is defined as `}<inlineCode parentName=\"p\">{`Iterable<Node>`}</inlineCode>{`, where the `}<inlineCode parentName=\"p\">{`Iterable`}</inlineCode>{` is basically a collection that supports a `}<inlineCode parentName=\"p\">{`for...of`}</inlineCode>{` loop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`for (const node of someIterable) {\n  console.log(node.type);\n}\n`}</code></pre>\n    <p>{`In `}<em parentName=\"p\">{`previous versions`}</em>{` of Adobe Express, the Console would log `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` as an actual `}<em parentName=\"p\">{`Array`}</em>{` of Nodes.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"35.625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/5530d/refs-addon-allchildren.webp 320w\", \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/0c8fb/refs-addon-allchildren.webp 640w\", \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/94b1e/refs-addon-allchildren.webp 1280w\", \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/0b34d/refs-addon-allchildren.webp 1920w\", \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/bad56/refs-addon-allchildren.webp 2374w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/dd4a7/refs-addon-allchildren.png 320w\", \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/0f09e/refs-addon-allchildren.png 640w\", \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/bbbf7/refs-addon-allchildren.png 1280w\", \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/ac7a9/refs-addon-allchildren.png 1920w\", \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/e2156/refs-addon-allchildren.png 2374w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/fc6ad9ae6afe1d1e8685f9c69debe7a8/bbbf7/refs-addon-allchildren.png\",\n            \"alt\": \"refs addon allchildren\",\n            \"title\": \"refs addon allchildren\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`If `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` is an Array, the following code will work just fine, won't it?`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const selectedNode = editor.context.selection[0];\n// If we have a group \nif (selectedNode.type === constants.SceneNodeType.group) {\n  // Filtering the ellipse shapes\n    const ellipses = selectedNode.allChildren.filter( // 👈 danger! ❌\n        (node) => node.type === constants.SceneNodeType.ellipse\n    );\n    console.log(\\`Number of ellipses in this group: \\${ellipses.length}\\`);\n}\n`}</code></pre>\n    <p>{`In fact, it `}<em parentName=\"p\">{`used to work`}</em>{`, but it doesn't anymore; however, it's not Adobe Express' fault. Why, then?`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` property is defined in its `}<em parentName=\"p\">{`contract`}</em>{` to be of type `}<inlineCode parentName=\"p\">{`Iterable`}</inlineCode>{`. The key point here is `}<strong parentName=\"p\">{`the nature of the contract`}</strong>{` itself rather than the specific implementation. For instance, when `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` was internally implemented as an Array, this was in line with the contract since Arrays are indeed iterable and support the `}<inlineCode parentName=\"p\">{`for...of`}</inlineCode>{` loop. However, Arrays offer additional functionalities `}<em parentName=\"p\">{`beyond`}</em>{` the requirements of the `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` contract. Developers should focus on using features that the contract explicitly supports rather than relying on capabilities that might be available in the current implementation of the property but are `}<em parentName=\"p\">{`outside the contract's scope`}</em>{`. This approach ensures compatibility and reliability, irrespective of the property's underlying implementation changes. If you must use Array methods, convert the iterable with the static method `}<inlineCode parentName=\"p\">{`Array.from()`}</inlineCode>{` first.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const ellipses = Array.from(selectedNode.allChildren) // 👈\n  .filter(node => node.type === constants.SceneNodeType.ellipse);\n`}</code></pre>\n    <p>{`To finally unravel the `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` purpose mystery, let's see what the documentation says about it.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`[`}{`...] nodes with a more specific structure can hold children in various discrete \"slots\"; this `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` list includes `}<em parentName=\"p\">{`all`}</em>{` such children and reflects their overall display z-order.`}</p>\n    </blockquote>\n    <p>{`If you inspect a `}<inlineCode parentName=\"p\">{`MediaContainerNode`}</inlineCode>{` class, which is instantiated every time you place an image, it has two peculiar properties: `}<inlineCode parentName=\"p\">{`maskShape`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`mediaRectangle`}</inlineCode>{`. They hold the shape that masks the bitmap (in UI terms, the Crop—by default, a rectangle with the same image dimensions) and the `}<inlineCode parentName=\"p\">{`ImageRectangleNode`}</inlineCode>{` itself. They are the \"structures\" the documentation refers to; therefore, you'll find them in its `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` property. Other notable examples are `}<inlineCode parentName=\"p\">{`maskShape`}</inlineCode>{` in Groups and `}<inlineCode parentName=\"p\">{`artboards`}</inlineCode>{` in Pages.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"45.3125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/5530d/refs-addon-mediacontainer.webp 320w\", \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/0c8fb/refs-addon-mediacontainer.webp 640w\", \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/94b1e/refs-addon-mediacontainer.webp 1280w\", \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/0b34d/refs-addon-mediacontainer.webp 1920w\", \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/f3963/refs-addon-mediacontainer.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/dd4a7/refs-addon-mediacontainer.png 320w\", \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/0f09e/refs-addon-mediacontainer.png 640w\", \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/bbbf7/refs-addon-mediacontainer.png 1280w\", \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/ac7a9/refs-addon-mediacontainer.png 1920w\", \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/6482f/refs-addon-mediacontainer.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/2053d4208854616d436cb34549978825/bbbf7/refs-addon-mediacontainer.png\",\n            \"alt\": \"refs addon mediacontainer\",\n            \"title\": \"refs addon mediacontainer\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"classes-and-interfaces\"\n    }}>{`Classes and Interfaces`}</h2>\n    <p>{`The Reference documentation does a good job listing all the classes and interfaces that make up the Adobe Express DOM, but there are classification differences worth knowing.`}</p>\n    <h3 {...{\n      \"id\": \"live-object-classes\"\n    }}>{`Live Object classes`}</h3>\n    <p>{`Concrete classes like `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/RectangleNode.md%22\"\n      }}><inlineCode parentName=\"a\">{`RectangleNode`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/GroupNode.md%22\"\n      }}><inlineCode parentName=\"a\">{`GroupNode`}</inlineCode></a>{` represent the DOM's `}<strong parentName=\"p\">{`object elements with live setters`}</strong>{`. Some of these classes can be instantiated and used directly through factory methods.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { editor } from \"express-document-sdk\";\n\nconst rect = editor.createRectangle();\nconst group = editor.createGroup();\ngroup.children.append(rect);\neditor.context.insertionParent.children.append(group);\n`}</code></pre>\n    <p>{`Currently, only some classes of this kind have their equivalent `}<inlineCode parentName=\"p\">{`create*`}</inlineCode>{` method (for example, `}<inlineCode parentName=\"p\">{`PathNode`}</inlineCode>{` lacks it), but it's fair to expect that most of them will, eventually. Live Object classes are the ones whose instances make up the Adobe Express scenegraph: `}<inlineCode parentName=\"p\">{`PageNode`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ArtboardNode`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`StrokeShapeNode`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`LineNode`}</inlineCode>{`, and so on.\nA particular case is represented by the `}<inlineCode parentName=\"p\">{`UnknownNode`}</inlineCode>{`, which acts as a safety placeholder when dealing with actual DOM objects that don't yet have a corresponding class.`}</p>\n    <h3 {...{\n      \"id\": \"collection-classes\"\n    }}>{`Collection classes`}</h3>\n    <p>{`In Adobe Express, most collections (`}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` is a notable example) are expressed as `}<strong parentName=\"p\">{`Lists`}</strong>{`: groups of homogeneous elements with properties such as `}<inlineCode parentName=\"p\">{`first`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`last`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`length`}</inlineCode>{`, and dedicated methods like `}<inlineCode parentName=\"p\">{`append()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`clear()`}</inlineCode>{`, etc. They are iterable with `}<inlineCode parentName=\"p\">{`for...of`}</inlineCode>{` loops.`}</p>\n    <p>{`Some of these collections are Generic, like `}<inlineCode parentName=\"p\">{`ItemList<T>`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ReadOnlyItemList<T>`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`RestrictedItemList<T>`}</inlineCode>{`, where the `}<inlineCode parentName=\"p\">{`<T>`}</inlineCode>{` means they are designed to be type-agnostic and can work with various data types. The `}<inlineCode parentName=\"p\">{`<T>`}</inlineCode>{` acts as a placeholder for the type of objects that the collection will hold or manage.`}</p>\n    <p>{`An implementation of such generic classes is the `}<inlineCode parentName=\"p\">{`ArtboardList`}</inlineCode>{` (which subclasses `}<inlineCode parentName=\"p\">{`RestrictedItemList<Artboard>`}</inlineCode>{`) and `}<inlineCode parentName=\"p\">{`PageList`}</inlineCode>{` (subclassing `}<inlineCode parentName=\"p\">{`RestrictedItemList<Page>`}</inlineCode>{`), found respectively in the `}<inlineCode parentName=\"p\">{`PageNode.artboards`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ExpressRootNode.pages`}</inlineCode>{` properties.`}</p>\n    <h3 {...{\n      \"id\": \"abstract-classes\"\n    }}>{`Abstract classes`}</h3>\n    <p>{`These are classes that serve as a `}<strong parentName=\"p\">{`base for other classes`}</strong>{`. Used by Adobe to rationalize the DOM structure, they provide a common set of properties and methods, but typically cannot be instantiated themselves nor manipulated by add-on developers. Instead, they are meant to be inherited and extended by other subclasses. These subclasses can then implement the abstract class's methods. In the Reference, you can identify abstract classes such as `}<inlineCode parentName=\"p\">{`FillableNode`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Node`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`BaseNode`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"static-classes\"\n    }}>{`Static classes`}</h3>\n    <p><inlineCode parentName=\"p\">{`Editor`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ColorUtils`}</inlineCode>{` are special `}<strong parentName=\"p\">{`Singleton classes`}</strong>{` that aren't meant to be instantiated or extended; the former acts as the entry point for APIs that read or modify the document's content, whereas the latter provides static utility methods for color manipulation. They are brought into the scope as lowercase named imports from the `}<inlineCode parentName=\"p\">{`\"express-document-sdk\"`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { editor, colorUtils } from \"express-document-sdk\";\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"object-pojo-interfaces\"\n    }}>{`Object (POJO) Interfaces`}</h3>\n    <p>{`Such interfaces define the properties of `}<strong parentName=\"p\">{`actual JavaScript objects`}</strong>{` that must be created and used, for example, to set a shape's `}<inlineCode parentName=\"p\">{`fill`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`stroke`}</inlineCode>{` (respectively, the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/interfaces/ColorFill.md%22\"\n      }}><inlineCode parentName=\"a\">{`ColorFill`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/interfaces/Stroke.md%22\"\n      }}><inlineCode parentName=\"a\">{`Stroke`}</inlineCode></a>{` interfaces) or fed to utility functions like `}<inlineCode parentName=\"p\">{`colorUtils.fromRGB()`}</inlineCode>{` that expect a parameter that implements the  `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/interfaces/Color.md%22\"\n      }}><inlineCode parentName=\"a\">{`Color`}</inlineCode></a>{` interface. They are the `}<em parentName=\"p\">{`contracts`}</em>{` that establish the shape of actual JavaScript objects that developers use in their code. POJO is an acronym that stands for \"Plain Old Java Object\", which in this context refers to a plain JavaScript object.`}</p>\n    <h3 {...{\n      \"id\": \"implementable-interfaces\"\n    }}>{`Implementable Interfaces`}</h3>\n    <p>{`Implementable interfaces like `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/interfaces/IFillableNode.md%22\"\n      }}><inlineCode parentName=\"a\">{`IFillableNode`}</inlineCode></a>{` are only meant to be implemented by classes: they define a contract of properties and methods to which a class must adhere.`}</p>\n    <p>{`In summary, the distinction between all the listed categories lies in their `}<em parentName=\"p\">{`purpose and usage`}</em>{`: \"concrete\" classes and object interfaces are used to create actual objects (either JavaScript objects, node instances, or collections), while abstract classes and implementable interfaces provide structure and behaviors that other classes can inherit or implement.`}</p>\n    <h2 {...{\n      \"id\": \"from-theory-to-practice\"\n    }}>{`From theory to practice`}</h2>\n    <p>{`Experimenting with newly acquired knowledge is one of the most effective methods to test it. Let's say you have an idea for an add-on that traces the dimensions of the selected object in the style of technical drawings.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"57.50000000000001%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/5530d/refs-addon-draw.webp 320w\", \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/0c8fb/refs-addon-draw.webp 640w\", \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/94b1e/refs-addon-draw.webp 1280w\", \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/0b34d/refs-addon-draw.webp 1920w\", \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/f3963/refs-addon-draw.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/dd4a7/refs-addon-draw.png 320w\", \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/0f09e/refs-addon-draw.png 640w\", \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/bbbf7/refs-addon-draw.png 1280w\", \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/ac7a9/refs-addon-draw.png 1920w\", \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/6482f/refs-addon-draw.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/043d93ced3a4abb9db33481cbc6f3708/bbbf7/refs-addon-draw.png\",\n            \"alt\": \"refs addon draw\",\n            \"title\": \"refs addon draw\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`The production of such an add-on would require a number of stages, starting from the MVP (Minimum Viable Product) feature set to the UI. Here, you'll focus exclusively on the DOM prototyping; that is to say, you'll try to figure out the code building blocks by navigating the documentation reference alone—it will be an excellent exercise to get accustomed to it. Every step will be carefully described here; for simplicity, the add-on will be restricted to drawing dimensions on `}<inlineCode parentName=\"p\">{`MediaContainer`}</inlineCode>{` objects, assuming no crop has been applied.`}</p>\n    <p>{`To follow along, add one button to the `}<inlineCode parentName=\"p\">{`index.html`}</inlineCode>{` file and attach a `}<inlineCode parentName=\"p\">{`drawDimensions()`}</inlineCode>{` function to it in `}<inlineCode parentName=\"p\">{`code.js`}</inlineCode>{`.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"3\" languages=\"index.html, ui/index.js, documentSandbox/code.js\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"ui-iframe\"\n    }}>{`UI iframe`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<body>\n  <sp-theme scale=\"medium\" color=\"light\" theme=\"express\">\n    <sp-button id=\"logNode\">Log selected node</sp-button>\n    <sp-button id=\"drawDimensions\">Draw Dimensions</sp-button>\n  </sp-theme>\n</body>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"ui-iframe-1\"\n    }}>{`UI iframe`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\naddOnUISdk.ready.then(async () => {\n  console.log(\"addOnUISdk is ready for use.\");\n\n  // Get the Authoring Sandbox.\n  const { runtime } = addOnUISdk.instance;\n  const sandboxProxy = await runtime.apiProxy(\"documentSandbox\");\n\n  const buttonIds = [\"logNode\", \"drawDimensions\"];\n  buttonIds.forEach((id) => {\n    const button = document.getElementById(id);\n    button.addEventListener(\"click\", () => {\n      sandboxProxy[id](); // 👈 attach the function to the button, like:\n    });                   // sandboxProxy.logNode() or sandboxProxy.drawDimensions()\n    button.disabled = false;\n  });\n});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"document-sandbox\"\n    }}>{`Document Sandbox`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nfunction start() {\n  runtime.exposeApi({\n    logNode: () => { /* ... */ },\n    drawDimensions: () => {\n      // ...\n    }\n  });\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"getting-the-context\"\n    }}>{`Getting the context`}</h3>\n    <p>{`The first part is to get and validate the selected node. There's a promising `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/Context.md\"\n      }}><inlineCode parentName=\"a\">{`Context`}</inlineCode></a>{` class in the reference documentation that `}<em parentName=\"p\">{`\"contains the user's current selection state, indicating the content they are focused on\"`}</em>{`. Excellent! But how can you access it, though? The `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/Editor.md\"\n      }}><inlineCode parentName=\"a\">{`Editor`}</inlineCode></a>{` class is the Document API entry point; it may be worth paying a visit to its page. Lo and behold, it exposes a context property, which returns a context instance: you can use it to check if there's a selection and whether it's of the right type—`}<inlineCode parentName=\"p\">{`hasSelection`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`selection`}</inlineCode>{` will do the job.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { editor, constants, colorUtils } from \"express-document-sdk\";\n\nruntime.exposeApi({\n  drawDimensions: () => {\n    if (\n        editor.context.hasSelection && \n        editor.context.selection[0].type === constants.SceneNodeType.mediaContainer\n      ) {\n      // ...\n    }\n  }\n});\n`}</code></pre>\n    <p>{`Please note the use of the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/enums/SceneNodeType.md\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeType`}</inlineCode></a>{` constant, as discussed earlier, instead of the `}<inlineCode parentName=\"p\">{`\"MediaContainer\"`}</inlineCode>{` string literal.`}</p>\n    <h3 {...{\n      \"id\": \"getting-the-dimensions\"\n    }}>{`Getting the dimensions`}</h3>\n    <p>{`Now that you've made sure only the right kind of node is handled, let's get its dimensions; since you'll need to draw a line, it may be helpful to have its coordinates in space (relative to its parent container) as well. According to the reference, the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/MediaContainerNode.md\"\n      }}><inlineCode parentName=\"a\">{`MediaContainerNode`}</inlineCode></a>{` class provides a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/MediaContainerNode.md#translation\"\n      }}><inlineCode parentName=\"a\">{`translation`}</inlineCode></a>{` property that returns an object with `}<inlineCode parentName=\"p\">{`x`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`y`}</inlineCode>{` properties, which you need. There are no `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{`, though; where to look? `}<inlineCode parentName=\"p\">{`MediaContainerNode`}</inlineCode>{` also features a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/MediaContainerNode.md#mediarectangle\"\n      }}><inlineCode parentName=\"a\">{`mediaRectangle`}</inlineCode></a>{` property, which, upon inspection, is of type `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/ImageRectangleNode.md\"\n      }}><inlineCode parentName=\"a\">{`ImageRectangleNode`}</inlineCode></a>{`: this holds the actual media and offers both `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` properties. In future versions, Adobe Express will make available a proper `}<inlineCode parentName=\"p\">{`bounds`}</inlineCode>{` object for this purpose.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if ( /* ... */ ) {\n  // grabbing the selected node\n  const selectedNode = editor.context.selection[0];\n  // getting its coordinates \n  const nodeTranslation = selectedNode.translation;\n  // getting its dimensions from the mediaRectangle, destucturing and renaming them on the fly\n  const { width: nodeWidth, height: nodeHeight } = selectedNode.mediaRectangle;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"drawing-a-line\"\n    }}>{`Drawing a line`}</h3>\n    <p>{`Time to draw the line. The `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/Editor.md\"\n      }}><inlineCode parentName=\"a\">{`Editor`}</inlineCode></a>{` class includes a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/Editor.md#createline\"\n      }}><inlineCode parentName=\"a\">{`createLine()`}</inlineCode></a>{` factory method, which returns a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/LineNode.md\"\n      }}><inlineCode parentName=\"a\">{`LineNode`}</inlineCode></a>{` instance. The `}<inlineCode parentName=\"p\">{`LineNode`}</inlineCode>{` class, you learn from the reference, has `}<inlineCode parentName=\"p\">{`startX`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`startY`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`endX`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`endY`}</inlineCode>{` properties: they only implement the getter, though—hence, are read-only. Scrolling through the methods, you find `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/LineNode.md#setendpoints\"\n      }}><inlineCode parentName=\"a\">{`setEndPoints()`}</inlineCode></a>{`, which expects the same parameters and is used as a setter for them.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nconst hLine = editor.createLine();\nhLine.setEndPoints(\n  nodeTranslation.x, nodeTranslation.y - 20,\n  nodeTranslation.x + nodeWidth, nodeTranslation.y - 20\n);\n\n`}</code></pre>\n    <p>{`Here, an arbitrary 20px margin is added between the horizontal line and the selected node; this could very well be a parameter chosen by the user from a UI control you can add later. The line is extended to a `}<inlineCode parentName=\"p\">{`nodeWidth`}</inlineCode>{` length, i.e., the `}<inlineCode parentName=\"p\">{`mediaRectangle`}</inlineCode>{`'s. You can finally add it to the scenegraph.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`editor.context.insertionParent.children.append(hLine);\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text1, text2\" mdxType=\"InlineAlert\" />\n    <p>{`Please note that, according to the documentation, `}<inlineCode parentName=\"p\">{`translation`}</inlineCode>{` is `}<strong parentName=\"p\">{`relative to the node's parent container`}</strong>{`: in other words, you're capturing the position of the `}<inlineCode parentName=\"p\">{`MediaContainerNode`}</inlineCode>{` with respect to its parent. How can you be sure, then, that the line will be drawn in the right place?`}</p>\n    <p>{`The answer is that the `}<inlineCode parentName=\"p\">{`insertionParent`}</inlineCode>{` property of the `}<inlineCode parentName=\"p\">{`Editor`}</inlineCode>{` class—that you use to append the `}<inlineCode parentName=\"p\">{`hLine`}</inlineCode>{`—is a special node that always points to the current insertion point in the scenegraph. In this case, you're adding the line to the same parent container of the selected node, so `}<inlineCode parentName=\"p\">{`hLine`}</inlineCode>{` will be positioned correctly with respect to the object it measures: both the `}<inlineCode parentName=\"p\">{`MediaContainerNode`}</inlineCode>{` and the `}<inlineCode parentName=\"p\">{`LineNode`}</inlineCode>{` will be `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` of `}<em parentName=\"p\">{`the same parent`}</em>{`, therefore sharing `}<em parentName=\"p\">{`the same relative coordinate space`}</em>{`.`}</p>\n    <p>{`The line is there, but it lacks the proper endpoints. The reference helps us out again: the `}<inlineCode parentName=\"p\">{`LineNode`}</inlineCode>{` has a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/LineNode.md#startarrowheadtype\"\n      }}><inlineCode parentName=\"a\">{`startArrowHeadType`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/LineNode.md#endarrowheadtype\"\n      }}><inlineCode parentName=\"a\">{`endArrowHeadType`}</inlineCode></a>{` properties, whose value is an enumerable provided by the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/enums/ArrowHeadType.md\"\n      }}><inlineCode parentName=\"a\">{`ArrowHeadType`}</inlineCode></a>{` constant.`}<sup parentName=\"p\" {...{\n        \"id\": \"fnref-3\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-3\",\n          \"className\": \"footnote-ref\"\n        }}>{`3`}</a></sup>{` There are several options available: let's pick `}<inlineCode parentName=\"p\">{`triangularFilled`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nhLine.startArrowHeadType = hLine.endArrowHeadType =\n          constants.ArrowHeadType.triangularFilled;\n`}</code></pre>\n    <p>{`As live objects, setting all the properties before or after appending the line to the scenegraph doesn't really matter; the result is the same.`}</p>\n    <h3 {...{\n      \"id\": \"adding-the-text\"\n    }}>{`Adding the text`}</h3>\n    <p>{`Next up, you need to add the text. The `}<inlineCode parentName=\"p\">{`Editor`}</inlineCode>{` class provides a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/Editor.md#createtext\"\n      }}><inlineCode parentName=\"a\">{`createText()`}</inlineCode></a>{` method, which returns a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/TextNode.md\"\n      }}><inlineCode parentName=\"a\">{`TextNode`}</inlineCode></a>{` instance. The `}<inlineCode parentName=\"p\">{`TextNode`}</inlineCode>{` class has a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/TextNode.md#text\"\n      }}><inlineCode parentName=\"a\">{`text`}</inlineCode></a>{` property, which expects a string. Mind you, the setter implements parameter validation; if you were to assign a number, it would throw an error.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nconst hText = editor.createText();\nhText.text = \\`\\${Math.trunc(nodeWidth).toString()}px\\`;\neditor.context.insertionParent.children.append(hText);\n`}</code></pre>\n    <p>{`The text appears on the top-left corner of the document, which is the default insertion point. `}<inlineCode parentName=\"p\">{`setPositionInParent()`}</inlineCode>{` would be perfect to move it to the right spot, just above the line. At the time of this writing, a `}<inlineCode parentName=\"p\">{`TextNode`}</inlineCode>{` doesn't feature `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` properties, which would be helpful to set an appropriate `}<inlineCode parentName=\"p\">{`localRegistrationPoint`}</inlineCode>{`; hence, you'll have to do with `}<inlineCode parentName=\"p\">{`translation`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nhText.translation = {\n  x: nodeTranslation.x + nodeWidth / 2,\n  y: nodeTranslation.y - 30,\n};\n`}</code></pre>\n    <p>{`An extra 10 pixels padding from the line has been added, but this could also be a parameter. Let's group the line and the text together to move them around as a single entity. The `}<inlineCode parentName=\"p\">{`Editor`}</inlineCode>{` class provides a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/Editor.md#creategroup\"\n      }}><inlineCode parentName=\"a\">{`createGroup()`}</inlineCode></a>{` method, which returns a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/GroupNode.md\"\n      }}><inlineCode parentName=\"a\">{`GroupNode`}</inlineCode></a>{` instance. The `}<inlineCode parentName=\"p\">{`GroupNode`}</inlineCode>{` class provides a `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` property: you can `}<inlineCode parentName=\"p\">{`append()`}</inlineCode>{` both the line and the text to it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nconst hGroup = editor.createGroup();\neditor.context.insertionParent.children.append(hGroup);\nhGroup.children.append(hLine, hText);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"repeating-the-process\"\n    }}>{`Repeating the process`}</h3>\n    <p>{`From this point, creating the vertical line and the text is a matter of copying/pasting and changing a few parameters. The only new element may be text rotation: the `}<inlineCode parentName=\"p\">{`TextNode`}</inlineCode>{` class has a `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/classes/TextNode.md#setrotationinparent\"\n      }}><inlineCode parentName=\"a\">{`setRotationInParent()`}</inlineCode></a>{` method. It expects a number in degrees (-90, in our case) and a `}<inlineCode parentName=\"p\">{`localRotationPoint`}</inlineCode>{` object (implementing the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/references/document-sandbox/document-apis/interfaces/Point/\"\n      }}><inlineCode parentName=\"a\">{`Point`}</inlineCode></a>{` interface), which is the point to rotate around in the node's local coordinates. In this case, `}<inlineCode parentName=\"p\">{`{x: 0, y: 0}`}</inlineCode>{` will do.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const vText = editor.createText();\nvText.text = \\`\\${Math.trunc(nodeHeight).toString()}px\\`;\neditor.context.insertionParent.children.append(vText);\n\nvText.translation = {\n  x: nodeTranslation.x - 30,\n  y: nodeTranslation.y + nodeHeight / 2,\n};\nvText.setRotationInParent(-90, { x: 0, y: 0 }); // 👈\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"refactoring-and-optimizing-the-code\"\n    }}>{`Refactoring and optimizing the code`}</h3>\n    <p>{`In the final add-on code, there are three buttons: one logs the selected node, one draws the dimensions as you've just seen, and the last one is a refactored version that also draws dashed lines (red and thinner) connecting the dimensions to the object's corners.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"51.25000000000001%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/5530d/refs-addon-refactor.webp 320w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/0c8fb/refs-addon-refactor.webp 640w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/94b1e/refs-addon-refactor.webp 1280w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/0b34d/refs-addon-refactor.webp 1920w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/d5269/refs-addon-refactor.webp 2560w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/49f40/refs-addon-refactor.webp 3456w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/dd4a7/refs-addon-refactor.png 320w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/0f09e/refs-addon-refactor.png 640w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/bbbf7/refs-addon-refactor.png 1280w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/ac7a9/refs-addon-refactor.png 1920w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/c7a69/refs-addon-refactor.png 2560w\", \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/eaa1b/refs-addon-refactor.png 3456w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/296e933186cf7580e27656f89f61f958/bbbf7/refs-addon-refactor.png\",\n            \"alt\": \"refs addon refactor\",\n            \"title\": \"refs addon refactor\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`For brevity's sake, only a few relevant additions to the code will be mentioned below—please refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#final-project\"\n      }}>{`full sample`}</a>{` for the complete picture.`}</p>\n    <p>{`The code for drawing the dimensions is moved to a separate `}<inlineCode parentName=\"p\">{`dimensions.js`}</inlineCode>{` file. This update includes exporting `}<inlineCode parentName=\"p\">{`drawDimensions()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`drawDimensionsRefactored()`}</inlineCode>{` alongside the implementation of a private `}<inlineCode parentName=\"p\">{`createDimensionLine()`}</inlineCode>{`. This function abstracts the creation of a line and its accompanying text by accepting `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`translation`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`orientation`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`margin`}</inlineCode>{` within an options object.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"documentSandbox/dimensions.js\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"documentsandboxdimensionsjs\"\n    }}>{`documentSandbox/dimensions.js`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nconst createDimensionLine = ({\n  width, height, translation, orientation, margin,\n}) => { /* ... */ };\n\n// ...\nconst drawDimensions = () => { /* ... */ };\nconst drawDimensionsRefactored = () => { \n  // ...\n  createDimensionLine({ /* ... */ }); // 👈\n  createDimensionLine({ /* ... */ }); // 👈\n  // ...\n};\n\nexport { drawDimensions, drawDimensionsRefactored };\n`}</code></pre>\n    <p>{`A rather unorthodox warning system is implemented to alert the user when selecting an unsupported node type. Through the Communication API outlined in `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/guides/tutorials/stats-addon.md\"\n      }}>{`this tutorial`}</a>{`, a `}<inlineCode parentName=\"p\">{`flashWrongElement()`}</inlineCode>{` function, defined in the iframe UI, is available to the Document Sandbox.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"ui/index.js, documentSandbox/dimensions.js\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"uiindexjs\"\n    }}>{`ui/index.js`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`addOnUISdk.ready.then(async () => {\n  // ...\n  runtime.exposeApi({\n    flashWrongElement(id) {\n      const button = document.getElementById(id);\n      const oldText = button.textContent;\n      const oldColor = button.style.backgroundColor;\n\n      button.textContent = \"WRONG NODE\";\n      button.style.backgroundColor = \"#ff0000\";\n\n      setTimeout(() => {\n        button.textContent = oldText;\n        button.style.backgroundColor = oldColor;\n      }, 1000);\n    },\n  });\n});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"documentsandboxdimensionsjs-1\"\n    }}>{`documentSandbox/dimensions.js`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const drawDimensionsRefactored = () => {\n  if (\n    editor.context.hasSelection &&\n    editor.context.selection[0].type === constants.SceneNodeType.mediaContainer\n  ) {\n    // ...\n  } else {\n    panelUIProxy.flashWrongElement(\"drawDimensionsRefactored\"); // 👈\n  }\n};\n`}</code></pre>\n    <p>{`When the Document Sandbox code detects an unsupported node type, it reaches out to the iframe UI `}<inlineCode parentName=\"p\">{`flashWrongElement()`}</inlineCode>{` method (exposed via proxy), sending the button `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` as a parameter. As a result, the button blinks red for a second, as its CSS and `}<inlineCode parentName=\"p\">{`textContent`}</inlineCode>{` property are temporarily changed.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"30.624999999999996%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/5530d/refs-addon-unsupported.webp 320w\", \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/0c8fb/refs-addon-unsupported.webp 640w\", \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/94b1e/refs-addon-unsupported.webp 1280w\", \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/0b34d/refs-addon-unsupported.webp 1920w\", \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/f3963/refs-addon-unsupported.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/dd4a7/refs-addon-unsupported.png 320w\", \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/0f09e/refs-addon-unsupported.png 640w\", \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/bbbf7/refs-addon-unsupported.png 1280w\", \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/ac7a9/refs-addon-unsupported.png 1920w\", \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/6482f/refs-addon-unsupported.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/735e8beb1fd5d36a6d1891aef8ea6685/bbbf7/refs-addon-unsupported.png\",\n            \"alt\": \"refs addon unsupported\",\n            \"title\": \"refs addon unsupported\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h3 {...{\n      \"id\": \"next-steps\"\n    }}>{`Next Steps`}</h3>\n    <p>{`As an exercise, you use the code sample found below and expand it to build a more complete Dimensions add-on; for example, you can:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`support `}<strong parentName=\"li\">{`more node types`}</strong>{`;`}</li>\n      <li parentName=\"ul\">{`add `}<strong parentName=\"li\">{`UI elements`}</strong>{`:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`a slider to control the dimensions' distance from the object;`}</li>\n          <li parentName=\"ul\">{`dropdowns to choose the line's style (solid, dashed, dotted), and the arrowhead type;`}</li>\n          <li parentName=\"ul\">{`a checkbox to toggle the extra dashed lines;`}</li>\n          <li parentName=\"ul\">{`a color picker to change the line's color—see the `}<a parentName=\"li\" {...{\n              \"href\": \"/express-add-ons-docs/guides/tutorials/grids-addon.md\"\n            }}>{`Grids add-on`}</a>{` for an example.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"lessons-learned\"\n    }}>{`Lessons Learned`}</h2>\n    <p>{`Let's review the key concepts discussed in this article.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`DOM Structure`}</strong>{`: the DOM is a hierarchical tree of nodes with parent/child relationships and well-defined inheritance.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`OOP principles`}</strong>{`: classes, inheritance, class extension, and interfaces are crucial Object Oriented programming notions.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Constants`}</strong>{`: represent a safe way to refer to internal values and check against enumerable properties.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Reference documentation`}</strong>{`: the Adobe Express Document API reference is a key resource: it provides comprehensive information on available classes, interfaces, and their properties and methods.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Classes and Interfaces`}</strong>{`: you can differentiate between live object classes, collection classes, abstract classes, static classes, object interfaces, and implementable interfaces.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Types and IntelliSense`}</strong>{`: using `}<inlineCode parentName=\"li\">{`.d.ts`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`tsconfig.json`}</inlineCode>{` files in your projects can enhance code completion and type checking, leading to faster and error-free coding.`}</li>\n      <li parentName=\"ul\">{`You've also learned how to `}<strong parentName=\"li\">{`prototype an add-on`}</strong>{` by navigating the Reference documentation alone.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"final-project\"\n    }}>{`Final Project`}</h2>\n    <p>{`The code for this project can be found below, as well as in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/express-add-on-samples\"\n      }}><inlineCode parentName=\"a\">{`express-add-on-samples`}</inlineCode></a>{` repository.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text1\" mdxType=\"InlineAlert\" />\n    <p>{`Please use the `}<strong parentName=\"p\">{`iframe UI`}</strong>{` and `}<strong parentName=\"p\">{`Document Sandbox`}</strong>{` tabs to switch between the two domains and find a dropdown in the top-right corner to select which file to show.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"4\" languages=\"index.html, ui/index.js, documentSandbox/code.js, documentSandbox/dimensions.js\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"iframe-ui\"\n    }}>{`iframe UI`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<body>\n    <sp-theme scale=\"medium\" color=\"light\" theme=\"express\">\n        <sp-button id=\"logNode\">Log selected node</sp-button>\n        <sp-button id=\"drawDimensions\">Draw Dimensions</sp-button>\n        <sp-button id=\"drawDimensionsRefactored\">Draw Dimensions (refactored)</sp-button>\n    </sp-theme>\n</body>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"iframe-ui-1\"\n    }}>{`iframe UI`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import \"@spectrum-web-components/styles/typography.css\";\nimport \"@spectrum-web-components/theme/src/themes.js\";\nimport \"@spectrum-web-components/theme/theme-light.js\";\nimport \"@spectrum-web-components/theme/express/theme-light.js\";\nimport \"@spectrum-web-components/theme/express/scale-medium.js\";\nimport \"@spectrum-web-components/theme/sp-theme.js\";\n\nimport \"@spectrum-web-components/button/sp-button.js\";\n\nimport addOnUISdk from \"https://new.express.adobe.com/static/add-on-sdk/sdk.js\";\n\naddOnUISdk.ready.then(async () => {\n  console.log(\"addOnUISdk is ready for use.\");\n\n  // Get the Authoring Sandbox.\n  const { runtime } = addOnUISdk.instance;\n  const sandboxProxy = await runtime.apiProxy(\"documentSandbox\");\n\n  const buttonIds = [\"logNode\", \"drawDimensions\", \"drawDimensionsRefactored\"];\n\n  buttonIds.forEach((id) => {\n    const button = document.getElementById(id);\n    button.addEventListener(\"click\", () => {\n      sandboxProxy[id]();\n    });\n    button.disabled = false;\n  });\n\n  runtime.exposeApi({\n    flashWrongElement(id) {\n      const button = document.getElementById(id);\n      const oldText = button.textContent;\n      const oldColor = button.style.backgroundColor;\n\n      button.textContent = \"WRONG NODE\";\n      button.style.backgroundColor = \"#ff0000\";\n\n      setTimeout(() => {\n        button.textContent = oldText;\n        button.style.backgroundColor = oldColor;\n      }, 1000);\n    },\n  });\n});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"document-sandbox-1\"\n    }}>{`Document Sandbox`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnSandboxSdk from \"add-on-sdk-document-sandbox\";\nconst { runtime } = addOnSandboxSdk.instance;\nimport { editor } from \"express-document-sdk\";\nimport { drawDimensions, drawDimensionsRefactored } from \"./dimensions.js\";\n\nfunction start() {\n  runtime.exposeApi({\n    drawDimensions,\n    drawDimensionsRefactored,\n    logNode: () => {\n      const selectedNode = editor.context.selection[0];\n      console.log(\"Currently selected node\", selectedNode);\n    },\n  });\n}\n\nstart();\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"document-sandbox-2\"\n    }}>{`Document Sandbox`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnSandboxSdk from \"add-on-sdk-document-sandbox\";\nconst { runtime } = addOnSandboxSdk.instance;\nconst panelUIProxy = await runtime.apiProxy(\"panel\");\n\nimport { editor, constants } from \"express-document-sdk\";\n\nconst createDimensionLine = ({\n  width,\n  height,\n  translation,\n  orientation,\n  margin,\n}) => {\n  const isVertical = orientation === \"vertical\";\n\n  // Adjust line start and end points based on orientation and margin\n  const lineStart = isVertical\n    ? { x: translation.x - margin, y: translation.y }\n    : { x: translation.x, y: translation.y - margin };\n  const lineEnd = isVertical\n    ? { x: translation.x - margin, y: translation.y + height }\n    : { x: translation.x + width, y: translation.y - margin };\n\n  const textValue = isVertical ? height : width;\n  const textPos = isVertical\n    ? { x: translation.x - margin - 10, y: translation.y + height / 2 }\n    : { x: translation.x + width / 2, y: translation.y - margin - 10 };\n\n  const line = editor.createLine();\n  line.setEndPoints(lineStart.x, lineStart.y, lineEnd.x, lineEnd.y);\n  line.startArrowHeadType = line.endArrowHeadType =\n    constants.ArrowHeadType.openTriangular;\n  editor.context.insertionParent.children.append(line);\n\n  const text = editor.createText();\n  text.text = \\`\\${Math.trunc(textValue).toString()}px\\`;\n  editor.context.insertionParent.children.append(text);\n  text.translation = textPos;\n\n  if (isVertical) {\n    text.setRotationInParent(-90, { x: 0, y: 0 });\n  }\n\n  const group = editor.createGroup();\n  editor.context.insertionParent.children.append(group);\n  group.children.append(line, text);\n\n  // Create and append extra lines at the extremities\n  for (let i = 0; i < 2; i++) {\n    const extraLine = editor.createLine();\n    const extraLineStart = isVertical\n      ? {\n          x: translation.x,\n          y: i === 0 ? translation.y : translation.y + height,\n        }\n      : {\n          x: i === 0 ? translation.x : translation.x + width,\n          y: translation.y,\n        };\n    const extraLineEnd = isVertical\n      ? {\n          x: translation.x - margin - 10,\n          y: i === 0 ? translation.y : translation.y + height,\n        }\n      : {\n          x: i === 0 ? translation.x : translation.x + width,\n          y: translation.y - margin - 10,\n        };\n\n    extraLine.setEndPoints(\n      extraLineStart.x,\n      extraLineStart.y,\n      extraLineEnd.x,\n      extraLineEnd.y\n    );\n    extraLine.stroke = editor.makeStroke({\n      color: { red: 1, green: 0, blue: 0, alpha: 1 },\n      dashPattern: [4, 2],\n      width: 0.5,\n    });\n    group.children.append(extraLine);\n    // editor.context.insertionParent.children.append(extraLine);\n  }\n\n  return group;\n};\n\nconst drawDimensions = () => {\n  if (\n    editor.context.hasSelection &&\n    editor.context.selection[0].type === constants.SceneNodeType.mediaContainer\n  ) {\n    const selectedNode = editor.context.selection[0];\n    console.log(selectedNode);\n    const { translation: nodeTranslation } = selectedNode;\n    const { width: nodeWidth, height: nodeHeight } =\n      selectedNode.mediaRectangle;\n\n    const hLine = editor.createLine();\n    hLine.setEndPoints(\n      nodeTranslation.x,\n      nodeTranslation.y - 20,\n      nodeTranslation.x + nodeWidth,\n      nodeTranslation.y - 20\n    );\n\n    // translation is relative to the parent!!\n    editor.context.insertionParent.children.append(hLine);\n    hLine.startArrowHeadType = hLine.endArrowHeadType =\n      constants.ArrowHeadType.openTriangular;\n\n    const hText = editor.createText();\n    hText.text = \\`\\${Math.trunc(nodeWidth).toString()}px\\`;\n    editor.context.insertionParent.children.append(hText);\n\n    hText.translation = {\n      x: nodeTranslation.x + nodeWidth / 2,\n      y: nodeTranslation.y - 30,\n    };\n\n    const hGroup = editor.createGroup();\n    editor.context.insertionParent.children.append(hGroup);\n    hGroup.children.append(hLine, hText);\n\n    // Same for the vertical line\n    const vLine = editor.createLine();\n    vLine.setEndPoints(\n      nodeTranslation.x - 20,\n      nodeTranslation.y,\n      nodeTranslation.x - 20,\n      nodeTranslation.y + nodeHeight\n    );\n    vLine.startArrowHeadType = vLine.endArrowHeadType =\n      constants.ArrowHeadType.openTriangular;\n\n    editor.context.insertionParent.children.append(vLine);\n\n    const vText = editor.createText();\n    vText.text = \\`\\${Math.trunc(nodeHeight).toString()}px\\`;\n    editor.context.insertionParent.children.append(vText);\n\n    vText.translation = {\n      x: nodeTranslation.x - 30,\n      y: nodeTranslation.y + nodeHeight / 2,\n    };\n    vText.setRotationInParent(-90, { x: 0, y: 0 });\n\n    const vGroup = editor.createGroup();\n    editor.context.insertionParent.children.append(vGroup);\n    vGroup.children.append(vLine, vText);\n  } else {\n    panelUIProxy.flashWrongElement(\"drawDimensions\");\n  }\n};\n\nconst drawDimensionsRefactored = () => {\n  if (\n    editor.context.hasSelection &&\n    editor.context.selection[0].type === constants.SceneNodeType.mediaContainer\n  ) {\n    const selectedNode = editor.context.selection[0];\n    const { translation: nodeTranslation } = selectedNode;\n    const { width: nodeWidth, height: nodeHeight } =\n      selectedNode.mediaRectangle;\n\n    // Create horizontal dimension line\n    createDimensionLine({\n      width: nodeWidth,\n      height: nodeHeight,\n      translation: nodeTranslation,\n      orientation: \"horizontal\",\n      margin: 60,\n    });\n\n    // Create vertical dimension line\n    createDimensionLine({\n      width: nodeWidth,\n      height: nodeHeight,\n      translation: nodeTranslation,\n      orientation: \"vertical\",\n      margin: 20,\n    });\n  } else {\n    panelUIProxy.flashWrongElement(\"drawDimensionsRefactored\");\n  }\n};\n\nexport { drawDimensions, drawDimensionsRefactored };\n`}</code></pre>\n    <hr></hr>\n\n    <div {...{\n      \"className\": \"footnotes\"\n    }}>\n      <hr parentName=\"div\"></hr>\n      <ol parentName=\"div\">\n        <li parentName=\"ol\" {...{\n          \"id\": \"fn-1\"\n        }}>{`Creating entirely novel features for desktop applications typically involves using SDKs and low-level languages such as C++. Adobe Express doesn't allow for this kind of customization.`}<a parentName=\"li\" {...{\n            \"href\": \"#fnref-1\",\n            \"className\": \"footnote-backref\"\n          }}>{`↩`}</a></li>\n        <li parentName=\"ol\" {...{\n          \"id\": \"fn-2\"\n        }}>{`Typically, not every feature available in an application is by default surfaced to Scripting—it's not uncommon for it to be a smaller subset of the UI, features-wise.`}<a parentName=\"li\" {...{\n            \"href\": \"#fnref-2\",\n            \"className\": \"footnote-backref\"\n          }}>{`↩`}</a></li>\n        <li parentName=\"ol\" {...{\n          \"id\": \"fn-3\"\n        }}>{`At the time of this writing, these properties are `}<em parentName=\"li\">{`not yet`}</em>{` available for selection in the Adobe Express user interface. It's one of those rare cases where scripting is mightier than the UI!`}<a parentName=\"li\" {...{\n            \"href\": \"#fnref-3\",\n            \"className\": \"footnote-backref\"\n          }}>{`↩`}</a></li>\n      </ol>\n    </div>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","InlineAlert","CodeBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","variant","slots","repeat","languages","isMDXComponent"],"sourceRoot":""}