{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-classes-page-node-md-b7be0ca7a21b92bad818.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/classes/PageNode.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / PageNode`}</p>\n    <h1 {...{\n      \"id\": \"class-pagenode\"\n    }}>{`Class: PageNode`}</h1>\n    <p>{`A PageNode represents a page in the document, a child of the root node of the document's \"scenegraph\" artwork tree\n(see `}<a parentName=\"p\" {...{\n        \"href\": \"ExpressRootNode.md\"\n      }}>{`ExpressRootNode`}</a>{`). A page contains one or more artboards, representing \"scenes\" in a linear timeline\nsequence. Those artboards, in turn, contain all the visual content of the document.`}</p>\n    <p>{`To create new pages, see `}<a parentName=\"p\" {...{\n        \"href\": \"PageList.md#addpage\"\n      }}>{`PageList.addPage`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"extends\"\n    }}>{`Extends`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"BaseNode.md\"\n        }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"implements\"\n    }}>{`Implements`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Readonly`}</inlineCode>{`<`}<a parentName=\"li\" {...{\n          \"href\": \"../interfaces/IRectangularNode.md\"\n        }}><inlineCode parentName=\"a\">{`IRectangularNode`}</inlineCode></a>{`>`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessors\"\n    }}>{`Accessors`}</h2>\n    <h3 {...{\n      \"id\": \"addondata\"\n    }}>{`addOnData`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`addOnData`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"AddOnData.md\"\n      }}><inlineCode parentName=\"a\">{`AddOnData`}</inlineCode></a></p>\n    <p>{`Get `}<a parentName=\"p\" {...{\n        \"href\": \"AddOnData.md\"\n      }}>{`AddOnData`}</a>{` reference for managing the private metadata on this node for this add-on.`}</p>\n    <h4 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"AddOnData.md\"\n      }}><inlineCode parentName=\"a\">{`AddOnData`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"allchildren\"\n    }}>{`allChildren`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`allChildren`}</strong>{`(): `}<inlineCode parentName=\"p\">{`Readonly`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`Iterable`}</inlineCode>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a>{`, `}<inlineCode parentName=\"p\">{`any`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`any`}</inlineCode>{`>`}{`>`}</p>\n    <p>{`Returns a read-only list of all children of the node. General-purpose content containers such as ArtboardNode or\nGroupNode also provide a mutable `}<a parentName=\"p\" {...{\n        \"href\": \"../interfaces/ContainerNode.md#children\"\n      }}>{`ContainerNode.children`}</a>{` list. Other nodes with a more specific structure can\nhold children in various discrete \"slots\"; this `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` list includes `}<em parentName=\"p\">{`all`}</em>{` such children and reflects their\noverall display z-order.`}</p>\n    <p>{`Although BaseNode's allChildren may yield other BaseNodes, the subclasses Node and ArtboardNode override allChildren\nto guarantee all their children are full-fledged Node instances.`}</p>\n    <h4 {...{\n      \"id\": \"returns-1\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`Readonly`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`Iterable`}</inlineCode>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a>{`, `}<inlineCode parentName=\"p\">{`any`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`any`}</inlineCode>{`>`}{`>`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"artboards\"\n    }}>{`artboards`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`artboards`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"ArtboardList.md\"\n      }}><inlineCode parentName=\"a\">{`ArtboardList`}</inlineCode></a></p>\n    <p>{`The artboards or \"scenes\" of a page, ordered by timeline sequence.\nTo create new artboards, see `}<a parentName=\"p\" {...{\n        \"href\": \"ArtboardList.md#addartboard\"\n      }}>{`ArtboardList.addArtboard`}</a>{`.`}</p>\n    <h4 {...{\n      \"id\": \"returns-2\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"ArtboardList.md\"\n      }}><inlineCode parentName=\"a\">{`ArtboardList`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"height\"\n    }}>{`height`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`height`}</strong>{`(): `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`The height of the node.\nAll Artboards within a page share the same dimensions.`}</p>\n    <h4 {...{\n      \"id\": \"returns-3\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"id\"\n    }}>{`id`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`id`}</strong>{`(): `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`A unique identifier for this node that stays the same when the file is closed & reopened, or if the node is\nmoved to a different part of the document.`}</p>\n    <h4 {...{\n      \"id\": \"returns-4\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"name\"\n    }}>{`name`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`name`}</strong>{`(): `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`The page's name. Displayed as a user-editable label above the current artboard in the UI.`}</p>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`set`}</inlineCode>{` `}<strong parentName=\"p\">{`name`}</strong>{`(`}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`void`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <p>{`â€¢ `}<strong parentName=\"p\">{`name`}</strong>{`: `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"returns-5\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"parent\"\n    }}>{`parent`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`parent`}</strong>{`(): `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></p>\n    <p>{`The node's parent. The parent chain will eventually reach ExpressRootNode for all nodes that are part of the document\ncontent.`}</p>\n    <p>{`Nodes that have been deleted are \"orphaned,\" with a parent chain that terminates in `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` without reaching the\nroot node. Such nodes cannot be selected, so it is unlikely to encounter one unless you retain a reference to a node\nthat was part of the document content earlier. Deleted nodes can be reattached to the scenegraph, e.g. via Undo.`}</p>\n    <h4 {...{\n      \"id\": \"returns-6\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"type\"\n    }}>{`type`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`type`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"../enumerations/SceneNodeType.md\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeType`}</inlineCode></a></p>\n    <p>{`The node's type.`}</p>\n    <h4 {...{\n      \"id\": \"returns-7\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../enumerations/SceneNodeType.md\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeType`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"width\"\n    }}>{`width`}</h3>\n    <p>{`â€¢ `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`width`}</strong>{`(): `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`The width of the node.\nAll Artboards within a page share the same dimensions.`}</p>\n    <h4 {...{\n      \"id\": \"returns-8\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"cloneinplace\"\n    }}>{`cloneInPlace()`}</h3>\n    <p>{`â€¢ `}<strong parentName=\"p\">{`cloneInPlace`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"PageNode.md\"\n      }}><inlineCode parentName=\"a\">{`PageNode`}</inlineCode></a></p>\n    <p>{`Clones this page, all artboards within it, and all content within those artboards. The cloned page is the same size\nas the original. Adds the new page immediately after this one in the pages list. The first artboard in the cloned\npage becomes the default target for newly inserted content (`}<a parentName=\"p\" {...{\n        \"href\": \"Context.md#insertionparent\"\n      }}>{`Context.insertionParent`}</a>{`) and the viewport\nswitches to display this artboard.`}</p>\n    <h4 {...{\n      \"id\": \"returns-9\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"PageNode.md\"\n      }}><inlineCode parentName=\"a\">{`PageNode`}</inlineCode></a></p>\n    <p>{`the cloned page.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"removefromparent\"\n    }}>{`removeFromParent()`}</h3>\n    <p>{`â€¢ `}<strong parentName=\"p\">{`removeFromParent`}</strong>{`(): `}<inlineCode parentName=\"p\">{`void`}</inlineCode></p>\n    <p>{`Removes the node from its parent - effectively deleting it, if the node is not re-added to another parent before the\ndocument is closed.`}</p>\n    <p>{`If parent is a basic ContainerNode, this is equivalent to `}<inlineCode parentName=\"p\">{`node.parent.children.remove(node)`}</inlineCode>{`. For nodes with other\nchild \"slots,\" removes the child from whichever slot it resides in, if possible. Throws if the slot does not permit\nremoval. No-op if node is already an orphan.`}</p>\n    <h4 {...{\n      \"id\": \"returns-10\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`void`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"inherited-from\"\n    }}>{`Inherited from`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a>{`.`}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md#removefromparent\"\n      }}><inlineCode parentName=\"a\">{`removeFromParent`}</inlineCode></a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}