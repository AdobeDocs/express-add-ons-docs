{"version":3,"file":"component---src-pages-guides-faq-md-eae85f2dc2567c985b80.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/faq.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/express-add-ons-docs/express-add-ons-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineAlert slots=\"text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`These docs are for Adobe Express add-on APIs which are still in private beta. `}<a parentName=\"p\" {...{\n        \"href\": \"https://adobe.com/go/express-developer\"\n      }}>{`Join the waitlist`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"faq\"\n    }}>{`FAQ`}</h1>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`How do I run on a different port than the default (ie: 8080 for example)?`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm run start -- --port 8080\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`How do I save the state of my add-on?`}</strong></p>\n        <p parentName=\"li\">{`  The add-on's state is reset quite frequently (changing panels, changing viewport widths etc), so one may want to save state to `}<a parentName=\"p\" {...{\n            \"href\": \".\"\n          }}>{`ClientStorage`}</a>{` and use that to restore state when the add-on loads. For example, if the user has to navigate into a deep folder hierarchy, they may not want to repeat that again just because they clicked the media panel to add a shape. Or if they are editing a form (e.g., an AI prompt), they may not want to lose that content when they navigated to another panel for a moment. When it makes sense to store a lot of UI state (and when it doesn't) is highly dependent upon the add-on's use case.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`How do I use top level `}<inlineCode parentName=\"strong\">{`await`}</inlineCode>{` while using webpack?`}</strong></p>\n        <p parentName=\"li\">{`  Set `}<inlineCode parentName=\"p\">{`experiments: { topLevelAwait: true}`}</inlineCode>{` in the webpack config file (otherwise you'll get a build error).`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`How do I setup webpack to copy new files or folders into `}<inlineCode parentName=\"strong\">{`dist`}</inlineCode>{`?`}</strong></p>\n        <p parentName=\"li\">{`If you add any folders, (like images for example), to your `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{`, you can update the `}<inlineCode parentName=\"p\">{`webpack.config.js`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`CopyWebpackPlugin`}</inlineCode>{` section within to ensure those new resources added are copied into the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` folder. For instance, in the following, the 3rd line was added to ensure any `}<inlineCode parentName=\"p\">{`.jpg`}</inlineCode>{` files in the `}<inlineCode parentName=\"p\">{`src/images`}</inlineCode>{` folder get copied over:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`new CopyWebpackPlugin({\n      patterns: [\n            { from: \"src/*.json\", to: \"[name][ext]\" },\n            { from: \"src/*.png\", to: \"[name][ext]\" },\n            { from: \"src/images/*.jpg\", to: \"images/[name][ext]\" },\n      ],\n});\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`My form submission doesn't work and console shows error \"Blocked form submission to \" \" because the form's frame is sandboxed and the 'allow-forms' permission is not set.\"`}</strong></p>\n        <p parentName=\"li\">{`  You can call `}<inlineCode parentName=\"p\">{`preventDefault`}</inlineCode>{` on the submit event to prevent the browser from trying to complete the full form submission process and avoid this error, such as:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`<form onSubmit={ evt => {                  \n      evt.preventDefault();\n}}/>\n`}</code></pre>\n        <p parentName=\"li\">{`  NOTE:\nIf the above does not work for you, you can also handle this by adding click handler to the submit button itself instead, and in that call `}<inlineCode parentName=\"p\">{`event.preventDefault`}</inlineCode>{` on the event, such as:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-javascript\"\n          }}>{`<form onSubmit={(e) => e.preventDefault()}>\n      <input type=\"submit\" value=\"Submit\" onClick={(e) => e.preventDefault()}/>\n</form>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`How do I enable CORS for a service that blocks my add-on requests due to the `}<inlineCode parentName=\"strong\">{`null`}</inlineCode>{` origin?`}</strong></p>\n        <p parentName=\"li\">{`  If the service you're consuming is endpoint you can modify the server settings for, you can set the `}<inlineCode parentName=\"p\">{`Access-Control-Allow-Origin`}</inlineCode>{` header to `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` to allow the requests to pass. If you don't have access to change the headers on the server, you can use a CORS proxy server to bypass this issue while in development. See the `}<a parentName=\"p\" {...{\n            \"href\": \"../guides/develop/cors.md\"\n          }}>{`CORS Guide`}</a>{` for more details and specific samples of each.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`The `}<inlineCode parentName=\"strong\">{`Window.showOpenFilePicker()`}</inlineCode>{` API is not working from within my Add-on.`}</strong></p>\n        <p parentName=\"li\">{`You can open the file picker using the `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` element with a `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` set to `}<inlineCode parentName=\"p\">{`file`}</inlineCode>{` to get around this.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`I receive an error when trying to run my add-on: `}<inlineCode parentName=\"strong\">{`Error: EISDIR: illegal operation on a directory`}</inlineCode>{`.`}</strong></p>\n        <p parentName=\"li\">{` This usually indicates you do not have SSL configured correctly. You can fix it by clearing the configurations from the configuration file. In Windows you'll find this file at `}<inlineCode parentName=\"p\">{`C:\\\\Users\\\\{your_username}\\\\AppData\\\\Local\\\\Adobe\\\\CCWebAddOn\\\\add-on-preferences.json`}</inlineCode>{`, and on MAC, it's at `}<inlineCode parentName=\"p\">{`/Users/{user}/Library/Application Support/Adobe/CCWebAddOn\\\\add-on-preferences.json`}</inlineCode>{`. Once you find it, delete the two properties defined for `}<inlineCode parentName=\"p\">{`sslCertPath`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`sslKeyPath`}</inlineCode>{` there. After they've been deleted, you can run the commands to create a new add-on where you will be prompted to set up SSL again and then be sure to specify the correct paths to your certificate and key file. `}</p>\n        <blockquote parentName=\"li\">\n        </blockquote>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`I receive a `}<inlineCode parentName=\"strong\">{`MANIFEST_NOT_FOUND_ERROR`}</inlineCode>{` during the package verification when trying to upload my plugin package for distribution.`}</strong></p>\n        <p parentName=\"li\">{`  Instead of zipping the folder containing the add-on files, please zip only the contents. In other words, manifest file should be at `}<strong parentName=\"p\">{`root`}</strong>{` level of the extracted package.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`How can I monetize my add-on?`}</strong></p>\n        <p parentName=\"li\">{`  At this time, the only way to monetize is by using a third party provider, and ensuring you choose one that provides safety measures, security and proper payment processing. Some options you may want to consider include `}<strong parentName=\"p\">{`Gumroad`}</strong>{`, `}<strong parentName=\"p\">{`Stripe`}</strong>{`, `}<strong parentName=\"p\">{`Paddle`}</strong>{` and `}<strong parentName=\"p\">{`FastSpring`}</strong>{`.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","slots","variant","parentName","isMDXComponent"],"sourceRoot":""}