{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-classes-editor-md-8edae124f442861f0c52.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/classes/Editor.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / Editor`}</p>\n    <h1 {...{\n      \"id\": \"class-editor\"\n    }}>{`Class: Editor`}</h1>\n    <p>{`Entry point for APIs that read or modify the document's content.`}</p>\n    <h2 {...{\n      \"id\": \"accessors\"\n    }}>{`Accessors`}</h2>\n    <h3 {...{\n      \"id\": \"context\"\n    }}>{`context`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`context`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"Context.md\"\n      }}><inlineCode parentName=\"a\">{`Context`}</inlineCode></a></p>\n    <p>{`User's current selection context`}</p>\n    <h4 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"Context.md\"\n      }}><inlineCode parentName=\"a\">{`Context`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"documentroot\"\n    }}>{`documentRoot`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`documentRoot`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"ExpressRootNode.md\"\n      }}><inlineCode parentName=\"a\">{`ExpressRootNode`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"returns-1\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"ExpressRootNode.md\"\n      }}><inlineCode parentName=\"a\">{`ExpressRootNode`}</inlineCode></a></p>\n    <p>{`the root of the document.`}</p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"createellipse\"\n    }}>{`createEllipse()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`createEllipse`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"EllipseNode.md\"\n      }}><inlineCode parentName=\"a\">{`EllipseNode`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"returns-2\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"EllipseNode.md\"\n      }}><inlineCode parentName=\"a\">{`EllipseNode`}</inlineCode></a></p>\n    <p>{`an ellipse node with default x/y radii, a black fill, and no initial stroke.\nTransform values default to 0.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"creategroup\"\n    }}>{`createGroup()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`createGroup`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"GroupNode.md\"\n      }}><inlineCode parentName=\"a\">{`GroupNode`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"returns-3\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"GroupNode.md\"\n      }}><inlineCode parentName=\"a\">{`GroupNode`}</inlineCode></a></p>\n    <p>{`a group node.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"createimagecontainer\"\n    }}>{`createImageContainer()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`createImageContainer`}</strong>{`(`}<inlineCode parentName=\"p\">{`bitmapData`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{`): `}<a parentName=\"p\" {...{\n        \"href\": \"MediaContainerNode.md\"\n      }}><inlineCode parentName=\"a\">{`MediaContainerNode`}</inlineCode></a></p>\n    <p>{`Creates a bitmap image, represented as a multi-node MediaContainerNode structure. Always creates a \"full-frame,\"\nuncropped image initially, but cropping can be changed after it is created by modifying the properties of the\ncontainer's mediaRectangle and maskShape children.`}</p>\n    <p>{`Image creation involves some asynchronous steps. The image will be visible in this client almost instantly, but will\nrender as a gray placeholder on other clients until it has been uploaded to DCX and then downloaded by those clients.\nThis local client will act as having unsaved changes until the upload has finished.`}</p>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`bitmapData`}</strong>{`: `}<inlineCode parentName=\"p\">{`BitmapImage`}</inlineCode></p>\n    <p>{`BitmapImage resource (e.g. returned from `}<a parentName=\"p\" {...{\n        \"href\": \"Editor.md#loadbitmapimage\"\n      }}>{`loadBitmapImage`}</a>{`).`}</p>\n    <p>{`• `}<strong parentName=\"p\">{`options`}</strong>{`= `}<inlineCode parentName=\"p\">{`{}`}</inlineCode></p>\n    <p>{`Additional configuration:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`initialSize`}</inlineCode>{` - Size the image is displayed at. Must have the same aspect ratio as `}<inlineCode parentName=\"li\">{`bitmapData`}</inlineCode>{`. Defaults to the\nsize the image would be created at by a UI drag-drop gesture (typically the image's full size, but scaled down\nif needed to stay below an application-defined size cap).`}</li>\n    </ul>\n    <p>{`• `}<strong parentName=\"p\">{`options.initialSize?`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"../interfaces/RectangleGeometry.md\"\n      }}><inlineCode parentName=\"a\">{`RectangleGeometry`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"returns-4\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"MediaContainerNode.md\"\n      }}><inlineCode parentName=\"a\">{`MediaContainerNode`}</inlineCode></a></p>\n    <p>{`MediaContainerNode representing the top container node of the multi-node structure.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"createline\"\n    }}>{`createLine()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`createLine`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"LineNode.md\"\n      }}><inlineCode parentName=\"a\">{`LineNode`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"returns-5\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"LineNode.md\"\n      }}><inlineCode parentName=\"a\">{`LineNode`}</inlineCode></a></p>\n    <p>{`a line node with default start point and end point and a default stroke.\nTransform values default to 0.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"createpath\"\n    }}>{`createPath()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`createPath`}</strong>{`(`}<inlineCode parentName=\"p\">{`path`}</inlineCode>{`): `}<a parentName=\"p\" {...{\n        \"href\": \"PathNode.md\"\n      }}><inlineCode parentName=\"a\">{`PathNode`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"parameters-1\"\n    }}>{`Parameters`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`path`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`a string representing any `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths\"\n      }}>{`SVG path element`}</a>{`.\nNote that the path data will be normalized, and therefore the `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` getter may return a different SVG string from the path creation input.\nFor example, \"M 10 80 Q 52.5 10, 95 80 T 180 80\" becomes \"M 10 80 C 38.33 33.33 66.67 33.33 95 80...\".\nThrows if the input is empty or is not legal SVG path syntax.`}</p>\n    <InlineAlert slots=\"text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`Note: the visual top-left corner of a path may not be its local (0,0) origin point, so it's easiest to position\na newly created path using `}<a parentName=\"p\" {...{\n        \"href\": \"Node.md#setpositioninparent\"\n      }}>{`Node.setPositionInParent`}</a>{` rather than setting `}<a parentName=\"p\" {...{\n        \"href\": \"Node.md#translation\"\n      }}>{`Node.translation`}</a>{` directly.`}</p>\n    <h4 {...{\n      \"id\": \"returns-6\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"PathNode.md\"\n      }}><inlineCode parentName=\"a\">{`PathNode`}</inlineCode></a></p>\n    <p>{`a path node with a default stroke and no initial fill.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"createrectangle\"\n    }}>{`createRectangle()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`createRectangle`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"RectangleNode.md\"\n      }}><inlineCode parentName=\"a\">{`RectangleNode`}</inlineCode></a></p>\n    <h4 {...{\n      \"id\": \"returns-7\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"RectangleNode.md\"\n      }}><inlineCode parentName=\"a\">{`RectangleNode`}</inlineCode></a></p>\n    <p>{`a rectangle node with default width and height, a black fill, and no initial stroke.\nTransform values default to 0.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"createtext\"\n    }}>{`createText()`}</h3>\n    <h4 {...{\n      \"id\": \"createtext-1\"\n    }}>{`createText()`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`createText`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"StandaloneTextNode.md\"\n      }}><inlineCode parentName=\"a\">{`StandaloneTextNode`}</inlineCode></a></p>\n    <h5 {...{\n      \"id\": \"returns-8\"\n    }}>{`Returns`}</h5>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"StandaloneTextNode.md\"\n      }}><inlineCode parentName=\"a\">{`StandaloneTextNode`}</inlineCode></a></p>\n    <p>{`a text node with default styles. The text content is initially empty, so the text node will be\ninvisible until its `}<inlineCode parentName=\"p\">{`fullContent`}</inlineCode>{` property's `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` is set. Creates auto-width text, so the node's width will\nautomatically adjust to accommodate whatever text is set.`}</p>\n    <h5 {...{\n      \"id\": \"deprecated\"\n    }}>{`Deprecated`}</h5>\n    <ul>\n      <li parentName=\"ul\">{`Initial text content is always expected so please use `}<inlineCode parentName=\"li\">{`createText(textContent: string): StandaloneTextNode`}</inlineCode>{`.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"createtexttextcontent\"\n    }}>{`createText(textContent)`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`createText`}</strong>{`(`}<inlineCode parentName=\"p\">{`textContent`}</inlineCode>{`): `}<a parentName=\"p\" {...{\n        \"href\": \"StandaloneTextNode.md\"\n      }}><inlineCode parentName=\"a\">{`StandaloneTextNode`}</inlineCode></a></p>\n    <h5 {...{\n      \"id\": \"parameters-2\"\n    }}>{`Parameters`}</h5>\n    <p>{`• `}<strong parentName=\"p\">{`textContent`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`the initial string to show.`}</p>\n    <h5 {...{\n      \"id\": \"returns-9\"\n    }}>{`Returns`}</h5>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"StandaloneTextNode.md\"\n      }}><inlineCode parentName=\"a\">{`StandaloneTextNode`}</inlineCode></a></p>\n    <p>{`a text node with default styles. Creates auto-width text, so the node's width will automatically adjust\nto accommodate the given text content.`}</p>\n    <InlineAlert slots=\"text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`Note: the registration point of this text node is not guaranteed to be at the top-left of the bounding box of its\ninsertion parent. Recommend using `}<inlineCode parentName=\"p\">{`setPositionInParent`}</inlineCode>{` over `}<inlineCode parentName=\"p\">{`translation`}</inlineCode>{` to set the position.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"loadbitmapimage\"\n    }}>{`loadBitmapImage()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`loadBitmapImage`}</strong>{`(`}<inlineCode parentName=\"p\">{`bitmapData`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`BitmapImage`}</inlineCode>{`>`}</p>\n    <p>{`Creates a bitmap image resource in the document, which can be displayed in the scenegraph by passing it to `}<a parentName=\"p\" {...{\n        \"href\": \"Editor.md#createimagecontainer\"\n      }}>{`createImageContainer`}</a>{`\nto create a MediaContainerNode. The same BitmapImage can be used to create multiple MediaContainerNodes.`}</p>\n    <p>{`Because the resulting BitmapImage is returned asynchronously, to use it you must schedule an edit lambda to run at a\nsafe later time in order to call `}<a parentName=\"p\" {...{\n        \"href\": \"Editor.md#createimagecontainer\"\n      }}>{`createImageContainer`}</a>{`. See `}<a parentName=\"p\" {...{\n        \"href\": \"Editor.md#queueasyncedit\"\n      }}>{`queueAsyncEdit`}</a>{`.`}</p>\n    <p>{`Further async steps to upload image resource data may continue in the background after this call's Promise resolves,\nbut the resulting BitmapImage can be used right away (via the queue API noted above). The local client will act as\nhaving unsaved changes until all the upload steps have finished.`}</p>\n    <h4 {...{\n      \"id\": \"parameters-3\"\n    }}>{`Parameters`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`bitmapData`}</strong>{`: `}<inlineCode parentName=\"p\">{`Blob`}</inlineCode></p>\n    <p>{`Encoded image data in PNG or JPEG format.`}</p>\n    <h4 {...{\n      \"id\": \"returns-10\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`Promise`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`BitmapImage`}</inlineCode>{`>`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"makecolorfill\"\n    }}>{`makeColorFill()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`makeColorFill`}</strong>{`(`}<inlineCode parentName=\"p\">{`color`}</inlineCode>{`): `}<a parentName=\"p\" {...{\n        \"href\": \"../interfaces/ColorFill.md\"\n      }}><inlineCode parentName=\"a\">{`ColorFill`}</inlineCode></a></p>\n    <p>{`Convenience helper to create a complete ColorFill value given just its color.`}</p>\n    <h4 {...{\n      \"id\": \"parameters-4\"\n    }}>{`Parameters`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`color`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"../interfaces/Color.md\"\n      }}><inlineCode parentName=\"a\">{`Color`}</inlineCode></a></p>\n    <p>{`The color to use for the fill.`}</p>\n    <h4 {...{\n      \"id\": \"returns-11\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../interfaces/ColorFill.md\"\n      }}><inlineCode parentName=\"a\">{`ColorFill`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"makestroke\"\n    }}>{`makeStroke()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`makeStroke`}</strong>{`(`}<inlineCode parentName=\"p\">{`options`}</inlineCode>{`?): `}<a parentName=\"p\" {...{\n        \"href\": \"../interfaces/SolidColorStroke.md\"\n      }}><inlineCode parentName=\"a\">{`SolidColorStroke`}</inlineCode></a></p>\n    <p>{`Convenience helper to create a complete SolidColorStroke value given just a\nsubset of its fields. All other fields are populated with default values.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"../interfaces/SolidColorStroke.md\"\n      }}>{`SolidColorStroke`}</a>{` for more details on the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` fields. Defaults:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`color`}</inlineCode>{` has default value DEFAULT_STROKE_COLOR if none is provided.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`width`}</inlineCode>{` has default value DEFAULT_STROKE_WIDTH if none is provided.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`position`}</inlineCode>{` has default value `}<inlineCode parentName=\"li\">{`center`}</inlineCode>{` if none is provided.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dashPattern`}</inlineCode>{` has default value [] if none is provided.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`dashOffset`}</inlineCode>{` has default value 0 if none is provided. This field is ignored\nif no `}<inlineCode parentName=\"li\">{`dashPattern`}</inlineCode>{` was provided.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` has default value SolidColorStroke.type if none is provided. This field\nshouldn't be set to any other value.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"parameters-5\"\n    }}>{`Parameters`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`options?`}</strong>{`: `}<inlineCode parentName=\"p\">{`Partial`}</inlineCode>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"../interfaces/SolidColorStroke.md\"\n      }}><inlineCode parentName=\"a\">{`SolidColorStroke`}</inlineCode></a>{`>`}</p>\n    <h4 {...{\n      \"id\": \"returns-12\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../interfaces/SolidColorStroke.md\"\n      }}><inlineCode parentName=\"a\">{`SolidColorStroke`}</inlineCode></a></p>\n    <p>{`a stroke configured with the given options.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"queueasyncedit\"\n    }}>{`queueAsyncEdit()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`queueAsyncEdit`}</strong>{`(`}<inlineCode parentName=\"p\">{`lambda`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`void`}</inlineCode>{`>`}</p>\n    <p>{`Enqueues a function to be run at a later time when edits to the user's document may be performed. You can always edit\nthe document immediately when invoked in response to your add-on's UI code. However, if you delay to await an\nasynchronous operation such as `}<a parentName=\"p\" {...{\n        \"href\": \"Editor.md#loadbitmapimage\"\n      }}>{`loadBitmapImage`}</a>{`, any edits following this pause must be scheduled using\nqueueAsyncEdit(). This ensures the edit is properly tracked for saving and undo.`}</p>\n    <p>{`The delay before your edit function is executed is typically just a few milliseconds, so it will appear instantaneous\nto users. However, note that queueAsyncEdit() will return `}<em parentName=\"p\">{`before`}</em>{` your function has been run.\nIf you need to trigger any code after the edit has been performed, either include this in the lambda you are enqueuing\nor await the Promise returned by queueAsyncEdit().`}</p>\n    <p>{`Generally, calling any setter or method is treated as an edit; but simple getters may be safely called at any time.`}</p>\n    <p>{`Example of typical usage:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Assume insertImage() is called from your UI code, and given a Blob containing image data\nasync function insertImage(blob) {\n    // This function was invoked from the UI iframe, so we can make any edits we want synchronously here.\n    // Initially load the bitmap - an async operation\n    const bitmapImage = await editor.loadBitmapImage(blob);\n\n    // Execution doesn't arrive at this line until an async delay, due to the Promise 'await' above\n\n    // Further edits need to be queued to run at a safe time\n    editor.queueAsyncEdit(() => {\n         // Create scenenode to display the image, and add it to the current artboard\n         const mediaContainer = editor.createImageContainer(bitmapImage);\n         editor.context.insertionParent.children.append(mediaContainer);\n    });\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"parameters-6\"\n    }}>{`Parameters`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`lambda`}</strong></p>\n    <p>{`a function which edits the document model.`}</p>\n    <h4 {...{\n      \"id\": \"returns-13\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`Promise`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`void`}</inlineCode>{`>`}</p>\n    <p>{`a Promise that resolves when the lambda has finished running, or rejects if the lambda throws an error.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}