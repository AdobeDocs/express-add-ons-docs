"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[475],{35557:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return c},default:function(){return s}});var d=t(58168),o=t(80045),a=(t(88763),t(15680)),m=t(83407);const i=["components"],c={},r=(l="InlineAlert",function(e){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.mdx)("div",e)});var l;const p={_frontmatter:c},u=m.A;function s(e){let{components:n}=e,t=(0,o.A)(e,i);return(0,a.mdx)(u,(0,d.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"use-document-metadata"},"Use Document Metadata"),(0,a.mdx)("h2",{id:"get-the-document-id-and-title"},"Get the Document ID and Title"),(0,a.mdx)("p",null,"Through the ",(0,a.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/app-document.md"},"Add-on UI SDK Document object"),", you can retrieve some information about the current document. Currently, there are asynchronous methods that allow you to retrieve the ",(0,a.mdx)("inlineCode",{parentName:"p"},"id()")," of the document and the ",(0,a.mdx)("inlineCode",{parentName:"p"},"title()"),". Also, associated events will let you listen for when the Document ID or the Document Title have changed, respectively via the ",(0,a.mdx)("inlineCode",{parentName:"p"},"documentIdAvailable")," and ",(0,a.mdx)("inlineCode",{parentName:"p"},"documentTitleChange")," events, which you can listen for with the ",(0,a.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/addonsdk-app.md#on"},(0,a.mdx)("inlineCode",{parentName:"a"},"addOnUISdk.app.on()"))," method."),(0,a.mdx)("h3",{id:"example"},"Example"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://new.express.adobe.com/static/add-on-sdk/sdk.js";\n\naddOnUISdk.ready.then(() => {\n\n  // Get the document ID\n  const docId = await addOnUISdk.app.document.id();\n  // urn:aaid:sc:VA6C2:679a7c92-33ce-4320-a610-f58ccaf56aa8\n\n  // Get the document title\n  const docTitle = await addOnUISdk.app.document.title();\n\n  // Get the document Link\n  const docLink = await addOnUISdk.app.document.link();\n  \n  console.log(`Document ID: ${docId}; Document Title: ${docTitle}`; `Document Link: ${docLink}`);  \n\n  // Listen for document ID change\n  addOnUISdk.app.on("documentIdAvailable", data => {\n    console.log(`Document ID changed to: ${data.documentId}`);\n  });\n\n  // Listen for document title change\n  addOnUISdk.app.on("documentTitleChange", data => {\n    console.log(`Document title changed to: ${data.documentTitle}`);\n  });\n});\n')),(0,a.mdx)(r,{slots:"text",variant:"warning",mdxType:"InlineAlert"}),(0,a.mdx)("p",null,"Please remember that ",(0,a.mdx)("inlineCode",{parentName:"p"},"id()"),", ",(0,a.mdx)("inlineCode",{parentName:"p"},"title()"),", and ",(0,a.mdx)("inlineCode",{parentName:"p"},"link()")," are asynchronous methods and not properties of the ",(0,a.mdx)("inlineCode",{parentName:"p"},"addOnUISdk.app.document")," object. You need to call them and ",(0,a.mdx)("inlineCode",{parentName:"p"},"await")," for the promise to be resolved before using the returned value."))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-develop-how-to-document-metadata-md-9cb7d6fa209dd2afc2c7.js.map