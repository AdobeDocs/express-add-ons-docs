{"version":3,"file":"component---src-pages-guides-learn-how-to-create-renditions-md-e2aa69079e631480019f.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/learn/how_to/create_renditions.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"create-renditions\"\n    }}>{`Create Renditions`}</h1>\n    <p>{`Renditions are different output versions of a document made for specific purposes; for example, a high-quality PDF for printing or a smaller JPG for sharing online.`}</p>\n    <h2 {...{\n      \"id\": \"rendition-settings\"\n    }}>{`Rendition settings`}</h2>\n    <p>{`Renditions are created via the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/addonsdk/app-document.md#createrenditions\"\n      }}><inlineCode parentName=\"a\">{`createRendition()`}</inlineCode></a>{` method of the `}<inlineCode parentName=\"p\">{`addOnUISdk.app.document`}</inlineCode>{` object. The method accepts two parameters:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"../../../references/addonsdk/app-document.md#renditionoptions\"\n        }}><inlineCode parentName=\"a\">{`renditionOptions`}</inlineCode></a>{`: controls the page range that is meant to be exported and the file format (jpg, png, mp4 and pdf).`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"../../../references/addonsdk/addonsdk-constants.md\"\n        }}><inlineCode parentName=\"a\">{`renditionIntent`}</inlineCode></a>{` constant (optional): controls the intent of the exported content (preview, export, print).`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"export-content\"\n    }}>{`Export content`}</h2>\n    <p>{`Usually, you create renditions to allow users to download or share your content in different formats. This is a multi-step process that involves:`}</p>\n    <ol>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Creating a new rendition`}</strong>{` based on specific export configuration options via the `}<a parentName=\"li\" {...{\n          \"href\": \"../../../references/addonsdk/app-document.md#createrenditions\"\n        }}><inlineCode parentName=\"a\">{`createRendition()`}</inlineCode></a>{` method of the `}<inlineCode parentName=\"li\">{`addOnUISdk.app.document`}</inlineCode>{` object.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Converting`}</strong>{` the returned `}<inlineCode parentName=\"li\">{`blob`}</inlineCode>{` object into a URL via the `}<inlineCode parentName=\"li\">{`URL.createObjectURL()`}</inlineCode>{` method.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Creating a download link`}</strong>{` for the user to download the rendition, e.g., using the URL string from the previous step as the `}<inlineCode parentName=\"li\">{`href`}</inlineCode>{` attribute of an `}<inlineCode parentName=\"li\">{`<a>`}</inlineCode>{` element.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <p>{`In the following snippet, we create a rendition of the current page in PNG format when the user clicks a button. We'll create a temporary anchor element to trigger the download of the rendition.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnUISdk from \"https://express.adobe.com/static/add-on-sdk/sdk.js\";\n\naddOnUISdk.ready.then(async () => {\n  // Attach the rendition creation to a button click event\n  document\n    .querySelector(\"#download-button\")\n    .addEventListener(\"click\", async () => {\n      // Create a rendition of the current page\n      const rendition = await addOnUISdk.app.document.createRenditions(\n        // renditionOptions\n        {\n          range: addOnUISdk.constants.Range.currentPage,\n          format: addOnUISdk.constants.RenditionFormat.png,\n        },\n        // renditionIntent\n        addOnUISdk.constants.RenditionIntent.preview\n      );\n\n      console.log(\"Renditions created: \", rendition);\n      // [{\n      //   type: \"page\",\n      //   blob: { size: 16195, type: \"image/png\" },\n      //   title: \"\",\n      //   metadata: { ... },\n      // }];\n\n      // Convert the blob into a URL to be consumed by an anchor element\n      const downloadUrl = URL.createObjectURL(rendition[0].blob);\n\n      // Create a temp/disposable anchor element to trigger the download\n      const a = document.createElement(\"a\");\n      a.href = downloadUrl; // Set the URL\n      a.download = \"Preview_rendition.png\"; // Set the desired file name\n      document.body.appendChild(a); // Add the anchor to the DOM\n      a.click(); // Trigger the download\n      document.body.removeChild(a); // Clean up\n      URL.revokeObjectURL(downloadUrl); // Release the object URL\n    });\n});\n`}</code></pre>\n    <p>{`There are multiple classes that inherit from the `}<inlineCode parentName=\"p\">{`RenditionOptions`}</inlineCode>{` class, such as `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/addonsdk/app-document.md#jpgrenditionoptions\"\n      }}><inlineCode parentName=\"a\">{`JpgRenditionOptions`}</inlineCode></a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/addonsdk/app-document.md#pngrenditionoptions\"\n      }}><inlineCode parentName=\"a\">{`PngRenditionOptions`}</inlineCode></a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/addonsdk/app-document.md#pdfrenditionoptions\"\n      }}><inlineCode parentName=\"a\">{`PdfRenditionOptions`}</inlineCode></a>{`. Each of these classes has specific properties that can be set to control the output of the rendition.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const JpgRendition = await addOnUISdk.app.document.createRenditions(\n  // JpgRenditionOptions\n  {\n    range: addOnUISdk.constants.Range.currentPage,\n    format: addOnUISdk.constants.RenditionFormat.jpg,\n    // number in the range [0, 1]\n    quality: 0.41,\n    // no upscaling, result depends on the original image size/ratio\n    requestedSize: { width: 600, height: 600 },\n  }\n);\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const pdfRendition = await addOnUISdk.app.document.createRenditions(\n  // PdfRenditionOptions\n  {\n    range: addOnUISdk.constants.Range.currentPage,\n    format: addOnUISdk.constants.RenditionFormat.pdn,\n    bleed: { amount: 5, unit: addOnUISdk.constants.BleedUnit.mm },\n  }\n);\n`}</code></pre>\n    <InlineAlert slots=\"text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`To allow the user to download the rendition, the `}<strong parentName=\"p\">{`\"permissions\"`}</strong>{` section should include `}<inlineCode parentName=\"p\">{`\"allow-downloads\"`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`\"sandbox\"`}</inlineCode>{` array.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"testId\": \"cbe48204-578d-47cc-9ad4-a9aaa81dc3d3\",\n  \"name\": \"Hello World\", \"version\": \"1.0.0\", \"manifestVersion\": 2,\n  \"requirements\": {\n    \"apps\": [ { \"name\": \"Express\", \"apiVersion\": 1 } ],\n  },\n  \"entryPoints\": [\n    {\n      \"type\": \"panel\", \"id\": \"panel1\", \"main\": \"index.html\",\n      \"documentSandbox\": \"sandbox/code.js\",\n      \"permissions\": {\n        \"sandbox\": [\n          \"allow-popups-to-escape-sandbox\",\n          \"allow-popups\",\n          \"allow-downloads\" 👈 👀\n        ]\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`Please also check out the `}<a parentName=\"p\" {...{\n        \"href\": \"../samples.md#export-sample\"\n      }}>{`export-sample add-on`}</a>{` for a more detailed example.`}</p>\n    <h2 {...{\n      \"id\": \"the-preview-intent\"\n    }}>{`The Preview intent`}</h2>\n    <p>{`When the `}<inlineCode parentName=\"p\">{`renditionIntent`}</inlineCode>{` is set to `}<inlineCode parentName=\"p\">{`RenditionIntent.preview`}</inlineCode>{`, the output is created for `}<strong parentName=\"p\">{`preview purposes only`}</strong>{`. This means that the rendition is not meant to be downloaded or shared; for example, because the user is not on a paid Adobe Express plan and the design contains Premium content.`}</p>\n    <p>{`In this case, preview renditions are used either for processing purposes (e.g., if the add-on needs to perform data analysis on the design), or to be displayed in the add-on's panel or in a new window—making sure users cannot extract the content. Please see `}<a parentName=\"p\" {...{\n        \"href\": \"./premium_content.md#allow-only-the-preview-of-premium-content\"\n      }}>{`this page`}</a>{` for more detail on handling such scenarios.`}</p>\n    <InlineAlert slots=\"text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`When the `}<inlineCode parentName=\"p\">{`renditionIntent`}</inlineCode>{` is set to `}<inlineCode parentName=\"p\">{`RenditionIntent.preview`}</inlineCode>{`, you must add to the `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` a `}<inlineCode parentName=\"p\">{`\"renditionPreview\"`}</inlineCode>{` flag set to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in the `}<strong parentName=\"p\">{`\"requirements\"`}</strong>{` section.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"testId\": \"cbe48204-578d-47cc-9ad4-a9aaa81dc3d3\",\n  \"name\": \"Hello World\", \"version\": \"1.0.0\", \"manifestVersion\": 2,\n  \"requirements\": {\n    \"apps\": [ { \"name\": \"Express\", \"apiVersion\": 1 } ],\n    \"renditionPreview\": true 👈 👀\n  },\n  \"entryPoints\": [\n    // ...\n  ]\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}