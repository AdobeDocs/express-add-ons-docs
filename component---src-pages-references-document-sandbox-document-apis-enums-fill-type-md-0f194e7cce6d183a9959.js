"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[3352],{59147:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return m},default:function(){return c}});var o=t(87462),a=t(45987),r=(t(15007),t(64983)),l=t(91515);const d=["components"],m={},i=(s="InlineAlert",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)});var s;const p={_frontmatter:m},u=l.Z;function c(e){let{components:n}=e,t=(0,a.Z)(e,d);return(0,r.mdx)(u,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"../overview.md"},"@express-document-sdk")," / FillType"),(0,r.mdx)("h1",{id:"enumeration-filltype"},"Enumeration: FillType"),(0,r.mdx)(i,{slots:"text",variant:"warning",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,(0,r.mdx)("em",{parentName:"p"},"Do not depend on the literal string values of these constants"),", as they may change. Always reference the enum identifiers in your code."),(0,r.mdx)(i,{slots:"text",variant:"warning",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,(0,r.mdx)("em",{parentName:"p"},"Additional fill types may be added in the future.")," If your code has different branches or cases depending on fill type,\nalways have a default/fallback case to handle any unknown values you may encounter."),(0,r.mdx)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,r.mdx)("h3",{id:"color"},"color"),(0,r.mdx)("p",null,"â€¢ ",(0,r.mdx)("strong",{parentName:"p"},"color")," = ",(0,r.mdx)("inlineCode",{parentName:"p"},'"Color"')),(0,r.mdx)("p",null,"A solid color fill."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-document-sandbox-document-apis-enums-fill-type-md-0f194e7cce6d183a9959.js.map