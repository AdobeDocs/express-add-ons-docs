{"version":3,"file":"component---src-pages-references-addonsdk-app-ui-md-f4822a3090fba3871487.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/addonsdk/app-ui.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"addonuisdkappui\"\n    }}>{`addOnUISdk.app.ui`}</h1>\n    <p>{`Provides you with UI related values from the Adobe Express host application where the add-on is running, so you can do things such as detect the `}<a parentName=\"p\" {...{\n        \"href\": \"../../guides/develop/use_cases.md#detecting-locale-and-supported-locales\"\n      }}>{`current locale`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../../guides/develop/use_cases.md#detecting-theme\"\n      }}>{`theme`}</a>{` in use to update your add-on user interface accordingly.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"theme\"\n    }}>{`theme`}</h3>\n    <p>{`Access the theme currently set in Adobe Express. This value is accessed via the `}<inlineCode parentName=\"p\">{`AddOnSdk.app.ui`}</inlineCode>{` object, so you should ensure you only access this object after the AddOnSdk is initialized (via the `}<inlineCode parentName=\"p\">{`ready`}</inlineCode>{`).`}</p>\n    <h4 {...{\n      \"id\": \"values\"\n    }}>{`Values`}</h4>\n    <p>{`A `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` containing the current theme value. Currently `}<strong parentName=\"p\">{`\"light\"`}</strong>{` is the only theme supported.`}</p>\n    <h4 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`addOnUISdk.ready.then(async () => {    \n    console.log(addOnUISdk.app.ui.theme); // output is \"light\"\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"locale\"\n    }}>{`locale`}</h3>\n    <p>{`Access the locale currently set in Adobe Express. This value is accessed via the `}<inlineCode parentName=\"p\">{`addOnUISdk.app.ui`}</inlineCode>{` object, so you should ensure you only access this object after the `}<inlineCode parentName=\"p\">{`addOnUISdk`}</inlineCode>{` is initialized (via the `}<inlineCode parentName=\"p\">{`addOnUISdk.ready`}</inlineCode>{`).`}</p>\n    <h4 {...{\n      \"id\": \"values-1\"\n    }}>{`Values`}</h4>\n    <p>{`A `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` containing the current locale value. Current locale could be one of:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`['cy-GB', 'da-DK', 'de-DE', 'en-US', 'es-ES', 'fi-FI', 'fr-FR', 'it-IT', \n'ja-JP', 'ko-KR', 'nb-NO', 'nl-NL', 'pt-BR', 'sv-SE', 'zh-Hans-CN', 'zh-Hant-TW','zz-ZZ']\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"example-usage-1\"\n    }}>{`Example Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`addOnUISdk.ready.then(async () => {    \n    console.log(addOnUISdk.app.ui.locale); // output \"es-ES\" \n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"locales\"\n    }}>{`locales`}</h3>\n    {/* **`locales: string[]`**<br/> */}\n    <p>{`Access all locales currently supported in Adobe Express. This value is accessed via the `}<inlineCode parentName=\"p\">{`addOnUISdk.app.ui`}</inlineCode>{` object, so you should ensure you only access this object after the AddOnSdk is initialized (via the `}<inlineCode parentName=\"p\">{`addOnUISdk.ready`}</inlineCode>{`).`}</p>\n    <h4 {...{\n      \"id\": \"values-2\"\n    }}>{`Values`}</h4>\n    <p>{`A `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` array containing the supported locales:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`locales: \n    ['cy-GB', 'da-DK', 'de-DE', 'en-US', 'es-ES', 'fi-FI', 'fr-FR', 'it-IT', 'ja-JP', 'ko-KR', 'nb-NO', 'nl-NL', 'pt-BR', 'sv-SE', 'zh-Hans-CN', 'zh-Hant-TW', 'zz-ZZ']\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"example-usage-2\"\n    }}>{`Example Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`addOnUISdk.ready.then(async () => {    \n    console.log(JSON.stringify(addOnUISdk.app.ui.locales)) \n    // output is [\"cy-GB\",\"da-DK\",\"de-DE\",\"en-US\",\"es-ES\",\"fi-FI\",\"fr-FR\",\"it-IT\",\"ja-JP\",\"ko-KR\",\"nb-NO\",\"nl-NL\",\"pt-BR\",\"sv-SE\",\"zh-Hans-CN\",\"zh-Hant-TW\",\"zz-ZZ\"]\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n    <h3 {...{\n      \"id\": \"themechange\"\n    }}>{`themechange`}</h3>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`themechange: string`}</inlineCode></strong><br />{`\nThe \"themechange\" event is fired when the user changes the UI theme in Adobe Express. It's used with the `}<a parentName=\"p\" {...{\n        \"href\": \"../addonsdk/addonsdk-app.md\"\n      }}><inlineCode parentName=\"a\">{`addOnUISdk.app.on`}</inlineCode></a>{` function.`}</p>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <p>{`N/A`}</p>\n    <h4 {...{\n      \"id\": \"return-value\"\n    }}>{`Return Value`}</h4>\n    <p>{`N/A`}</p>\n    <h4 {...{\n      \"id\": \"example-usage-3\"\n    }}>{`Example Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`addOnUISdk.app.on(\"themechange\", (data) => {\n  applyTheme(data.theme); \n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"localechange\"\n    }}>{`localechange`}</h3>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`localechange: string`}</inlineCode></strong><br />{`\nThe \"localechange\" event is fired when the user changes the UI theme in Adobe Express. It's used with the `}<a parentName=\"p\" {...{\n        \"href\": \"../addonsdk/addonsdk-app.md\"\n      }}><inlineCode parentName=\"a\">{`addOnUISdk.app.on`}</inlineCode></a>{` function.`}</p>\n    <h4 {...{\n      \"id\": \"parameters-1\"\n    }}>{`Parameters`}</h4>\n    <p>{`N/A`}</p>\n    <h4 {...{\n      \"id\": \"return-value-1\"\n    }}>{`Return Value`}</h4>\n    <p>{`N/A`}</p>\n    <h4 {...{\n      \"id\": \"example-usage-4\"\n    }}>{`Example Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`addOnUISdk.app.on(\"localechange\", (data) => {\n  applyTheme(data.locale);\n});\n`}</code></pre>\n    <InlineAlert slots=\"text\" variant=\"success\" mdxType=\"InlineAlert\" />\n    <p>{`Please see the `}<strong parentName=\"p\">{`swc`}</strong>{` sample provided in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../samples.md\"\n      }}>{`code samples`}</a>{` within the `}<strong parentName=\"p\">{`contributed`}</strong>{` folder as a reference for how to use the `}<inlineCode parentName=\"p\">{`theme`}</inlineCode>{` in your own add-on.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}