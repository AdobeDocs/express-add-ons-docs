"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6441],{90143:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return s},default:function(){return h}});var a=t(58168),o=t(80045),d=(t(88763),t(15680)),i=t(83407);const r=["components"],s={},p=(m="InlineAlert",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,d.mdx)("div",e)});var m;const l={_frontmatter:s},c=i.A;function h(e){let{components:n}=e,t=(0,o.A)(e,r);return(0,d.mdx)(c,(0,a.A)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"create-renditions"},"Create Renditions"),(0,d.mdx)("p",null,"Renditions are different output versions of a document made for specific purposes; for example, a high-quality PDF for printing or a smaller JPG for sharing online."),(0,d.mdx)("h2",{id:"rendition-settings"},"Rendition settings"),(0,d.mdx)("p",null,"Renditions are created via the ",(0,d.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/app-document.md#createrenditions"},(0,d.mdx)("inlineCode",{parentName:"a"},"createRendition()"))," method of the ",(0,d.mdx)("inlineCode",{parentName:"p"},"addOnUISdk.app.document")," object. The method accepts two parameters:"),(0,d.mdx)("ol",null,(0,d.mdx)("li",{parentName:"ol"},(0,d.mdx)("a",{parentName:"li",href:"../../../references/addonsdk/app-document.md#renditionoptions"},(0,d.mdx)("inlineCode",{parentName:"a"},"renditionOptions")),": controls the page range that is meant to be exported and the file format (jpg, png, mp4 and pdf)."),(0,d.mdx)("li",{parentName:"ol"},(0,d.mdx)("a",{parentName:"li",href:"../../../references/addonsdk/addonsdk-constants.md"},(0,d.mdx)("inlineCode",{parentName:"a"},"renditionIntent"))," constant (optional): controls the intent of the exported content (preview, export, print).")),(0,d.mdx)("h2",{id:"export-content"},"Export content"),(0,d.mdx)("p",null,"Usually, you create renditions to allow users to download or share your content in different formats. This is a multi-step process that involves:"),(0,d.mdx)("ol",null,(0,d.mdx)("li",{parentName:"ol"},(0,d.mdx)("strong",{parentName:"li"},"Creating a new rendition")," based on specific export configuration options via the ",(0,d.mdx)("a",{parentName:"li",href:"../../../references/addonsdk/app-document.md#createrenditions"},(0,d.mdx)("inlineCode",{parentName:"a"},"createRendition()"))," method of the ",(0,d.mdx)("inlineCode",{parentName:"li"},"addOnUISdk.app.document")," object."),(0,d.mdx)("li",{parentName:"ol"},(0,d.mdx)("strong",{parentName:"li"},"Converting")," the returned ",(0,d.mdx)("inlineCode",{parentName:"li"},"blob")," object into a URL via the ",(0,d.mdx)("inlineCode",{parentName:"li"},"URL.createObjectURL()")," method."),(0,d.mdx)("li",{parentName:"ol"},(0,d.mdx)("strong",{parentName:"li"},"Creating a download link")," for the user to download the rendition, e.g., using the URL string from the previous step as the ",(0,d.mdx)("inlineCode",{parentName:"li"},"href")," attribute of an ",(0,d.mdx)("inlineCode",{parentName:"li"},"<a>")," element.")),(0,d.mdx)("h3",{id:"example"},"Example"),(0,d.mdx)("p",null,"In the following snippet, we create a rendition of the current page in PNG format when the user clicks a button. We'll create a temporary anchor element to trigger the download of the rendition."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},'import addOnUISdk from "https://express.adobe.com/static/add-on-sdk/sdk.js";\n\naddOnUISdk.ready.then(async () => {\n  // Attach the rendition creation to a button click event\n  document\n    .querySelector("#download-button")\n    .addEventListener("click", async () => {\n      // Create a rendition of the current page\n      const rendition = await addOnUISdk.app.document.createRenditions(\n        // renditionOptions\n        {\n          range: addOnUISdk.constants.Range.currentPage,\n          format: addOnUISdk.constants.RenditionFormat.png,\n        },\n        // renditionIntent\n        addOnUISdk.constants.RenditionIntent.preview\n      );\n\n      console.log("Renditions created: ", rendition);\n      // [{\n      //   type: "page",\n      //   blob: { size: 16195, type: "image/png" },\n      //   title: "",\n      //   metadata: { ... },\n      // }];\n\n      // Convert the blob into a URL to be consumed by an anchor element\n      const downloadUrl = URL.createObjectURL(rendition[0].blob);\n\n      // Create a temp/disposable anchor element to trigger the download\n      const a = document.createElement("a");\n      a.href = downloadUrl; // Set the URL\n      a.download = "Preview_rendition.png"; // Set the desired file name\n      document.body.appendChild(a); // Add the anchor to the DOM\n      a.click(); // Trigger the download\n      document.body.removeChild(a); // Clean up\n      URL.revokeObjectURL(downloadUrl); // Release the object URL\n    });\n});\n')),(0,d.mdx)("p",null,"There are multiple classes that inherit from the ",(0,d.mdx)("inlineCode",{parentName:"p"},"RenditionOptions")," class, such as ",(0,d.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/app-document.md#jpgrenditionoptions"},(0,d.mdx)("inlineCode",{parentName:"a"},"JpgRenditionOptions")),", ",(0,d.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/app-document.md#pngrenditionoptions"},(0,d.mdx)("inlineCode",{parentName:"a"},"PngRenditionOptions")),", and ",(0,d.mdx)("a",{parentName:"p",href:"../../../references/addonsdk/app-document.md#pdfrenditionoptions"},(0,d.mdx)("inlineCode",{parentName:"a"},"PdfRenditionOptions")),". Each of these classes has specific properties that can be set to control the output of the rendition."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},"const JpgRendition = await addOnUISdk.app.document.createRenditions(\n  // JpgRenditionOptions\n  {\n    range: addOnUISdk.constants.Range.currentPage,\n    format: addOnUISdk.constants.RenditionFormat.jpg,\n    // number in the range [0, 1]\n    quality: 0.41,\n    // no upscaling, result depends on the original image size/ratio\n    requestedSize: { width: 600, height: 600 },\n  }\n);\n")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-js"},"const pdfRendition = await addOnUISdk.app.document.createRenditions(\n  // PdfRenditionOptions\n  {\n    range: addOnUISdk.constants.Range.currentPage,\n    format: addOnUISdk.constants.RenditionFormat.pdn,\n    bleed: { amount: 5, unit: addOnUISdk.constants.BleedUnit.mm },\n  }\n);\n")),(0,d.mdx)(p,{slots:"text",variant:"info",mdxType:"InlineAlert"}),(0,d.mdx)("p",null,"To allow the user to download the rendition, the ",(0,d.mdx)("strong",{parentName:"p"},'"permissions"')," section should include ",(0,d.mdx)("inlineCode",{parentName:"p"},'"allow-downloads"')," in the ",(0,d.mdx)("inlineCode",{parentName:"p"},'"sandbox"')," array."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "testId": "cbe48204-578d-47cc-9ad4-a9aaa81dc3d3",\n  "name": "Hello World", "version": "1.0.0", "manifestVersion": 2,\n  "requirements": {\n    "apps": [ { "name": "Express", "apiVersion": 1 } ],\n  },\n  "entryPoints": [\n    {\n      "type": "panel", "id": "panel1", "main": "index.html",\n      "documentSandbox": "sandbox/code.js",\n      "permissions": {\n        "sandbox": [\n          "allow-popups-to-escape-sandbox",\n          "allow-popups",\n          "allow-downloads" ðŸ‘ˆ ðŸ‘€\n        ]\n      }\n    }\n  ]\n}\n')),(0,d.mdx)("p",null,"Please also check out the ",(0,d.mdx)("a",{parentName:"p",href:"../samples.md#export-sample"},"export-sample add-on")," for a more detailed example."),(0,d.mdx)("h2",{id:"the-preview-intent"},"The Preview intent"),(0,d.mdx)("p",null,"When the ",(0,d.mdx)("inlineCode",{parentName:"p"},"renditionIntent")," is set to ",(0,d.mdx)("inlineCode",{parentName:"p"},"RenditionIntent.preview"),", the output is created for ",(0,d.mdx)("strong",{parentName:"p"},"preview purposes only"),". This means that the rendition is not meant to be downloaded or shared; for example, because the user is not on a paid Adobe Express plan and the design contains Premium content."),(0,d.mdx)("p",null,"In this case, preview renditions are used either for processing purposes (e.g., if the add-on needs to perform data analysis on the design), or to be displayed in the add-on's panel or in a new windowâ€”making sure users cannot extract the content. Please see ",(0,d.mdx)("a",{parentName:"p",href:"./premium_content.md#allow-only-the-preview-of-premium-content"},"this page")," for more detail on handling such scenarios."),(0,d.mdx)(p,{slots:"text",variant:"info",mdxType:"InlineAlert"}),(0,d.mdx)("p",null,"When the ",(0,d.mdx)("inlineCode",{parentName:"p"},"renditionIntent")," is set to ",(0,d.mdx)("inlineCode",{parentName:"p"},"RenditionIntent.preview"),", you must add to the ",(0,d.mdx)("inlineCode",{parentName:"p"},"manifest.json")," a ",(0,d.mdx)("inlineCode",{parentName:"p"},'"renditionPreview"')," flag set to ",(0,d.mdx)("inlineCode",{parentName:"p"},"true")," in the ",(0,d.mdx)("strong",{parentName:"p"},'"requirements"')," section."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "testId": "cbe48204-578d-47cc-9ad4-a9aaa81dc3d3",\n  "name": "Hello World", "version": "1.0.0", "manifestVersion": 2,\n  "requirements": {\n    "apps": [ { "name": "Express", "apiVersion": 1 } ],\n    "renditionPreview": true ðŸ‘ˆ ðŸ‘€\n  },\n  "entryPoints": [\n    // ...\n  ]\n}\n')))}h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-learn-how-to-create-renditions-md-e2aa69079e631480019f.js.map