{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-interfaces-ordered-list-style-input-md-96a417185c2a5a594a59.js","mappings":"0TAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACb,KAAQ,kBACN,yBAA6B,6BACnCX,EAAAA,EAAAA,KAAA,MACE,GAAM,mCACJ,qCACJA,EAAAA,EAAAA,KAACL,EAAW,CAACiB,MAAM,OAAOC,QAAQ,UAAUH,QAAQ,iBACpDV,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,cAAuB,uBAAsBX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,MAAIX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,UAAU,sBAAmC,iJAAgJX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,oBAAiC,aAAYX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,QAAqB,YAAWX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC1b,KAAQ,4CACPX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,iBAAiC,oBAAmBX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,iBAA8B,MAC/IX,EAAAA,EAAAA,KAAA,SAAI,6EACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,YACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,OAAKX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,MAAM,6BAEnDX,EAAAA,EAAAA,KAAA,MACE,GAAM,cACJ,eACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,eACJ,iBACJA,EAAAA,EAAAA,KAAA,SAAI,MAAKA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,YAAyB,KAAIX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,eAAwB,MAAKX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,YACnJX,EAAAA,EAAAA,KAAA,SAAI,wFACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,kBACJ,mBACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,wCAC/BX,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,aACJ,eACJA,EAAAA,EAAAA,KAAA,SAAI,MAAKA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,YAAyB,KAAIX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,aAAsB,MAAKX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC/H,KAAQ,4CACPX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,2BACjCX,EAAAA,EAAAA,KAAA,SAAI,2UAIJA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,aACJA,EAAAA,EAAAA,KAAA,SAAI,MAAKA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,YAAyB,KAAIX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,WAAoB,MAAKX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,YAC/IX,EAAAA,EAAAA,KAAA,SAAI,oFACJA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,UACJ,YACJA,EAAAA,EAAAA,KAAA,SAAI,MAAKA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,YAAyB,KAAIX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,UAAmB,MAAKX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,YAC9IX,EAAAA,EAAAA,KAAA,SAAI,8EACJA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,QACJ,SACJA,EAAAA,EAAAA,KAAA,SAAI,MAAKA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,QAAiB,MAAKX,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACjE,KAAQ,iDACPX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,aAGrC,CAEAP,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/interfaces/OrderedListStyleInput.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / OrderedListStyleInput`}</p>\n    <h1 {...{\n      \"id\": \"interface-orderedliststyleinput\"\n    }}>{`Interface: OrderedListStyleInput`}</h1>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`IMPORTANT:`}</strong>{` This is currently `}<strong parentName=\"p\"><em parentName=\"strong\">{`experimental only`}</em></strong>{` and should not be used in any add-ons you will be distributing until it has been declared stable. To use it, you will first need to set the `}<inlineCode parentName=\"p\">{`experimentalApis`}</inlineCode>{` flag to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../manifest/index.md#requirements\"\n      }}><inlineCode parentName=\"a\">{`requirements`}</inlineCode></a>{` section of the `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{`.`}</p>\n    <p>{`Interface for specifying an ordered list style, such as a numbered list.`}</p>\n    <h2 {...{\n      \"id\": \"extends\"\n    }}>{`Extends`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`BaseParagraphListStyle`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"indentlevel\"\n    }}>{`indentLevel?`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`optional`}</inlineCode>{` `}<strong parentName=\"p\">{`indentLevel`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`A value from 0-8 that specifies indent/nesting level. Default is 0 if not provided.`}</p>\n    <h4 {...{\n      \"id\": \"inherited-from\"\n    }}>{`Inherited from`}</h4>\n    <p><inlineCode parentName=\"p\">{`BaseParagraphListStyle.indentLevel`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"numbering\"\n    }}>{`numbering?`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`optional`}</inlineCode>{` `}<strong parentName=\"p\">{`numbering`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"../enumerations/OrderedListNumbering.md\"\n      }}><inlineCode parentName=\"a\">{`OrderedListNumbering`}</inlineCode></a></p>\n    <p>{`The numbering style to use. If undefined, it defaults to a different type depending on the paragraph's indent level.\nThe defaults for increasing indent are 1, a, i, I, and then they repeat.\nThese markers and the prefix/postfix strings (if any) are displayed using the same font as the start of the\nparagraph's text content.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"postfix\"\n    }}>{`postfix?`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`optional`}</inlineCode>{` `}<strong parentName=\"p\">{`postfix`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`Additional string to display after each sequence number/letter, e.g. \")\" or \".\"`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"prefix\"\n    }}>{`prefix?`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`optional`}</inlineCode>{` `}<strong parentName=\"p\">{`prefix`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`Additional string to display before each sequence number/letter, e.g. \"(\"`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"type\"\n    }}>{`type`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`type`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"../enumerations/ParagraphListType.md#ordered\"\n      }}><inlineCode parentName=\"a\">{`ordered`}</inlineCode></a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}