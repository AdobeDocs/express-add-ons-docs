{"version":3,"file":"component---src-pages-references-document-sandbox-web-index-md-707ced5a5f2754173e9d.js","mappings":"0TAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,uLACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,wYAAkYA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC5Y,KAAQ,qDAAmD,eACvC,sEACxBX,EAAAA,EAAAA,KAACL,EAAW,CAACiB,MAAM,OAAOC,QAAQ,UAAUH,QAAQ,iBACpDV,EAAAA,EAAAA,KAAA,iFACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,kBAAgB,mBAExBA,EAAAA,EAAAA,KAAA,sBAAgBA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAC1B,KAAQ,6DACPX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,YAA6B,yHAC5DX,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,kBAEpBA,EAAAA,EAAAA,KAAA,mIACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,eAAa,mBAErBA,EAAAA,EAAAA,KAAA,4HACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,eAAa,mBAErBA,EAAAA,EAAAA,KAAA,mHACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,gBAAc,oBAEtBA,EAAAA,EAAAA,KAAA,kHACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,gBAAc,oBAEtBA,EAAAA,EAAAA,KAAA,wEACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,gBAAc,oBAEtBA,EAAAA,EAAAA,KAAA,gCACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,qBAEvBA,EAAAA,EAAAA,KAAA,qFAGJ,CAEAI,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/web/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"web-apis\"\n    }}>{`Web APIs`}</h1>\n    <p>{`The Web APIs refer to the set of commonly used APIs that are injected by the document sandbox into the global context to allow you to access common JavaScript functions.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The document sandbox runtime provides implementations of some common Web APIs to perform tasks like logging to the console. They are limited to a set of basic functions currently, as outlined in the next section. Most of the browser's usual APIs/Global Objects are not available in the document sandbox. You can invoke other browser APIs using the iframe runtime environment and `}<a parentName=\"p\" {...{\n        \"href\": \"../communication/index.md#expose-apis-from-the-ui\"\n      }}>{`communicate`}</a>{` the result back to your code running inside the sandbox runtime.`}</p>\n    <InlineAlert slots=\"text\" variant=\"success\" mdxType=\"InlineAlert\" />\n    <p>{`These APIs can automatically be used in your document sandbox code.`}</p>\n    <h2 {...{\n      \"id\": \"console-object\"\n    }}>{`Console Object`}</h2>\n    <p>{`A global `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/console\"\n      }}><inlineCode parentName=\"a\">{`console`}</inlineCode></a>{` object implementation is provided with the following JavaScript method implementations for use in your script code.`}</p>\n    <h3 {...{\n      \"id\": \"consolelog\"\n    }}>{`console.log()`}</h3>\n    <p>{`For general output of logging information. You may use string substitution and additional arguments with this method.`}</p>\n    <h3 {...{\n      \"id\": \"consoleinfo\"\n    }}>{`console.info()`}</h3>\n    <p>{`Informative logging of information. You may use string substitution and additional arguments with this method.`}</p>\n    <h3 {...{\n      \"id\": \"consolewarn\"\n    }}>{`console.warn()`}</h3>\n    <p>{`Outputs a warning message. You may use string substitution and additional arguments with this method.`}</p>\n    <h3 {...{\n      \"id\": \"consoleerror\"\n    }}>{`console.error()`}</h3>\n    <p>{`Outputs an error message. You may use string substitution and additional arguments with this method.`}</p>\n    <h3 {...{\n      \"id\": \"consoledebug\"\n    }}>{`console.debug()`}</h3>\n    <p>{`Outputs a message to the console with the log level debug.`}</p>\n    <h3 {...{\n      \"id\": \"consoleclear\"\n    }}>{`console.clear()`}</h3>\n    <p>{`Clear the console.`}</p>\n    <h3 {...{\n      \"id\": \"consoleassert\"\n    }}>{`console.assert()`}</h3>\n    <p>{`Log a message and stack trace to console if the first argument is false.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}