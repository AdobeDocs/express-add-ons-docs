{
  "analysis_metadata": {
    "total_queries": 634,
    "analysis_date": "2025-01-27",
    "data_source": "Adobe Express Add-ons AI Assistant Langfuse Logs"
  },
  "query_categories": {
    "text_manipulation": {
      "priority": "high",
      "frequency_percentage": 35,
      "subcategories": {
        "creation": [
          "how do i create a text node and put it on the screen",
          "create a function that creates a text node and writes in it and positions it",
          "how to set text size while creating a textNode?"
        ],
        "styling": [
          "how to make the textNode bold",
          "how to set text node color", 
          "change the font size to something small",
          "console log all the possible fonts i can use"
        ],
        "positioning": [
          "how to change the text nodes location",
          "how to ensure that a textNode fits in the screen",
          "make sure that the textNode is 50% the height of the page"
        ]
      },
      "common_errors": [
        ".setSize is not a function in adobe express",
        "setTransform is not a function"
      ],
      "documentation_gaps": [
        "Complete text node lifecycle examples",
        "Font application patterns",
        "Text sizing and positioning best practices"
      ]
    },
    "error_handling": {
      "priority": "high",
      "frequency_percentage": 25,
      "subcategories": {
        "function_errors": [
          ".setSize is not a function in adobe express",
          "got this error: not a function at <anonymous> (code.js:96)"
        ],
        "import_errors": [
          "Uncaught (in promise) ReferenceError: 'colorUtils' is not defined",
          "Error \"express-document-sandbox\" is not a built-in module"
        ],
        "async_errors": [
          "Error: Editing the document is not permitted in this context. Use \"editor.queueAsyncEdit()\"",
          "Uncaught (in promise) Error: Editing the document is not permitted in this context"
        ]
      },
      "documentation_gaps": [
        "Common error scenarios and solutions",
        "Async operation patterns",
        "Import/export troubleshooting guide"
      ]
    },
    "media_handling": {
      "priority": "high", 
      "frequency_percentage": 20,
      "subcategories": {
        "image_insertion": [
          "how do i add an image",
          "create an image from this jpeg url",
          "how to add custom gif to canvas"
        ],
        "external_urls": [
          "https://images.pexels.com/photos/8761345/pexels-photo-8761345.jpeg from this jpeg, make an image",
          "add https://images.pexels.com/photos/6185466/pexels-photo-6185466.jpeg to this page in the middle"
        ],
        "data_format_issues": [
          "i have a b64 image source how can i add it to my sandbox with my addon",
          "Error: Invalid Input: Expected bitmapData value to be of type \"Blob\""
        ]
      },
      "documentation_gaps": [
        "Image insertion patterns for different data types",
        "Blob vs URL handling",
        "Media positioning and sizing"
      ]
    },
    "development_setup": {
      "priority": "medium",
      "frequency_percentage": 15,
      "subcategories": {
        "ssl_cors": [
          "No SSL related certificate or key files were found",
          "What do I need to know about CORS in add-ons?",
          "how do i reconfigure the ssl"
        ],
        "build_issues": [
          "'ccweb-add-on-scripts' is not recognized as an internal or external command",
          "Error: EACCES: permission denied, unlink 'dist/code.js'",
          "ccweb-add-on-scripts failed. Reason: listen EADDRINUSE: address already in use ::1:5241"
        ]
      },
      "documentation_gaps": [
        "Complete development environment setup guide",
        "SSL certificate configuration",
        "Common build and deployment issues"
      ]
    },
    "api_integration": {
      "priority": "medium",
      "frequency_percentage": 10,
      "subcategories": {
        "ai_services": [
          "make an add on that takes a text prompt from the user and generates an AI image",
          "I want to make an add on that uses Gemini image generation with Gemini 2.0 Flash"
        ],
        "file_processing": [
          "write the code for an add on to take in a pdf from a drop box and then take the text from that and display it on the page",
          "how do I add a button that allows me to open the file explorer so the user can choose a PDF"
        ],
        "external_apis": [
          "Is there any way to use LLM apis like chatgpt or gemini while building an add-on?",
          "curl -X POST https://u4of07wfe2.execute-api.us-west-2.amazonaws.com/default/chatgpt-proxy"
        ]
      },
      "documentation_gaps": [
        "External API integration patterns",
        "File upload and processing workflows",
        "AI service integration examples"
      ]
    },
    "architecture_confusion": {
      "priority": "high",
      "frequency_percentage": 15,
      "subcategories": {
        "ui_vs_sandbox": [
          "how can i access sandboxProxy methods outside App.jsx?",
          "code in index.js is not calling code in code.js",
          "Would I put this javascript code in the index.js or code.js file?"
        ],
        "api_boundaries": [
          "can i add images directly into the sandbox/canvas through code using my adobe express add on",
          "This script draws a square on the addon, not on the document"
        ]
      },
      "documentation_gaps": [
        "Clear UI vs Sandbox runtime explanation",
        "API boundary documentation",
        "Code organization best practices"
      ]
    }
  },
  "critical_pain_points": [
    {
      "issue": "AI Assistant providing incorrect code and non-existent API methods",
      "frequency": "very_high",
      "impact": "breaks_developer_trust_and_functionality",
      "solution_priority": 1,
      "examples": ["editor.createPage()", "@adobe/ccweb-add-on-sdk imports", "runtime.call()", "setSize() methods"]
    },
    {
      "issue": "UI Runtime vs Document Sandbox confusion",
      "frequency": "very_high",
      "impact": "blocks_basic_functionality",
      "solution_priority": 1,
      "ai_contribution": "AI provided incorrect context examples worsening confusion"
    },
    {
      "issue": "Text node creation and styling",
      "frequency": "very_high", 
      "impact": "core_functionality",
      "solution_priority": 1,
      "ai_contribution": "AI provided inconsistent text manipulation patterns"
    },
    {
      "issue": "Async operation requirements",
      "frequency": "high",
      "impact": "causes_runtime_errors",
      "solution_priority": 2,
      "ai_contribution": "AI sometimes provided code that would generate async errors"
    },
    {
      "issue": "Image insertion patterns",
      "frequency": "high",
      "impact": "media_functionality",
      "solution_priority": 2
    },
    {
      "issue": "Development environment setup",
      "frequency": "medium",
      "impact": "blocks_getting_started",
      "solution_priority": 3
    }
  ],
      "ai_misinformation_patterns": {
      "incorrect_imports": [
        "@adobe/ccweb-add-on-sdk",
        "import { runtime } from '@adobe/ccweb-add-on-sdk'",
        "import addOnSdkAPI from '@adobe/ccweb-add-on-sdk'"
      ],
      "non_existent_methods": [
        "editor.createPage()",
        "editor.document.pages.append()",
        "runtime.call()",
        "runtime.exposeApi()",
        "textNode.setSize()",
        "element.setTransform()"
      ],
      "correct_alternatives": {
        "page_creation": "editor.documentRoot.pages.addPage(inputGeometry)",
        "text_creation": "editor.createText() + textNode.fullContent.applyCharacterStyles()",
        "element_append": "editor.context.insertionParent.children.append()",
        "element_sizing": "element.width = value; element.height = value;"
      }
    },
    "documentation_recommendations": {
      "immediate_actions": [
        "Audit and fix AI assistant responses immediately",
        "Remove all incorrect API methods from AI training data",
        "Create comprehensive text node manipulation guide with verified code",
        "Add UI vs Sandbox architecture explanation to every relevant page",
        "Provide complete working examples with all necessary context",
        "Create error-message-driven troubleshooting guide"
      ],
    "content_structure": [
      "Problem-solution format for each code example",
      "Progressive complexity (basic → intermediate → advanced)",
      "Clear file location indicators (UI vs Sandbox)",
      "Required imports and dependencies listed explicitly"
    ],
    "llm_training_improvements": [
      "Convert queries to structured Q&A pairs",
      "Include full context in code examples",
      "Add common completion patterns",
      "Create scenario-based learning paths"
    ]
  },
  "query_patterns": {
    "progression_sequences": [
      "Basic element creation → Styling → Positioning → Complex interactions",
      "Simple API calls → Error debugging → Advanced integration",
      "Development setup → Basic functionality → External service integration"
    ],
    "common_misconceptions": [
      "Confusing UI SDK methods with Document Sandbox methods",
      "Expecting synchronous operations in async contexts",
      "Assuming methods exist that don't (setSize, setTransform)",
      "Not understanding when queueAsyncEdit is required"
    ],
    "success_indicators": [
      "Queries that build upon previous successful interactions",
      "Requests for advanced features after mastering basics",
      "Creative project ideas and hackathon concepts"
    ]
  }
} 