"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[2581],{2763:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return i},default:function(){return s}});var a=t(58168),d=t(80045),o=(t(88763),t(15680)),m=t(83407);const r=["components"],i={},l={_frontmatter:i},p=m.A;function s(e){let{components:n}=e,t=(0,d.A)(e,r);return(0,o.mdx)(p,(0,a.A)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"addonuisdkinstanceruntime"},"addOnUISdk.instance.runtime"),(0,o.mdx)("p",null,"Represents the runtime of the current add-on."),(0,o.mdx)("h2",{id:"properties"},"Properties"),(0,o.mdx)("h3",{id:"type"},(0,o.mdx)("inlineCode",{parentName:"h3"},"type")),(0,o.mdx)("p",null,"The ",(0,o.mdx)("a",{parentName:"p",href:"addonsdk-constants.md"},"RuntimeType")," constant representing the entrypoint creating this backend object (ie: ",(0,o.mdx)("inlineCode",{parentName:"p"},'"panel"'),", ",(0,o.mdx)("inlineCode",{parentName:"p"},'"dialog"')," or ",(0,o.mdx)("inlineCode",{parentName:"p"},'"documentSandbox"'),")."),(0,o.mdx)("h3",{id:"dialog"},(0,o.mdx)("a",{parentName:"h3",href:"../addonsdk/runtime-dialog.md"},(0,o.mdx)("inlineCode",{parentName:"a"},"Dialog"))),(0,o.mdx)("p",null,"(Optional) When the ",(0,o.mdx)("inlineCode",{parentName:"p"},"RuntimeType")," is ",(0,o.mdx)("inlineCode",{parentName:"p"},'"dialog"'),", this object will contain the reference to the ",(0,o.mdx)("a",{parentName:"p",href:"runtime-dialog.md"},"modal dialog")," the add-on invoked, and can be used to programmatically close the dialog and send results back to the caller. Will be ",(0,o.mdx)("inlineCode",{parentName:"p"},"undefined")," when no modal dialog is present. Check out the ",(0,o.mdx)("a",{parentName:"p",href:"../../guides/develop/how_to/modal_dialogs.md"},"modal dialogs use case examples")," for more details on using dialogs, as well as the related ",(0,o.mdx)("a",{parentName:"p",href:"../addonsdk/addonsdk-app.md#showmodaldialog"},(0,o.mdx)("inlineCode",{parentName:"a"},"showModalDialog")," method"),"."),(0,o.mdx)("h2",{id:"methods"},"Methods"),(0,o.mdx)("p",null,"The following methods allow you to communicate bidirectionally between the add-on running in the iframe and the ",(0,o.mdx)("a",{parentName:"p",href:"../document-sandbox/"},"document sandbox")," environments."),(0,o.mdx)("h3",{id:"exposeapi"},"exposeApi()"),(0,o.mdx)("p",null,"Use this method to expose an API from your UI code running in the iframe to another runtime (ie: the ",(0,o.mdx)("a",{parentName:"p",href:"../document-sandbox/"},"document sandbox code")," defined in your ",(0,o.mdx)("inlineCode",{parentName:"p"},"code.js")," for instance)."),(0,o.mdx)("h4",{id:"signature"},"Signature"),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"exposeApi<T>(obj: T): void")),(0,o.mdx)("h4",{id:"parameters"},"Parameters"),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"obj")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"object")),(0,o.mdx)("td",{parentName:"tr",align:"right"},"The concrete object/class instance to expose to other runtimes. This method call is allowed only once. Subsequent calls are ignored. ",(0,o.mdx)("strong",{parentName:"td"},"Note"),": you cannot expose entire classes from one runtime and create an instance of that class in another.")))),(0,o.mdx)("h3",{id:"apiproxy"},"apiProxy()"),(0,o.mdx)("p",null,"Requests a promise-based proxy object from another runtime to be used to call the APIs exposed by that other runtime via the ",(0,o.mdx)("inlineCode",{parentName:"p"},"exposeApi")," method."),(0,o.mdx)("h4",{id:"signature-1"},"Signature"),(0,o.mdx)("p",null,(0,o.mdx)("inlineCode",{parentName:"p"},"async apiProxy(runtimeType: RuntimeType): Promise<Remote<unknown>>")),(0,o.mdx)("h4",{id:"parameters-1"},"Parameters"),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Name"),(0,o.mdx)("th",{parentName:"tr",align:null},"Type"),(0,o.mdx)("th",{parentName:"tr",align:"right"},"Description"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"runtimeType")),(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("inlineCode",{parentName:"td"},"RuntimeType")),(0,o.mdx)("td",{parentName:"tr",align:"right"},'The runtime type to create the proxy object from (ie: "documentSandbox" for instance, which maps to the code referenced in the ',(0,o.mdx)("a",{parentName:"td",href:"../document-sandbox/index.md#document-sandbox-entry-point"},(0,o.mdx)("inlineCode",{parentName:"a"},"documentSandbox")," entryPoint")," in your add-on's ",(0,o.mdx)("inlineCode",{parentName:"td"},"manifest.js")," file).")))),(0,o.mdx)("h4",{id:"return"},"Return"),(0,o.mdx)("p",null,"A promise which resolves to an API proxy object exposed by the desired runtime as soon as the other runtime is finished initializing."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Note:")," Calling the method again for the same runtime type will return a new proxy object without any behavior difference."),(0,o.mdx)("h4",{id:"example-usage"},"Example Usage"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},'addOnUISdk.ready.then(async () => {\n  console.log("addOnUISdk is ready for use.");\n  const { runtime } = addOnUISdk.instance;\n\n  let createShapesButton = document.getElementById("createShapesButton");\n  createShapesButton.addEventListener("click", async (e) => {\n    const sandboxProxy = await runtime.apiProxy("documentSandbox");\n    try {\n      let result = await sandboxProxy.createShapes();\n      console.log(result);\n    } catch (exc) {\n      console.error(exc.message, exc.stack);\n    }\n  });\n});\n')))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-addonsdk-instance-runtime-md-f9f895357c02ed800105.js.map