{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-enumerations-stroke-type-md-bd0faba1bedefd5bada6.js","mappings":"0TAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACb,KAAQ,kBACN,yBAA6B,kBACnCX,EAAAA,EAAAA,KAAA,MACE,GAAM,0BACJ,4BACJA,EAAAA,EAAAA,KAACL,EAAW,CAACiB,MAAM,OAAOC,QAAQ,UAAUH,QAAQ,iBACpDV,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,KAAK,iEAAsE,8EAC7FX,EAAAA,EAAAA,KAACL,EAAW,CAACiB,MAAM,OAAOC,QAAQ,UAAUH,QAAQ,iBACpDV,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,KAAK,uDAA4D,iKAEnFX,EAAAA,EAAAA,KAAA,MACE,GAAM,uBACJ,wBACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,SACJ,UACJA,EAAAA,EAAAA,KAAA,SAAI,MAAKA,EAAAA,EAAAA,KAAA,UAAQW,WAAW,KAAK,SAAkB,MAAKX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAK,aACpFX,EAAAA,EAAAA,KAAA,SAAI,+CAGR,CAEAI,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/enumerations/StrokeType.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / StrokeType`}</p>\n    <h1 {...{\n      \"id\": \"enumeration-stroketype\"\n    }}>{`Enumeration: StrokeType`}</h1>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p><em parentName=\"p\">{`Do not depend on the literal string values of these constants`}</em>{`, as they may change. Always reference the enum identifiers in your code.`}</p>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p><em parentName=\"p\">{`Additional stroke types may be added in the future.`}</em>{` If your code has different branches or cases depending on stroke type,\nalways have a default/fallback case to handle any unknown values you may encounter.`}</p>\n    <h2 {...{\n      \"id\": \"enumeration-members\"\n    }}>{`Enumeration Members`}</h2>\n    <h3 {...{\n      \"id\": \"color\"\n    }}>{`color`}</h3>\n    <p>{`â€¢ `}<strong parentName=\"p\">{`color`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"Color\"`}</inlineCode></p>\n    <p>{`A solid-color stroke, with optional dashes.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}