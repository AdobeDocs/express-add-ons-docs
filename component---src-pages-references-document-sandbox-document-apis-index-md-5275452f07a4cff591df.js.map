{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-index-md-5275452f07a4cff591df.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"document-apis\"\n    }}>{`Document APIs`}</h1>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"./classes/Editor.md\"\n      }}>{`Document APIs`}</a>{` provide access to the user's document, allowing you to access the document structure and properties, and apply changes to it via the provided APIs.`}</p>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p>{`These API's are currently `}<strong parentName=\"p\">{`experimental only`}</strong>{`. Please do not use them in any add-ons you plan to distribute or submit with updates until they have been deemed stable.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Some examples of what you can do with the `}<a parentName=\"p\" {...{\n        \"href\": \"./classes/Editor.md\"\n      }}>{`Adobe Express Document APIs`}</a>{` are creating shapes, adding pages to the document, clearing the artboard and more. See the following sections for more details and examples of using these new APIs.`}</p>\n    <h2 {...{\n      \"id\": \"access-to-express-document-apis\"\n    }}>{`Access to Express Document APIs`}</h2>\n    <p>{`An exported `}<inlineCode parentName=\"p\">{`editor`}</inlineCode>{` module is provided to enable access to the `}<a parentName=\"p\" {...{\n        \"href\": \"./classes/Editor.md\"\n      }}>{`Document APIs`}</a>{`. You can simply import this module into your script file code to access the methods provided below. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { editor } from \"express\"; // named import 'editor' from express module\n`}</code></pre>\n    <p>{`See the example below for further usage details.`}</p>\n    <h2 {...{\n      \"id\": \"example-code-snippet\"\n    }}>{`Example Code Snippet`}</h2>\n    <p>{`The following code snippet illustrates how to use the `}<a parentName=\"p\" {...{\n        \"href\": \"./classes/Editor.md\"\n      }}>{`Express Document APIs`}</a>{` from the document sandbox code running in your `}<inlineCode parentName=\"p\">{`code.js`}</inlineCode>{` for instance, to access the current document, create a rectangle, set some properties and a fill for the rectangle, and finally, add it to the document:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { editor, colorUtils } from \"express\";\n\nconst insertionParent = editor.context.insertionParent; // get node to insert content into\n\nconst rectangle = editor.createRectangle();\nrectangle.width = 200;\nrectangle.height = 150;\nrectangle.translateX = 100;\nrectangle.translateY = 20;\nconsole.log(rectangle); // for debugging purpose\n\nconst rectangleFill = editor.createColorFill(colorUtils.fromRGB(Math.random(), Math.random(), Math.random(), Math.random()));\nrectangle.fill = rectangleFill;\n\ninsertionParent.children.append(rectangle);\n`}</code></pre>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`IMPORTANT:`}</strong>{` While using the Document APIs in experimental mode, there is a `}<strong parentName=\"p\">{`risk that your document could become corrupt or unopenable`}</strong>{`. In particular, you can expect this to happen if you are using any grids or vector shapes (with the exception of simple circles/rectangles) while testing with these APIs. Please do not test these APIs with the use of any documents you deem important.`}</p>\n    <h2 {...{\n      \"id\": \"tutorials-references--code-samples\"\n    }}>{`Tutorials, References & Code Samples`}</h2>\n    <p>{`Please see `}<a parentName=\"p\" {...{\n        \"href\": \"../../../guides/tutorials/grids-addon.md\"\n      }}>{`this extensive tutorial`}</a>{` provided to help you build your first add-on using the Document APIs in our `}<a parentName=\"p\" {...{\n        \"href\": \"../../../guides/tutorials/\"\n      }}>{`tutorials section`}</a>{`. Also be sure to check out the `}<a parentName=\"p\" {...{\n        \"href\": \"/express-add-ons-docs/express-add-on-apis/docs/api/classes/Editor\"\n      }}>{`full set of API documentation`}</a>{` as well as the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/express-add-on-samples/tree/main/document-sandbox-samples/editor-apis\"\n      }}>{`editor-apis`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/express-add-on-samples/tree/main/document-sandbox-samples/image-and-page\"\n      }}>{`image-and-page`}</a>{` code samples provided in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/express-add-on-samples/tree/main/document-sandbox-samples\"\n      }}>{`document sandbox samples`}</a>{` for more details on using the `}<a parentName=\"p\" {...{\n        \"href\": \"./classes/Editor.md\"\n      }}>{`Document APIs`}</a>{`.`}</p>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p>{`During this experimental phase, be sure to only use documented APIs when writing your add-ons. Use of undocumented APIs (which may be prefixed with an underscore, but not always) is not supported and may cause your add-on to fail or lead to document corruption. Also, we recommend you `}<strong parentName=\"p\"><em parentName=\"strong\">{`only test the use of these experimental APIs against non-essential documents`}</em></strong>{`, due to the potential for loss or corruption.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}