{"componentChunkName":"component---src-pages-guides-learn-how-to-drag-and-drop-md","path":"/guides/learn/how_to/drag_and_drop/","result":{"pageContext":{"frontmatter":{"keywords":["Adobe Express","Express Add-on SDK","Express Editor","Add-on SDK","SDK","JavaScript","Extend","Extensibility","API","Drag and Drop","Media","ImportAddOnData","Metadata","enableDragToDocument"],"title":"Use Drag-and-Drop","description":"Use Drag-and-Drop.","contributors":["https://github.com/undavide","https://github.com/hollyschinsky"],"faq":{"questions":[{"question":"How do I enable drag-and-drop for an element?","answer":"Call `addOnUISdk.app.enableDragToDocument(element, callbacks)` with preview and completion callbacks."},{"question":"What callbacks are required?","answer":"Provide `previewCallback()` for preview URL and `completionCallback()` to return the blob for insertion."},{"question":"How do I handle drag events?","answer":"Listen for `\"dragstart\"` and `\"dragend\"` events using `addOnUISdk.app.on()`."},{"question":"What's special about audio content?","answer":"Audio requires an `attributes` object with a `title` property in the completion callback return."},{"question":"Can I drag remote images?","answer":"Yes, fetch the remote URL in the completion callback and return the blob."},{"question":"How do I use sourceMimeType when dragging converted documents?","answer":"Add `sourceMimeType` to the attributes object in completionCallback to show \"Import a document\" instead of \"Import a PDF\" in the consent dialog."},{"question":"When should I include sourceMimeType in drag operations?","answer":"Use it when dragging PDFs that were converted from other document types like Word (.docx) or Google Docs (.gdoc) to provide clearer user messaging."},{"question":"What sourceMimeType values work for drag and drop?","answer":"Common values include \"docx\" for Word documents and \"gdoc\" for Google Docs. Use the original document format before PDF conversion."},{"question":"What event handlers should I avoid?","answer":"Avoid pointer event handlers that prevent default or stop propagation on drag-enabled elements."},{"question":"How do I attach custom metadata to dragged content?","answer":"Use the `importAddOnData` property in completionCallback return with `nodeAddOnData` and `mediaAddOnData` objects to store custom metadata that can be retrieved later via document sandbox APIs."}]}}}},"staticQueryHashes":["1440646406","1814815295","3508090095"]}