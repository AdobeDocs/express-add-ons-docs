"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[2272],{15600:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return r},default:function(){return s}});var d=a(87462),i=a(63366),t=(a(15007),a(64983)),l=a(91515),m=["components"],r={},o={_frontmatter:r},p=l.Z;function s(e){var n=e.components,a=(0,i.Z)(e,m);return(0,t.mdx)(p,(0,d.Z)({},o,a,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("h1",{id:"api-reference"},"API Reference"),(0,t.mdx)("h2",{id:"addonsdk-object"},(0,t.mdx)("inlineCode",{parentName:"h2"},"AddOnSdk: object")),(0,t.mdx)("p",null,"The core add-on SDK object which provides access to everything needed for add-on development."),(0,t.mdx)("h2",{id:"addonsdkapp-object"},(0,t.mdx)("inlineCode",{parentName:"h2"},"AddOnSdk.app: Object")),(0,t.mdx)("p",null,"Provides access to the host application (Adobe Express). "),(0,t.mdx)("h3",{id:"addonsdk"},"AddOnSdk"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk")," - The core add-on SDK object which provides access to everything needed for add-on development."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.apiVersion")," - Current version of the add-on SDK running."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app")," - Provides access to the host application (Adobe Express). "),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.constants")," - A set of constants used throughout the add-on SDK."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.instance")," - the currently running add-on instance."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.ready")," - a ",(0,t.mdx)("inlineCode",{parentName:"li"},"Promise")," that indicates you can start accessing the APIs when resolved. ")),(0,t.mdx)("h3",{id:"addonsdkapp"},"AddOnSdk.app"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.document")," - Represents the active document of the host application."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.oauth")," - Provides access to the OAuth methods needed to implement OAuth 2.0 for user authorization."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.on")," - listen to an event (ie: ",(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.on.themechange"),")."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.off")," - stop listening to an event."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.ui")," - represents the host UI (Adobe Express UI)."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.enableDragToDocument()")," - enables drag on an element. Pass in a callback to\nparameters:\n",(0,t.mdx)("inlineCode",{parentName:"li"},"element"),": ",(0,t.mdx)("inlineCode",{parentName:"li"},"HTMLElement"),",\n",(0,t.mdx)("inlineCode",{parentName:"li"},"dragCallbacks"),": ",(0,t.mdx)("inlineCode",{parentName:"li"},"DragCallbacks"),"\nreturn type:\n",(0,t.mdx)("inlineCode",{parentName:"li"},"void")),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.showModalDialog()")," - shows a modal dialog with a certain variant")),(0,t.mdx)("h3",{id:"addonsdkappui"},"AddOnSdk.app.ui"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.ui.locale")," - Retrieve the host application current ",(0,t.mdx)("inlineCode",{parentName:"li"},"locale")),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.ui.locales")," - Retrieve the host application's supported languages"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.ui.theme")," - Retrieve the current theme of the host application.")),(0,t.mdx)("h3",{id:"addonsdkinstance"},"AddOnSdk.instance"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.instance.clientStorage")," - Reference to the client storage of the add-on."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.instance.manifest")," - Add-ons manifest details. Maps to entries in the add-ons ",(0,t.mdx)("inlineCode",{parentName:"li"},"manifest.json")," file.")),(0,t.mdx)("h2",{id:"events"},"Events"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.on.localechange")," - Triggered when there is a locale change at the host side."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.on.themechange")," - Triggered when there is a theme change at the host side."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.on.dragstart")," - triggered when the user starts dragging an item for which drag behavior is enabled."),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"AddOnSdk.app.on.dragend")," - triggered when the drag operation ends.")),(0,t.mdx)("h2",{id:"addonsdkconstants"},"AddOnSDK.constants"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},(0,t.mdx)("inlineCode",{parentName:"p"},"Range")," - Rendition page range"),(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"currentPage")," - Generate rendition for the current page"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"entireDocument")," - Generate rendition for all the pages"))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},(0,t.mdx)("inlineCode",{parentName:"p"},"RenditionFormat")," - Required output format of the rendition"),(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"png"),' = "image/png" - PNG format'),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"jpg"),' = "image/jpeg" - JPG format'),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"mp4"),' = "video/mp4" - MP4 format'),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"pdf"),' = "application/pdf" - PDF format'))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},(0,t.mdx)("inlineCode",{parentName:"p"},"RenditionType")," - The type of rendition"),(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"page")," - Rendition of the whole page"))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},(0,t.mdx)("inlineCode",{parentName:"p"},"Variant")," - Types of dialog variants supported"),(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"confirmation")," - Ask a user to confirm an action"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"information")," - Share information for user to acknowledge"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"warning")," - Share information that a user needs to consider before proceeding"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"destructive")," - Tell a user that if they proceed with an action, it may impact their data in a negative way"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"error")," - Communicate critical issue that a user needs to resolve before proceeding"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"input")," - Ask a user to provide some inputs"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"custom")," - A dialog that can render complex forms and content"))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},(0,t.mdx)("inlineCode",{parentName:"p"},"FieldType")," - The type of the input field in Simple Dialog  "),(0,t.mdx)("ul",{parentName:"li"},(0,t.mdx)("li",{parentName:"ul"},'text = "text" - One-line text input field'))),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},'DialogResultType - The type of the dialog result\nalert = "alert" - Alert dialog result\ninput = "input" - Input dialog result\ncustom = "custom" - Custom dialog result')),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},(0,t.mdx)("inlineCode",{parentName:"p"},"ButtonType")," - Simple Dialog Button types\n",(0,t.mdx)("inlineCode",{parentName:"p"},"primary"),' = "primary" = Primary button pressed\n',(0,t.mdx)("inlineCode",{parentName:"p"},"secondary"),' = "secondary" = Secondary button pressed\n',(0,t.mdx)("inlineCode",{parentName:"p"},"cancel"),' = "cancel" = cancel button pressed\n',(0,t.mdx)("inlineCode",{parentName:"p"},"close"),' = "close" = Dialog closed via ESC or close(X) button')),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("p",{parentName:"li"},(0,t.mdx)("inlineCode",{parentName:"p"},"RuntimeType")," - The runtime type\n",(0,t.mdx)("inlineCode",{parentName:"p"},"panel"),' = "panel" - Iframe based runtime that usually hosts the add-on main UI logic.\n',(0,t.mdx)("inlineCode",{parentName:"p"},"dialog"),' = "dialog" - Iframe based runtime that hosts a modal dialog UI.\n'))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-references-apis-objects-md-aa7e79494e8671416c1c.js.map