{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-interfaces-solid-color-stroke-md-6f8d504789e70a300b77.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/interfaces/SolidColorStroke.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / SolidColorStroke`}</p>\n    <h1 {...{\n      \"id\": \"interface-solidcolorstroke\"\n    }}>{`Interface: SolidColorStroke`}</h1>\n    <p>{`Represents a solid-color stroke, with optional dashes.`}</p>\n    <p>{`The most convenient way to create a solid-color stroke is via `}<inlineCode parentName=\"p\">{`Editor.makeStroke()`}</inlineCode>{`. This also futureproofs\nyour code in case any other required fields are added to the Stroke descriptor in the future.`}</p>\n    <h2 {...{\n      \"id\": \"extends\"\n    }}>{`Extends`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"Stroke.md\"\n        }}><inlineCode parentName=\"a\">{`Stroke`}</inlineCode></a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"color\"\n    }}>{`color`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`color`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"Color.md\"\n      }}><inlineCode parentName=\"a\">{`Color`}</inlineCode></a></p>\n    <p>{`The color of a stroke.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"dashoffset\"\n    }}>{`dashOffset`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`dashOffset`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`Number of pixels the beginning of dash pattern should be offset along the stroke.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"dashpattern\"\n    }}>{`dashPattern`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`dashPattern`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{`[]`}</p>\n    <p>{`If empty, this is a solid stroke.\nIf non-empty, the values alternate between length of a rendered and blank segment,\nrepeated along the length of the stroke. The first value represents the first solid segment.\nArray must be of even length. Values cannot be negative.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"position\"\n    }}>{`position`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`position`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"../enumerations/StrokePosition.md\"\n      }}><inlineCode parentName=\"a\">{`StrokePosition`}</inlineCode></a></p>\n    <p>{`The position of the stroke relative to the outline of the shape.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"type\"\n    }}>{`type`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`readonly`}</inlineCode>{` `}<strong parentName=\"p\">{`type`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"../enumerations/StrokeType.md#color\"\n      }}><inlineCode parentName=\"a\">{`color`}</inlineCode></a></p>\n    <p>{`The stroke type.`}</p>\n    <h4 {...{\n      \"id\": \"overrides\"\n    }}>{`Overrides`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"Stroke.md\"\n      }}><inlineCode parentName=\"a\">{`Stroke`}</inlineCode></a>{`.`}<a parentName=\"p\" {...{\n        \"href\": \"Stroke.md#type\"\n      }}><inlineCode parentName=\"a\">{`type`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"width\"\n    }}>{`width`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`width`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`The thickness of a stroke. Must be from MIN_STROKE_WIDTH to MAX_STROKE_WIDTH.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}