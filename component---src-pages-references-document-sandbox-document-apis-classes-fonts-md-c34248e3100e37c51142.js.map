{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-classes-fonts-md-c34248e3100e37c51142.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/classes/Fonts.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / Fonts`}</p>\n    <h1 {...{\n      \"id\": \"class-fonts\"\n    }}>{`Class: Fonts`}</h1>\n    <p>{`The Fonts class provides methods to work with fonts.`}</p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"frompostscriptname\"\n    }}>{`fromPostscriptName()`}</h3>\n    <p><inlineCode parentName=\"p\">{`Experimental`}</inlineCode></p>\n    <p>{`• `}<strong parentName=\"p\">{`fromPostscriptName`}</strong>{`(`}<inlineCode parentName=\"p\">{`postscriptName`}</inlineCode>{`): `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{`\\\\<`}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"AvailableFont.md\"\n      }}><inlineCode parentName=\"a\">{`AvailableFont`}</inlineCode></a>{`>`}</p>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`IMPORTANT:`}</strong>{` This is currently `}<strong parentName=\"p\"><em parentName=\"strong\">{`experimental only`}</em></strong>{` and should not be used in any add-ons you will be distributing until it has been declared stable. To use it, you will first need to set the `}<inlineCode parentName=\"p\">{`experimentalApis`}</inlineCode>{` flag to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../manifest/index.md#requirements\"\n      }}><inlineCode parentName=\"a\">{`requirements`}</inlineCode></a>{` section of the `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{`.`}</p>\n    <p>{`Get an `}<a parentName=\"p\" {...{\n        \"href\": \"AvailableFont.md\"\n      }}>{`AvailableFont`}</a>{` that exactly matches the given PostScript name, if any. Only fonts that the user has permission to use\nfor editing content are returned, so the result of this call is always safe to apply to a `}<a parentName=\"p\" {...{\n        \"href\": \"TextContentModel.md\"\n      }}>{`TextContentModel`}</a>{`'s styles.`}</p>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <p>{`• `}<strong parentName=\"p\">{`postscriptName`}</strong>{`: `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`The PostScript name of the font.`}</p>\n    <h4 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`Promise`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"AvailableFont.md\"\n      }}><inlineCode parentName=\"a\">{`AvailableFont`}</inlineCode></a>{`>`}</p>\n    <p>{`The Font object if found and available for editing, otherwise undefined.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}