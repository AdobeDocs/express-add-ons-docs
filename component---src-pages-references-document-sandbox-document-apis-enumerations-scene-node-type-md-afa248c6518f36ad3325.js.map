{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-enumerations-scene-node-type-md-afa248c6518f36ad3325.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/enumerations/SceneNodeType.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / SceneNodeType`}</p>\n    <h1 {...{\n      \"id\": \"enumeration-scenenodetype\"\n    }}>{`Enumeration: SceneNodeType`}</h1>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p><em parentName=\"p\">{`Do not depend on the literal string values of these constants`}</em>{`, as they may change. Always reference the enum identifiers in your code.`}</p>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p><em parentName=\"p\">{`Additional node types may be added in the future.`}</em>{` If your code has different branches or cases depending on node type,\nalways have a default/fallback case to handle any unknown values you may encounter.`}</p>\n    <h2 {...{\n      \"id\": \"enumeration-members\"\n    }}>{`Enumeration Members`}</h2>\n    <h3 {...{\n      \"id\": \"artboard\"\n    }}>{`artboard`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`artboard`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"ab:Artboard\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"artworkroot\"\n    }}>{`artworkRoot`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`artworkRoot`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"ArtworkRoot\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"complexshape\"\n    }}>{`complexShape`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`complexShape`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"ComplexShape\"`}</inlineCode></p>\n    <p>{`Type of ComplexShapeNode, representing a complex prepackaged shape with fill and stroke, that appears as a leaf node in the UI`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"ellipse\"\n    }}>{`ellipse`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`ellipse`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"Ellipse\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"gridlayout\"\n    }}>{`gridLayout`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`gridLayout`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"GridLayout\"`}</inlineCode></p>\n    <p>{`Type of GridLayoutNode represents a grid layout in the scenegraph used to create a layout grid that other content can be placed into`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"group\"\n    }}>{`group`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`group`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"Group\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"imagerectangle\"\n    }}>{`imageRectangle`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`imageRectangle`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"ImageRectangle\"`}</inlineCode></p>\n    <p>{`Type of MediaContainerNode's \"media rectangle\" child when it is holding an image`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"line\"\n    }}>{`line`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`line`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"Line\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"linkedasset\"\n    }}>{`linkedAsset`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`linkedAsset`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"LinkedAsset\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"mediacontainer\"\n    }}>{`mediaContainer`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`mediaContainer`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"MediaContainer\"`}</inlineCode></p>\n    <p>{`Type of MediaContainerNode, representing the top-level container of the multi-node construct used to display images or video.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"page\"\n    }}>{`page`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`page`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"Page\"`}</inlineCode></p>\n    <p>{`Type of PageNode`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"path\"\n    }}>{`path`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`path`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"Path\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"polygon\"\n    }}>{`polygon`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`polygon`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"artgr:Polygon\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"rectangle\"\n    }}>{`rectangle`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`rectangle`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"Rectangle\"`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"solidcolorshape\"\n    }}>{`solidColorShape`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`solidColorShape`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"SolidColorShape\"`}</inlineCode></p>\n    <p>{`Type of SolidColorShapeNode, representing a solid-color prepackaged shape that appears as a leaf node in the UI`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"strokeshape\"\n    }}>{`strokeShape`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`strokeShape`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"StrokeShape\"`}</inlineCode></p>\n    <p>{`Type of StrokeShapeNode, representing a stroke-only prepackaged shape that appears as a leaf node in the UI`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"text\"\n    }}>{`text`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`text`}</strong>{`: `}<inlineCode parentName=\"p\">{`\"Text\"`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}