{"version":3,"file":"component---src-pages-references-addonsdk-runtime-dialog-md-4917ffc9971eafafdbd8.js","mappings":"yTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,iCAA+B,qCAEvCA,EAAAA,EAAAA,KAAA,+KAAyKA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACnL,KAAQ,mDAAiD,mCACjB,+DAA+DH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACrH,KAAQ,gDACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,mBAAiC,WAAe,MAC/EH,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAAA,MACE,GAAM,SAAO,YAEfA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAIH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,UAAQ,mCAAwDH,EAAAA,EAAAA,KAAA,WAAM,+EAEvHA,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,eAEpBA,EAAAA,EAAAA,KAAA,cACEA,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,MAAI,SAEfH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,SAAO,kBAItBH,EAAAA,EAAAA,KAAA,SAAOG,WAAW,UAChBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,UACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,OACRH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,aAC9BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,OACRH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,kBAC9BH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,KACb,MAAS,SAAO,2DAKxBH,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAAA,wDACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,kBAEvBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,uhBAoBlC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/references/addonsdk/runtime-dialog.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"addonsdkinstanceruntimedialog\"\n    }}>{`AddOnSdk.instance.runtime.dialog`}</h1>\n    <p>{`Represents the modal dialog presented to the user. This object can be used to manage the dialog, like closing it and sending results to the caller. Check out the `}<a parentName=\"p\" {...{\n        \"href\": \"../../guides/develop/use_cases.md#modal-dialogs\"\n      }}>{`modal dialogs use case examples`}</a>{` for more details on using dialogs, as well as the related `}<a parentName=\"p\" {...{\n        \"href\": \"../addonsdk/addonsdk-app.md#showmodaldialog\"\n      }}><inlineCode parentName=\"a\">{`showModalDialog`}</inlineCode>{` method`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"close\"\n    }}>{`close()`}</h3>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`close(result?: unknown): void`}</inlineCode></strong><br />{`\nCloses the modal dialog and posts the result back to the dialog invoker.`}</p>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`result?`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`unknown<any>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"right\"\n          }}>{`An optional result to return to the dialog invoker.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h4>\n    <p>{`An optional result of a user-defined type.`}</p>\n    <h4 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example Usage`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import AddOnSdk from \"https://new.express.adobe.com/static/add-on-sdk/sdk.js\";\n \n// Wait for the SDK to be ready\nawait AddOnSdk.ready;\n\ncloseButton.onsubmit = () => {\n  // User cancelled the operation, close the dialog with no result\n  AddOnSdk.instance.runtime.dialog.close();\n}\n\ncreateButton.onsubmit = () => {\n  // user has selected a design - close the dialog & report the selection details as the result back to the caller.\n  AddOnSdk.instance.runtime.dialog.close({\n    selectedDesign: \"grid-layout\"\n  });\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}