{"version":3,"file":"component---src-pages-guides-learn-how-to-use-color-md-50d364fc79404c2b7833.js","mappings":"0TAMaA,EAAe,CAAC,EACvBC,EAAgBC,GAAQ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,EACMI,EAAcN,EAAc,eAC5BO,EAAYP,EAAc,aAC1BQ,EAAc,CAClBT,gBAEIU,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIV,GAAKY,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOV,EAAAA,EAAAA,KAACI,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBN,EAAK,CAAEW,WAAYA,EAAYI,QAAQ,eAG5EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,aACJ,cACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,iBACJ,kBACJA,EAAAA,EAAAA,KAAA,SAAI,4DAA2DA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACzE,KAAQ,2EACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,UAA0B,yBAAwBb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,OAAoB,MAAKb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,SAAsB,MAAKb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,QAAqB,UAASb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,SAAsB,qDAAoDb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,SAAsB,mGACjZb,EAAAA,EAAAA,KAAA,SAAI,8CAA6CA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC3D,KAAQ,6EACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,eAA+B,8BAA6Bb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,0BAAuC,6BAA4Bb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACtM,KAAQ,+DACN,iBAAqB,iCAAgCb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACrE,KAAQ,qFACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,cAA8B,SAAQb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACjF,KAAQ,qFACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,cAA8B,cAC/Db,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,sXAWNb,EAAAA,EAAAA,KAAA,SAAI,gFAA+EA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC7F,KAAQ,mFACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,YAA4B,uFAC7Db,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,oGAGNb,EAAAA,EAAAA,KAAA,MACE,GAAM,gBACJ,iBACJA,EAAAA,EAAAA,KAAA,SAAI,6BAA4BA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,SAAsB,iCAAgCb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC5H,KAAQ,wGACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,2BAA2C,MAC5Eb,EAAAA,EAAAA,KAAA,MACE,GAAM,sBACJ,wBACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,6WAYNb,EAAAA,EAAAA,KAAA,SAAI,YAAWA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACzB,KAAQ,iBACN,YAAgB,6BACtBb,EAAAA,EAAAA,KAAA,MACE,GAAM,kCACJ,oCACJA,EAAAA,EAAAA,KAAA,SAAI,iGAAgGA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC9G,KAAQ,0EACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,SAAyB,SAAQb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC5E,KAAQ,4EACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,WAA2B,sBAAqBb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC3F,KAAQ,uFACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,2BAA2C,SAAQb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC9F,KAAQ,oFACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,wBAAwC,uDAAsDb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACzI,KAAQ,+EACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,aAA6B,SAAQb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAChF,KAAQ,gFACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,cAA8B,YAC/Db,EAAAA,EAAAA,KAAA,SAAI,0IACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,gvBA2BNb,EAAAA,EAAAA,KAAA,SAAI,cAAaA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,QAAqB,qDAAoDb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,SAAsB,iDAAgDb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,UAAuB,6BAA4Bb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACjT,KAAQ,qFACN,oBAAwB,0BAC9Bb,EAAAA,EAAAA,KAAA,SAAI,mCACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,6LAQNb,EAAAA,EAAAA,KAACC,EAAW,CAACa,MAAM,eAAeC,QAAQ,OAAOH,QAAQ,iBACzDZ,EAAAA,EAAAA,KAAA,SAAI,uBACJA,EAAAA,EAAAA,KAAA,SAAI,kDAAiDA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,QAAiB,SAAQb,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,UAAmB,yEAAwEb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,mBAAgC,UAASb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,mBAAgC,MAC1Vb,EAAAA,EAAAA,KAAA,MACE,GAAM,wBACJ,yBACJA,EAAAA,EAAAA,KAAA,SAAI,+NAA8NA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAC5O,KAAQ,iEACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,qCAAqD,aACtFb,EAAAA,EAAAA,KAAA,MACE,GAAM,YACJ,aACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAM,0FACrBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAM,6EACrBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAM,mIAEvBb,EAAAA,EAAAA,KAAA,SAAI,QAAOA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,qBAAkC,uOAAsOb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,wBAAqC,0DAAyDb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,8BAA2C,wCAAuCb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,uBAAoC,8BACvlBb,EAAAA,EAAAA,KAAA,SAAI,QAAOA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,qBAAkC,+EACzEb,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,OAAKb,EAAAA,EAAAA,KAAA,UAAQa,WAAW,MAAM,qBAE/Cb,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAM,0DACrBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAM,oEACrBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAM,YAAWb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,MAAM,wBAAqC,mCAEpGb,EAAAA,EAAAA,KAAA,MACE,MAAS,IAETA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,OAAKb,EAAAA,EAAAA,KAAA,UAAQa,WAAW,MAAM,qBAE/Cb,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIa,WAAW,MAAM,kDACnBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,OACbb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,OAAKb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,MAAM,8BAA2C,0CAC5Fb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,OAAKb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,MAAM,uBAAoC,0CAI3Fb,EAAAA,EAAAA,KAAA,MACE,GAAM,iCACJ,mCACJA,EAAAA,EAAAA,KAACE,EAAS,CAACY,MAAM,gBAAgBE,OAAO,IAAIC,UAAU,WAAWL,QAAQ,eACzEZ,EAAAA,EAAAA,KAAA,MACE,GAAM,aACJ,gBACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,u1CAsCNb,EAAAA,EAAAA,KAAA,MACE,GAAM,aACJ,eACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,iBACX,+DAENb,EAAAA,EAAAA,KAAA,SAAI,+CAA8CA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,4BAAyC,kFAAiFb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,aAA0B,QAAOb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,WAAwB,sBAAqBb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,uBAAoC,aAC9Yb,EAAAA,EAAAA,KAAA,MACE,GAAM,iCACJ,mCACJA,EAAAA,EAAAA,KAAA,SAAI,2EACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,sRAUNb,EAAAA,EAAAA,KAAA,MACE,GAAM,yBACJ,2BACJA,EAAAA,EAAAA,KAAA,SAAI,2GAA0GA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,SAAsB,wCAChKb,EAAAA,EAAAA,KAACE,EAAS,CAACY,MAAM,gBAAgBE,OAAO,IAAIC,UAAU,WAAWL,QAAQ,eACzEZ,EAAAA,EAAAA,KAAA,MACE,GAAM,eACJ,eACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,iBACX,+NAaNb,EAAAA,EAAAA,KAAA,MACE,GAAM,WACJ,aACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,giBAiBNb,EAAAA,EAAAA,KAAA,SAAI,qEAAoEA,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IAClF,KAAQ,qFACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,yBAAyC,sDAAqDb,EAAAA,EAAAA,KAAA,KAAGa,WAAW,IACzI,KAAQ,2EACPb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,UAA0B,aAC3Db,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,eACX,8YAUNb,EAAAA,EAAAA,KAAA,MACE,GAAM,QACJ,SACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,4CACJ,+CACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,MAAe,SAAQb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,sCAAmD,8BACjIb,EAAAA,EAAAA,KAAA,MACE,GAAM,4CACJ,+CACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,MAAe,SAAQb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,iCAA8C,QAAOb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,mCAAgD,4BAC/Mb,EAAAA,EAAAA,KAAA,MACE,GAAM,4CACJ,+CACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,MAAe,SAAQb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,2BAAwC,4CACtHb,EAAAA,EAAAA,KAAA,MACE,GAAM,kCACJ,qCACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,MAAe,SAAQb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,+DAA4E,0BAC1Jb,EAAAA,EAAAA,KAAA,MACE,GAAM,yCACJ,4CACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,MAAe,SAAQb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,4CAAyD,iCACvIb,EAAAA,EAAAA,KAAA,MACE,GAAM,2CACJ,8CACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,MAAe,SAAQb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,sDAAmE,+BACjJb,EAAAA,EAAAA,KAAA,MACE,GAAM,2CACJ,8CACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,MAAe,UAASb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,0DAAuE,4BACtJb,EAAAA,EAAAA,KAAA,MACE,GAAM,yCACJ,4CACJA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAK,MAAe,gBAAeb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,8BAA2C,SAAQb,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAK,uBAAoC,kCAG5M,CAEAP,EAAWY,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/guides/learn/how_to/use_color.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"use-color\"\n    }}>{`Use Color`}</h1>\n    <h2 {...{\n      \"id\": \"create-colors\"\n    }}>{`Create colors`}</h2>\n    <p>{`Colors in Adobe Express are created as instances of the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/interfaces/Color.md\"\n      }}><inlineCode parentName=\"a\">{`Color`}</inlineCode></a>{` class: objects with `}<inlineCode parentName=\"p\">{`red`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`green`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`blue`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`alpha`}</inlineCode>{` (optional) values in the range from 0 to 1. The `}<inlineCode parentName=\"p\">{`alpha`}</inlineCode>{` value represents the opacity of the color, with 0 being fully transparent and 1 fully opaque.`}</p>\n    <p>{`The entrypoint for creating colors is the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/ColorUtils.md\"\n      }}><inlineCode parentName=\"a\">{`colorUtils`}</inlineCode></a>{` class, imported from the `}<inlineCode parentName=\"p\">{`\"express-document-sdk\"`}</inlineCode>{`, so we're talking about `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/index.md\"\n      }}>{`Document APIs`}</a>{` here. Especially the static `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/ColorUtils.md#fromrgb\"\n      }}><inlineCode parentName=\"a\">{`fromRGB()`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/ColorUtils.md#fromhex\"\n      }}><inlineCode parentName=\"a\">{`fromHex()`}</inlineCode></a>{` methods.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// sandbox/code.js\nimport { editor, colorUtils } from \"express-document-sdk\";\n\n// Alpha is optional, defaults to 1\nconst red = colorUtils.fromRGB(1, 0, 0);\nconst green = colorUtils.fromHex(\"#00FF00\");\n\n// With alpha\nconst feldgrau = colorUtils.fromRGB(0.28, 0.32, 0.39, 0.5); // 50% opacity\nconst heliotrope = colorUtils.fromHex(\"#C768F780\"); // 50% opacity\n`}</code></pre>\n    <p>{`In case you need it, you can also convert a color to a HEX string using the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/ColorUtils.md#tohex\"\n      }}><inlineCode parentName=\"a\">{`toHex()`}</inlineCode></a>{` method. Please note that the alpha value is always included in the output string.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const red = colorUtils.fromRGB(1, 0, 0);\nconst redHex = colorUtils.toHex(red); // #FF0000FF\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"apply-colors\"\n    }}>{`Apply colors`}</h2>\n    <p>{`You can directly set the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` property of a Text node via `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/TextContentModel.md#applycharacterstyles\"\n      }}><inlineCode parentName=\"a\">{`applyCharacterStyles()`}</inlineCode></a>{`:`}</p>\n    <h3 {...{\n      \"id\": \"example-text-color\"\n    }}>{`Example: Text color`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// sandbox/code.js\nimport { editor, colorUtils } from \"express-document-sdk\";\n\n// Assuming the user has selected a text frame\nconst textNode = editor.context.selection[0];\n\n// Apply character styles to the first three letters\ntextNode.fullContent.applyCharacterStyles(\n  { color: colorUtils.fromHex(\"#E1A141\") }, // 👈\n  { start: 0, length: 3 }\n);\n`}</code></pre>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"./use_text.md\"\n      }}>{`Use Text`}</a>{` page for more examples.`}</p>\n    <h3 {...{\n      \"id\": \"example-fill-and-stroke-colors\"\n    }}>{`Example: Fill and Stroke colors`}</h3>\n    <p>{`Colors are not directly applied, instead, to shapes; more generally, they are used to create `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/interfaces/Fill.md\"\n      }}><inlineCode parentName=\"a\">{`Fill`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/interfaces/Stroke.md\"\n      }}><inlineCode parentName=\"a\">{`Stroke`}</inlineCode></a>{` objects with the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/Editor.md#makecolorfill\"\n      }}><inlineCode parentName=\"a\">{`editor.makeColorFill()`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/Editor.md#makestroke\"\n      }}><inlineCode parentName=\"a\">{`editor.makeStroke()`}</inlineCode></a>{` methods, respectively, that you can then apply to `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/FillableNode.md\"\n      }}><inlineCode parentName=\"a\">{`Fillable`}</inlineCode></a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/StrokableNode.md\"\n      }}><inlineCode parentName=\"a\">{`Strokable`}</inlineCode></a>{` nodes.`}</p>\n    <p>{`If you're confused, worry not! This is the wondrous word of object oriented programming. The following example should clarify things:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// sandbox/code.js\nimport { editor, colorUtils } from \"express-document-sdk\";\n\n// Create the shape\nconst ellipse = editor.createEllipse();\nellipse.width = 100;\nellipse.height = 50;\nellipse.translation = { x: 50, y: 50 };\n\n// Generate the needed colors\nconst innerColor = colorUtils.fromHex(\"#A38AF0\");\nconst outerColor = colorUtils.fromHex(\"#2ACfA9\");\n\n// Make the colorFill and the Stroke\nconst innerColorFill = editor.makeColorFill(innerColor);\nconst outerColorStroke = editor.makeStroke({\n  color: outerColor,\n  width: 20,\n});\n\n// 👇 Apply the fill and stroke\nellipse.fill = innerColorFill;\nellipse.stroke = outerColorStroke;\n\n// Add the shape to the document\neditor.context.insertionParent.children.append(ellipse);\n`}</code></pre>\n    <p>{`While the `}<inlineCode parentName=\"p\">{`fill`}</inlineCode>{` property is more straightforward to create, the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` is just one of the possible properties of a `}<inlineCode parentName=\"p\">{`stroke`}</inlineCode>{`, as you can read in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/interfaces/SolidColorStroke.md\"\n      }}>{`SolidColorStroke`}</a>{` interface reference.`}</p>\n    <p>{`Simplifying the example above:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nellipse.fill = editor.makeColorFill(colorUtils.fromHex(\"#A38AF0\"));\nellipse.stroke = editor.makeStroke({\n  color: colorUtils.fromHex(\"#2ACfA9\"),\n  width: 20,\n});\n// ...\n`}</code></pre>\n    <InlineAlert slots=\"header, text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`Naming conventions`}</p>\n    <p>{`Please note that Adobe Express uses the terms `}<strong parentName=\"p\">{`make`}</strong>{` and `}<strong parentName=\"p\">{`create`}</strong>{` to distinguish between plain objects and live document objects. You `}<inlineCode parentName=\"p\">{`makeColorFill()`}</inlineCode>{`, but `}<inlineCode parentName=\"p\">{`createEllipse()`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"use-the-color-picker\"\n    }}>{`Use the Color Picker`}</h2>\n    <p>{`Adobe Express includes a native Color Picker, with special features such as Recommended Swatches, Eyedropper, Themes, Library and Brand colors. The Color Picker is available also to add-ons, you can invoke it using the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/addonsdk/addonsdk-app.md#showcolorpicker\"\n      }}><inlineCode parentName=\"a\">{`addOnUISdk.app.showColorPicker()`}</inlineCode></a>{` method.`}</p>\n    <h4 {...{\n      \"id\": \"benefits\"\n    }}>{`Benefits`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`It simplifies the process of selecting a color, bypassing the Browser's color picker.`}</li>\n      <li parentName=\"ul\">{`It's in sync with any swatches or Brand colors defined in Adobe Express.`}</li>\n      <li parentName=\"ul\">{`It will evolve with Adobe Express, providing a consistent color picking experience across different parts of the application.`}</li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`showColorPicker()`}</inlineCode>{` method accepts a reference to an HTML element as its first argument, which will become the color picker's anchor element. The picker will be positioned relative to this element, based on the placement options available in the `}<inlineCode parentName=\"p\">{`ColorPickerPlacement`}</inlineCode>{` enum; additionally, the anchor will receive a custom `}<inlineCode parentName=\"p\">{`\"colorpicker-color-change\"`}</inlineCode>{` event when the color changes and a `}<inlineCode parentName=\"p\">{`\"colorpicker-close\"`}</inlineCode>{` event when it is closed.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`showColorPicker()`}</inlineCode>{` method requires an HTML element as its anchor point. Here's how it works:`}</p>\n    <ol>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Anchor Element`}</strong></li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Pass an HTML element reference as the first argument.`}</li>\n      <li parentName=\"ul\">{`The color picker will position itself relative to this element.`}</li>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`ColorPickerPlacement`}</inlineCode>{` enum to control positioning.`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Event Handling`}</strong></li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`The anchor element receives two custom events:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`\"colorpicker-color-change\"`}</inlineCode>{`: Fires when a new color is selected.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`\"colorpicker-close\"`}</inlineCode>{`: Fires when the picker is closed.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example-show-the-color-picker\"\n    }}>{`Example: Show the Color Picker`}</h3>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"js, html\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"uiindexjs\"\n    }}>{`ui/index.js`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnUISdk, {\n  ColorPickerEvent,\n  ColorPickerPlacement,\n} from \"https://express.adobe.com/static/add-on-sdk/sdk.js\";\n\naddOnUISdk.ready.then(async () => {\n  // Get the button element\n  const colorPickerButton = document.getElementById(\"colorPicker\");\n\n  // Add a click event listener to the button to show the color picker\n  colorPickerButton.addEventListener(\"click\", () => {\n    addOnUISdk.app.showColorPicker(colorPickerButton, {\n      // The title of the color picker\n      title: \"Awesome Color Picker\",\n      // The placement of the color picker\n      placement: ColorPickerPlacement.left,\n      // Whether the eyedropper hides the color picker\n      eyedropperHidesPicker: true,\n      // The initial color of the color picker\n      initialColor: 0x0000ff,\n      // Whether the alpha channel is disabled\n      disableAlphaChannel: false,\n    });\n  });\n\n  // Add a listener for the colorpicker-color-change event\n  colorPickerButton.addEventListener(ColorPickerEvent.colorChange, (event) => {\n    // Get the color from the event\n    console.log(event.detail.color);\n    // e.g., \"#F0EDD8FF\" in HEX (RRGGBBAA) format\n  });\n\n  // Add a listener for the colorpicker-close event\n  colorPickerButton.addEventListener(ColorPickerEvent.close, (event) => {\n    console.log(event.type); // \"colorpicker-close\"\n  });\n});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"indexhtml\"\n    }}>{`index.html`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<button id=\"colorPicker\">Show the Color Picker</button>\n`}</code></pre>\n    <p>{`Please note that the color returned by the `}<inlineCode parentName=\"p\">{`colorpicker-color-change`}</inlineCode>{` event is always a string in HEX format—with or without an alpha value, e.g., `}<inlineCode parentName=\"p\">{`#F0EDD8FF`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`#F0EDD8`}</inlineCode>{` depending on the `}<inlineCode parentName=\"p\">{`disableAlphaChannel`}</inlineCode>{` option.`}</p>\n    <h3 {...{\n      \"id\": \"example-hide-the-color-picker\"\n    }}>{`Example: Hide the Color Picker`}</h3>\n    <p>{`You can decide to hide picker UI e.g., after a certain amount of time.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`colorPickerButton.addEventListener(\"click\", () => {\n  addOnUISdk.app.showColorPicker(colorPickerButton, {\n    /* ... */\n  });\n  setTimeout(() => {\n    console.log(\"Hiding the Color Picker after 10 seconds\");\n    addOnUISdk.app.hideColorPicker();\n  }, 10000);\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-use-the-color\"\n    }}>{`Example: Use the color`}</h3>\n    <p>{`You can use any HTML element as the color picker's anchor element; in the example below, we're using a `}<inlineCode parentName=\"p\">{`<div>`}</inlineCode>{` element to display a color swatch.`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"html, js\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"indexhtml-1\"\n    }}>{`index.html`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<style>\n  #color-display {\n    width: 30px;\n    height: 30px;\n    border: 1px solid black;\n    border-radius: 4px;\n    background-color: white;\n  }\n</style>\n<body>\n  <div id=\"color-display\"></div>\n</body>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"indexjs\"\n    }}>{`index.js`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`addOnUISdk.ready.then(async () => {\n  const colorDisplay = document.getElementById(\"color-display\");\n\n  colorDisplay.addEventListener(\"click\", () => {\n    addOnUISdk.app.showColorPicker(colorDisplay, {\n      title: \"Color Picker 1\",\n      placement: ColorPickerPlacement.left,\n      eyedropperHidesPicker: true,\n    });\n  });\n\n  colorDisplay.addEventListener(ColorPickerEvent.colorChange, (event) => {\n    // Update the color swatch display in the UI\n    colorDisplay.style.backgroundColor = event.detail.color;\n  });\n});\n`}</code></pre>\n    <p>{`To use the picked color in the Document Sandbox, you can use the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/classes/ColorUtils.md#fromhex\"\n      }}><inlineCode parentName=\"a\">{`colorUtils.fromHex()`}</inlineCode></a>{` method, which converts the HEX color string to a `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/document-sandbox/document-apis/interfaces/Color.md\"\n      }}><inlineCode parentName=\"a\">{`Color`}</inlineCode></a>{` object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// sandbox/code.js\nconst color = colorUtils.fromHex(event.detail.color); // 👈 A Color object\n\n// Use the color in the Document Sandbox, for example:\nlet selection = editor.context.selection;\nif (selection.length === 1 && selection[0].type === \"Text\") {\n  const textContentModel = selection[0].fullContent;\n  textContentModel.applyCharacterStyles({ color }); // 👈 Using the color\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"faqs\"\n    }}>{`FAQs`}</h2>\n    <h4 {...{\n      \"id\": \"q-how-do-i-create-colors-from-rgb-values\"\n    }}>{`Q: How do I create colors from RGB values?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Use `}<inlineCode parentName=\"p\">{`colorUtils.fromRGB(r, g, b, alpha)`}</inlineCode>{` with values from 0 to 1.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-do-i-create-colors-from-hex-values\"\n    }}>{`Q: How do I create colors from HEX values?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Use `}<inlineCode parentName=\"p\">{`colorUtils.fromHex(\"#RRGGBB\")`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`colorUtils.fromHex(\"#RRGGBBAA\")`}</inlineCode>{` for colors with alpha.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-do-i-convert-a-color-to-hex-string\"\n    }}>{`Q: How do I convert a color to HEX string?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Use `}<inlineCode parentName=\"p\">{`colorUtils.toHex(color)`}</inlineCode>{` to get HEX string with alpha included.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-do-i-apply-color-to-text\"\n    }}>{`Q: How do I apply color to text?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Use `}<inlineCode parentName=\"p\">{`textNode.fullContent.applyCharacterStyles({ color }, range)`}</inlineCode>{` with a Color object.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-do-i-apply-fill-color-to-shapes\"\n    }}>{`Q: How do I apply fill color to shapes?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Use `}<inlineCode parentName=\"p\">{`shape.fill = editor.makeColorFill(color)`}</inlineCode>{` to apply solid color fills.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-do-i-apply-stroke-color-to-shapes\"\n    }}>{`Q: How do I apply stroke color to shapes?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Use `}<inlineCode parentName=\"p\">{`shape.stroke = editor.makeStroke({ color, width })`}</inlineCode>{` to apply colored strokes.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-do-i-show-the-native-color-picker\"\n    }}>{`Q: How do I show the native color picker?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Call `}<inlineCode parentName=\"p\">{`addOnUISdk.app.showColorPicker(anchorElement, options)`}</inlineCode>{` to display the picker.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-do-i-handle-color-picker-events\"\n    }}>{`Q: How do I handle color picker events?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Listen for `}<inlineCode parentName=\"p\">{`\"colorpicker-color-change\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\"colorpicker-close\"`}</inlineCode>{` events on the anchor element.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","InlineAlert","CodeBlock","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","slots","variant","repeat","languages","isMDXComponent"],"sourceRoot":""}