{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-classes-express-root-node-md-8dd93da5a328bb316ca1.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/classes/ExpressRootNode.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / ExpressRootNode`}</p>\n    <h1 {...{\n      \"id\": \"class-expressrootnode\"\n    }}>{`Class: ExpressRootNode`}</h1>\n    <p>{`An ExpressRootNode represents the root node of the document's \"scenegraph\" artwork tree. The root contains a collection\nof `}<a parentName=\"p\" {...{\n        \"href\": \"ExpressRootNode.md#pages\"\n      }}>{`pages`}</a>{`. Each page contains one or more artboards, arranged in a timeline sequence. All the visual content of\nthe document lies within those artboards.`}</p>\n    <p>{`The parent of ExpressRootNode is undefined, since it is the root of the document tree.`}</p>\n    <h2 {...{\n      \"id\": \"extends\"\n    }}>{`Extends`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"BaseNode.md\"\n        }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"accessors\"\n    }}>{`Accessors`}</h2>\n    <h3 {...{\n      \"id\": \"addondata\"\n    }}>{`addOnData`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`addOnData`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"AddOnData.md\"\n      }}><inlineCode parentName=\"a\">{`AddOnData`}</inlineCode></a></p>\n    <p>{`Get `}<a parentName=\"p\" {...{\n        \"href\": \"AddOnData.md\"\n      }}>{`AddOnData`}</a>{` reference for managing the private metadata on this node for this add-on.`}</p>\n    <h4 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"AddOnData.md\"\n      }}><inlineCode parentName=\"a\">{`AddOnData`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"allchildren\"\n    }}>{`allChildren`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`allChildren`}</strong>{`(): `}<inlineCode parentName=\"p\">{`Readonly`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`Iterable`}</inlineCode>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a>{`, `}<inlineCode parentName=\"p\">{`any`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`any`}</inlineCode>{`>`}{`>`}</p>\n    <p>{`Returns a read-only list of all children of the node. General-purpose content containers such as ArtboardNode or\nGroupNode also provide a mutable `}<a parentName=\"p\" {...{\n        \"href\": \"../interfaces/ContainerNode.md#children\"\n      }}>{`ContainerNode.children`}</a>{` list. Other nodes with a more specific structure can\nhold children in various discrete \"slots\"; this `}<inlineCode parentName=\"p\">{`allChildren`}</inlineCode>{` list includes `}<em parentName=\"p\">{`all`}</em>{` such children and reflects their\noverall display z-order.`}</p>\n    <p>{`Although BaseNode's allChildren may yield other BaseNodes, the subclasses Node and ArtboardNode override allChildren\nto guarantee all their children are full-fledged Node instances.`}</p>\n    <h4 {...{\n      \"id\": \"returns-1\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`Readonly`}</inlineCode>{`<`}<inlineCode parentName=\"p\">{`Iterable`}</inlineCode>{`<`}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a>{`, `}<inlineCode parentName=\"p\">{`any`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`any`}</inlineCode>{`>`}{`>`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"id\"\n    }}>{`id`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`id`}</strong>{`(): `}<inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`A unique identifier for this node that stays the same when the file is closed & reopened, or if the node is\nmoved to a different part of the document.`}</p>\n    <h4 {...{\n      \"id\": \"returns-2\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"pages\"\n    }}>{`pages`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`pages`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"PageList.md\"\n      }}><inlineCode parentName=\"a\">{`PageList`}</inlineCode></a></p>\n    <p>{`The pages of the document. All visual content is contained on artboards within the pages.\nTo create a new page, see `}<a parentName=\"p\" {...{\n        \"href\": \"PageList.md#addpage\"\n      }}>{`PageList.addPage`}</a>{`.`}</p>\n    <h4 {...{\n      \"id\": \"returns-3\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"PageList.md\"\n      }}><inlineCode parentName=\"a\">{`PageList`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"parent\"\n    }}>{`parent`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`parent`}</strong>{`(): `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></p>\n    <p>{`The node's parent. The parent chain will eventually reach ExpressRootNode for all nodes that are part of the document\ncontent.`}</p>\n    <p>{`Nodes that have been deleted are \"orphaned,\" with a parent chain that terminates in `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` without reaching the\nroot node. Such nodes cannot be selected, so it is unlikely to encounter one unless you retain a reference to a node\nthat was part of the document content earlier. Deleted nodes can be reattached to the scenegraph, e.g. via Undo.`}</p>\n    <h4 {...{\n      \"id\": \"returns-4\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` `}{`|`}{` `}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a></p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"type\"\n    }}>{`type`}</h3>\n    <p>{`• `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` `}<strong parentName=\"p\">{`type`}</strong>{`(): `}<a parentName=\"p\" {...{\n        \"href\": \"../enumerations/SceneNodeType.md\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeType`}</inlineCode></a></p>\n    <p>{`The node's type.`}</p>\n    <h4 {...{\n      \"id\": \"returns-5\"\n    }}>{`Returns`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../enumerations/SceneNodeType.md\"\n      }}><inlineCode parentName=\"a\">{`SceneNodeType`}</inlineCode></a></p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <h3 {...{\n      \"id\": \"removefromparent\"\n    }}>{`removeFromParent()`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`removeFromParent`}</strong>{`(): `}<inlineCode parentName=\"p\">{`void`}</inlineCode></p>\n    <p>{`Removes the node from its parent - effectively deleting it, if the node is not re-added to another parent before the\ndocument is closed.`}</p>\n    <p>{`If parent is a basic ContainerNode, this is equivalent to `}<inlineCode parentName=\"p\">{`node.parent.children.remove(node)`}</inlineCode>{`. For nodes with other\nchild \"slots,\" removes the child from whichever slot it resides in, if possible. Throws if the slot does not permit\nremoval. No-op if node is already an orphan.`}</p>\n    <h4 {...{\n      \"id\": \"returns-6\"\n    }}>{`Returns`}</h4>\n    <p><inlineCode parentName=\"p\">{`void`}</inlineCode></p>\n    <h4 {...{\n      \"id\": \"inherited-from\"\n    }}>{`Inherited from`}</h4>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md\"\n      }}><inlineCode parentName=\"a\">{`BaseNode`}</inlineCode></a>{`.`}<a parentName=\"p\" {...{\n        \"href\": \"BaseNode.md#removefromparent\"\n      }}><inlineCode parentName=\"a\">{`removeFromParent`}</inlineCode></a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}