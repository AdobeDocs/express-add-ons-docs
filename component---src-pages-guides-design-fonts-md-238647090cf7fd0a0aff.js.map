{"version":3,"file":"component---src-pages-guides-design-fonts-md-238647090cf7fd0a0aff.js","mappings":"0MAMsBA,E,wEAIhBC,GAJgBD,EAIY,cAJJ,SAA6BE,GAEzD,OADAC,QAAQC,KAAK,aAAeJ,EAAO,4EAC5BK,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAEMI,EAAc,CAAC,EACfC,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGT,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,0BAAwB,2BAEhCA,EAAAA,EAAAA,KAAA,MACE,GAAM,8BAA4B,+BAEpCA,EAAAA,EAAAA,KAAA,0HAAwHA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,aAA2B,MAC7KX,EAAAA,EAAAA,KAACJ,EAAW,CAACgB,MAAM,OAAOC,QAAQ,UAAUH,QAAQ,iBACpDV,EAAAA,EAAAA,KAAA,MACE,GAAM,8BAA4B,8CAEpCA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,iBAAe,+RAUhCX,EAAAA,EAAAA,KAAA,iBACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,4BAA0B,4CAElCA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,iBAAe,8QAahCX,EAAAA,EAAAA,KAAA,MACE,GAAM,yBAAuB,0BAE/BA,EAAAA,EAAAA,KAAA,4DACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,gBAAc,mUAgBnC,CAEAP,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/guides/design/fonts.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/express-add-ons-docs/express-add-ons-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"using-fonts-in-add-ons\"\n    }}>{`Using Fonts in Add-ons`}</h1>\n    <h2 {...{\n      \"id\": \"importing-fonts-from-a-url\"\n    }}>{`Importing Fonts from a URL`}</h2>\n    <p>{`You can use a font with a URL by either linking to it via an import rule, via the `}{`<`}{`link`}{`>`}{` tag, or `}<inlineCode parentName=\"p\">{`font-face`}</inlineCode>{`.`}</p>\n    <InlineAlert slots=\"text\" variant=\"success\" mdxType=\"InlineAlert\" />\n    <h3 {...{\n      \"id\": \"import-with-the-import-tag\"\n    }}>{`Import with the `}{`<`}{`import`}{`>`}{` tag:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<style>\n            @import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap\");\n            * {\n                font-family: \"Poppins\", sans-serif;\n                margin: 0;\n                padding: 0;\n            }\n</style>\n`}</code></pre>\n    <p>{`or `}</p>\n    <h3 {...{\n      \"id\": \"import-with-the-link-tag\"\n    }}>{`Import with the `}{`<`}{`link`}{`>`}{` tag:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Tangerine\">\n    <style>\n      body {\n        font-family: 'Tangerine', serif;\n        font-size: 48px;\n      }\n    </style>\n  </head>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"import-with-font-face\"\n    }}>{`Import with font-face`}</h3>\n    <p>{`This assumes your font is hosted on a server. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@font-face {\nfont-family: 'Open Sans';\nfont-style: normal;\nfont-weight: 400;\nsrc: local('Open Sans Regular'), local('OpenSans-Regular'), url('/fonts/OpenSans-Regular.ttf') format('truetype');\n}\n\n/* Use the font in your CSS */\nbody {\nfont-family: 'Open Sans', sans-serif;\n}\n\nexport const _frontmatter = {}\n`}</code></pre>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","InlineAlert","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","parentName","slots","variant","isMDXComponent"],"sourceRoot":""}