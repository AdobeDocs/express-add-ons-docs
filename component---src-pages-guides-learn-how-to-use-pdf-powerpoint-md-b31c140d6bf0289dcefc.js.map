{"version":3,"file":"component---src-pages-guides-learn-how-to-use-pdf-powerpoint-md-b31c140d6bf0289dcefc.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/learn/how_to/use_pdf_powerpoint.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"use-pdf-and-powerpoint\"\n    }}>{`Use PDF and PowerPoint`}</h1>\n    <h2 {...{\n      \"id\": \"import-pdf-into-the-page\"\n    }}>{`Import PDF into the page`}</h2>\n    <p>{`You can add PDFs to the page using the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/addonsdk/app-document.md#importpdf\"\n      }}><inlineCode parentName=\"a\">{`importPdf()`}</inlineCode></a>{` method of the `}<inlineCode parentName=\"p\">{`addOnUISdk.app.document`}</inlineCode>{` object, which expects a `}<inlineCode parentName=\"p\">{`Blob`}</inlineCode>{` object as an argument and a `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/addonsdk/app-document.md#mediaattributes\"\n      }}><inlineCode parentName=\"a\">{`MediaAttribute`}</inlineCode></a>{` object with a title (mandatory) and author (optional) as the second.`}</p>\n    <p>{`PDF and PowerPoint imports will trigger a consent dialogue that asks the user to confirm the process; it's not possible to bypass it. As soon as the process starts, another dialogue will preview the PDF and track the operation progress.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"41.5625%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/5530d/pdf_import.webp 320w\", \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/0c8fb/pdf_import.webp 640w\", \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/94b1e/pdf_import.webp 1280w\", \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/0b34d/pdf_import.webp 1920w\", \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/f3963/pdf_import.webp 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/dd4a7/pdf_import.png 320w\", \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/0f09e/pdf_import.png 640w\", \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/bbbf7/pdf_import.png 1280w\", \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/ac7a9/pdf_import.png 1920w\", \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/6482f/pdf_import.png 2500w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/express-add-ons-docs/static/8bd0af2156a1e2ecc06693acb72e8a75/bbbf7/pdf_import.png\",\n            \"alt\": \"PDF Import dialogue\",\n            \"title\": \"PDF Import dialogue\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Supported vector elements will be kept editable (e.g., shapes with rounded corners, text, etc.), and all pages will be imported.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnUISdk from \"https://express.adobe.com/static/add-on-sdk/sdk.js\";\n\naddOnUISdk.ready.then(async () => {\n  try {\n    const pdfUrl = \"https://url/to/your/file.pdf\";\n\n    const pdf = await fetch(pdfUrl);\n    const pdfBlob = await pdf.blob();\n\n    await addOnUISdk.app.document.importPdf(\n      pdfBlob, // ðŸ‘ˆ Blob object\n      {\n        title: \"Official Launch Party\",\n        author: \"Adobe\",\n      }\n    );\n  } catch (e) {\n    console.error(\"Failed to add the PDF\", e);\n  }\n});\n`}</code></pre>\n    <p>{`Please note that you can use `}<inlineCode parentName=\"p\">{`fetch()`}</inlineCode>{` also to get PDFs that are local to the add-on; in this case, you can use paths relative to the add-on's root.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnUISdk from \"https://express.adobe.com/static/add-on-sdk/sdk.js\";\n\naddOnUISdk.ready.then(async () => {\n  try {\n    // ðŸ‘‡ Local PDF\n     const pdfUrl = \"./OfficialLaunchParty.pdf\";\n    const pdf = await fetch(pdfUrl);\n    // ... same as before\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"importing-converted-documents\"\n    }}>{`Importing converted documents`}</h3>\n    <p>{`If your add-on converts Word documents (`}<inlineCode parentName=\"p\">{`.docx`}</inlineCode>{`) or Google Docs (`}<inlineCode parentName=\"p\">{`.gdoc`}</inlineCode>{`) to PDF before importing, you can use the `}<inlineCode parentName=\"p\">{`sourceMimeType`}</inlineCode>{` parameter to improve the user experience. When specified, the import consent dialog displays the message \"Import a document\" rather than the default \"Import a PDF\".`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Import a PDF that was converted from a Word document\nawait addOnUISdk.app.document.importPdf(convertedPdfBlob, {\n  title: \"Converted Document\",\n  sourceMimeType: \"docx\" // Shows \"Import a document\" in the dialog\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"import-powerpoint-into-the-page\"\n    }}>{`Import PowerPoint into the page`}</h2>\n    <p>{`For PowerPoint files, the process is similar to the one for PDFs, but you need to use the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../references/addonsdk/app-document.md#importpresentation\"\n      }}><inlineCode parentName=\"a\">{`importPowerPoint()`}</inlineCode></a>{` method instead. The method supports both `}<inlineCode parentName=\"p\">{`.pptx`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.ppt`}</inlineCode>{` files, and shows the same consent and progress dialogues as seen above.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import addOnUISdk from \"https://express.adobe.com/static/add-on-sdk/sdk.js\";\n\naddOnUISdk.ready.then(async () => {\n  try {\n    const powerPointUrl = \"https://url/to/your/file.pptx\";\n    // Or\n    // const powerPointUrl = \"./OfficialLaunchParty.pptx\";\n\n    const powerPoint = await fetch(powerPointUrl);\n    const powerPointBlob = await powerPoint.blob();\n\n    await addOnUISdk.app.document.importPowerPoint(\n      powerPointBlob, // ðŸ‘ˆ Blob object\n      {\n        title: \"Official Launch Party\",\n        author: \"Adobe\",\n      }\n    );\n  } catch (e) {\n    console.error(\"Failed to add the PDF\", e);\n  }\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"faqs\"\n    }}>{`FAQs`}</h2>\n    <h4 {...{\n      \"id\": \"q-how-do-i-import-pdf-files\"\n    }}>{`Q: How do I import PDF files?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Call `}<inlineCode parentName=\"p\">{`addOnUISdk.app.document.importPdf(blob, attributes)`}</inlineCode>{` with PDF blob and MediaAttribute object.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-do-i-import-powerpoint-files\"\n    }}>{`Q: How do I import PowerPoint files?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Call `}<inlineCode parentName=\"p\">{`addOnUISdk.app.document.importPowerPoint(blob, attributes)`}</inlineCode>{` with PowerPoint blob and MediaAttribute.`}</p>\n    <h4 {...{\n      \"id\": \"q-what-powerpoint-formats-are-supported\"\n    }}>{`Q: What PowerPoint formats are supported?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Both .pptx and .ppt file formats are supported.`}</p>\n    <h4 {...{\n      \"id\": \"q-are-mediaattributes-required-for-pdfpowerpoint\"\n    }}>{`Q: Are MediaAttributes required for PDF/PowerPoint?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Yes, title is mandatory and author is optional in the MediaAttribute object.`}</p>\n    <h4 {...{\n      \"id\": \"q-what-is-the-sourcemimetype-parameter-for\"\n    }}>{`Q: What is the sourceMimeType parameter for?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Use `}<inlineCode parentName=\"p\">{`sourceMimeType`}</inlineCode>{` in MediaAttributes to improve UX when importing converted documents. It shows \"Import a document\" instead of \"Import a PDF\" in the consent dialog.`}</p>\n    <h4 {...{\n      \"id\": \"q-when-should-i-use-sourcemimetype\"\n    }}>{`Q: When should I use sourceMimeType?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Use it when importing PDFs that were converted from other document types like Word (.docx) or Google Docs (.gdoc) to provide clearer messaging to users.`}</p>\n    <h4 {...{\n      \"id\": \"q-what-values-does-sourcemimetype-accept\"\n    }}>{`Q: What values does sourceMimeType accept?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Common values include \"docx\" for Word documents and \"gdoc\" for Google Docs. Use the original document format before PDF conversion.`}</p>\n    <h4 {...{\n      \"id\": \"q-will-users-see-a-consent-dialogue\"\n    }}>{`Q: Will users see a consent dialogue?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Yes, PDF and PowerPoint imports trigger consent dialogues that users must confirm.`}</p>\n    <h4 {...{\n      \"id\": \"q-can-i-bypass-the-consent-dialogue\"\n    }}>{`Q: Can I bypass the consent dialogue?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` No, the consent dialogue cannot be bypassed for PDF and PowerPoint imports.`}</p>\n    <h4 {...{\n      \"id\": \"q-are-vector-elements-preserved\"\n    }}>{`Q: Are vector elements preserved?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` Yes, supported vector elements like shapes and text remain editable after import.`}</p>\n    <h4 {...{\n      \"id\": \"q-how-many-pages-are-imported\"\n    }}>{`Q: How many pages are imported?`}</h4>\n    <p><strong parentName=\"p\">{`A:`}</strong>{` All pages from PDF and PowerPoint files are imported into the document.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}