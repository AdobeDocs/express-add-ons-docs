"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[791],{60661:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return s}});var o=n(58168),r=n(80045),d=(n(88763),n(15680)),a=n(83407);const m=["components"],l={},i={_frontmatter:l},p=a.A;function s(e){let{components:t}=e,n=(0,r.A)(e,m);return(0,d.mdx)(p,(0,o.A)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,d.mdx)("p",null,(0,d.mdx)("a",{parentName:"p",href:"../overview.md"},"@express-document-sdk")," / SolidColorStroke"),(0,d.mdx)("h1",{id:"interface-solidcolorstroke"},"Interface: SolidColorStroke"),(0,d.mdx)("p",null,"Represents a solid-color stroke, with optional dashes."),(0,d.mdx)("p",null,"The most convenient way to create a solid-color stroke is via ",(0,d.mdx)("inlineCode",{parentName:"p"},"Editor.makeStroke()"),". This also futureproofs\nyour code in case any other required fields are added to the Stroke descriptor in the future."),(0,d.mdx)("h2",{id:"extends"},"Extends"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"Stroke.md"},(0,d.mdx)("inlineCode",{parentName:"a"},"Stroke")))),(0,d.mdx)("h2",{id:"properties"},"Properties"),(0,d.mdx)("h3",{id:"color"},"color"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("strong",{parentName:"p"},"color"),": ",(0,d.mdx)("a",{parentName:"p",href:"Color.md"},(0,d.mdx)("inlineCode",{parentName:"a"},"Color"))),(0,d.mdx)("p",null,"The color of a stroke."),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"dashoffset"},"dashOffset"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("strong",{parentName:"p"},"dashOffset"),": ",(0,d.mdx)("inlineCode",{parentName:"p"},"number")),(0,d.mdx)("p",null,"Number of pixels the beginning of dash pattern should be offset along the stroke."),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"dashpattern"},"dashPattern"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("strong",{parentName:"p"},"dashPattern"),": ",(0,d.mdx)("inlineCode",{parentName:"p"},"number"),"[]"),(0,d.mdx)("p",null,"If empty, this is a solid stroke.\nIf non-empty, the values alternate between length of a rendered and blank segment,\nrepeated along the length of the stroke. The first value represents the first solid segment.\nArray must be of even length. Values cannot be negative."),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"position"},"position"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("strong",{parentName:"p"},"position"),": ",(0,d.mdx)("a",{parentName:"p",href:"../enumerations/StrokePosition.md"},(0,d.mdx)("inlineCode",{parentName:"a"},"StrokePosition"))),(0,d.mdx)("p",null,"The position of the stroke relative to the outline of the shape."),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"type"},"type"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("inlineCode",{parentName:"p"},"readonly")," ",(0,d.mdx)("strong",{parentName:"p"},"type"),": ",(0,d.mdx)("a",{parentName:"p",href:"../enumerations/StrokeType.md#color"},(0,d.mdx)("inlineCode",{parentName:"a"},"color"))),(0,d.mdx)("p",null,"The stroke type."),(0,d.mdx)("h4",{id:"overrides"},"Overrides"),(0,d.mdx)("p",null,(0,d.mdx)("a",{parentName:"p",href:"Stroke.md"},(0,d.mdx)("inlineCode",{parentName:"a"},"Stroke")),".",(0,d.mdx)("a",{parentName:"p",href:"Stroke.md#type"},(0,d.mdx)("inlineCode",{parentName:"a"},"type"))),(0,d.mdx)("hr",null),(0,d.mdx)("h3",{id:"width"},"width"),(0,d.mdx)("p",null,"• ",(0,d.mdx)("strong",{parentName:"p"},"width"),": ",(0,d.mdx)("inlineCode",{parentName:"p"},"number")),(0,d.mdx)("p",null,"The thickness of a stroke. Must be from MIN_STROKE_WIDTH to MAX_STROKE_WIDTH."))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-document-sandbox-document-apis-interfaces-solid-color-stroke-md-6f8d504789e70a300b77.js.map