"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6861],{53232:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return a},default:function(){return x}});var o=t(87462),r=t(45987),i=(t(15007),t(64983)),d=t(91515);const m=["components"],a={},s=(p="InlineAlert",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var p;const l={_frontmatter:a},u=d.Z;function x(e){let{components:n}=e,t=(0,r.Z)(e,m);return(0,i.mdx)(u,(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,(0,i.mdx)("a",{parentName:"p",href:"../overview.md"},"@express-document-sdk")," / StrokePosition"),(0,i.mdx)("h1",{id:"enumeration-strokeposition"},"Enumeration: StrokePosition"),(0,i.mdx)(s,{slots:"text",variant:"warning",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,(0,i.mdx)("em",{parentName:"p"},"Do not depend on the literal numeric values of these constants"),", as they may change. Always reference the enum identifiers in your code."),(0,i.mdx)("p",null,"A stroke's ",(0,i.mdx)("a",{parentName:"p",href:"../interfaces/Stroke.md#position"},"position")," determines how the thickness of the stroke is aligned along a shape's path outline."),(0,i.mdx)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,i.mdx)("h3",{id:"center"},"center"),(0,i.mdx)("p",null,"• ",(0,i.mdx)("strong",{parentName:"p"},"center")," = ",(0,i.mdx)("inlineCode",{parentName:"p"},"0")),(0,i.mdx)("hr",null),(0,i.mdx)("h3",{id:"inside"},"inside"),(0,i.mdx)("p",null,"• ",(0,i.mdx)("strong",{parentName:"p"},"inside")," = ",(0,i.mdx)("inlineCode",{parentName:"p"},"1")),(0,i.mdx)("hr",null),(0,i.mdx)("h3",{id:"outside"},"outside"),(0,i.mdx)("p",null,"• ",(0,i.mdx)("strong",{parentName:"p"},"outside")," = ",(0,i.mdx)("inlineCode",{parentName:"p"},"2")))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-document-sandbox-document-apis-enums-stroke-position-md-afe7bc4dadfed6b5e583.js.map