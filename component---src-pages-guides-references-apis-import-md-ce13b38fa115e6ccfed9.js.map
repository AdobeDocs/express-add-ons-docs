{"version":3,"file":"component---src-pages-guides-references-apis-import-md-ce13b38fa115e6ccfed9.js","mappings":"oTAMaA,EAAe,CAAC,EACvBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,CAAC,EACKI,EAAYN,EAAc,aAC1BO,EAAcP,EAAc,eAC5BQ,EAAc,CAClBT,aAAAA,GAEIU,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGX,GAAKY,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOV,EAAAA,EAAAA,KAACI,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBN,EAAK,CAAEW,WAAYA,EAAYI,QAAQ,eAG5EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,kBAAgB,mBAExBA,EAAAA,EAAAA,KAAA,4FACAA,EAAAA,EAAAA,KAACC,EAAS,CAACY,MAAM,gBAAgBC,OAAO,IAAIC,UAAU,aAAaH,QAAQ,eAC3EZ,EAAAA,EAAAA,KAAA,MACE,GAAM,aAAW,cAEnBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMgB,WAAW,MAClB,UAAa,eAAa,8WAoB9BhB,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMgB,WAAW,MAClB,UAAa,eAAa,uoCA4C9BhB,EAAAA,EAAAA,KAACE,EAAW,CAACW,MAAM,OAAOI,QAAQ,UAAUL,QAAQ,iBACpDZ,EAAAA,EAAAA,KAAA,sFAAgFA,EAAAA,EAAAA,KAAA,UAAQgB,WAAW,MAAIhB,EAAAA,EAAAA,KAAA,cAAYgB,WAAW,UAAQ,eAA6B,KAAc,yDAAyDhB,EAAAA,EAAAA,KAAA,UAAQgB,WAAW,KAAG,WAAqB,QAAQhB,EAAAA,EAAAA,KAAA,UAAQgB,WAAW,KAAG,SAAmB,MACtUhB,EAAAA,EAAAA,KAACE,EAAW,CAACW,MAAM,OAAOI,QAAQ,UAAUL,QAAQ,iBACpDZ,EAAAA,EAAAA,KAAA,uDAAiDA,EAAAA,EAAAA,KAAA,KAAGgB,WAAW,IAC3D,KAAQ,0BAAwB,gBACX,yFAAyFhB,EAAAA,EAAAA,KAAA,UAAQgB,WAAW,KAAG,4BAAsC,MAAMhB,EAAAA,EAAAA,KAAA,UAAQgB,WAAW,KAAG,6BAAuC,MAAMhB,EAAAA,EAAAA,KAAA,UAAQgB,WAAW,KAAG,SAAmB,MAAMhB,EAAAA,EAAAA,KAAA,UAAQgB,WAAW,KAAG,UAAoB,SAAShB,EAAAA,EAAAA,KAAA,UAAQgB,WAAW,KAAG,WAAqB,aAGxY,CAEAV,EAAWY,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/guides/references/apis/import.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/express-add-ons-docs/express-add-ons-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"import-content\"\n    }}>{`Import Content`}</h1>\n    <p>{`Import content such as images and videos into the active document (aka: page).`}</p>\n    <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JavaScript\" mdxType=\"CodeBlock\" />\n    <h3 {...{\n      \"id\": \"interface\"\n    }}>{`Interface`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`interface Application {\n  /**\n   * Represents the active document of the host application\n   */\n  readonly document: Document;\n}\n\ninterface Document {\n  /**\n   * Add image/video to the current page\n   */\n  addImage(imageBlob: Blob): Promise<void>;\n\n  /**\n   * Add video to the current page\n   */\n  addVideo(videoBlob: Blob): Promise<void>;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import AddOnSdk from \"https://new.express.adobe.com/static/add-on-sdk/sdk.js\";\n\n// Reference to the active document\nconst { document } = AddOnSdk.app;\n\n// Add image(blob) to the current page\nasync function addImageFromBlob(blob) {\n  try {\n    await document.addImage(blob);\n  } catch (error) {\n    console.log(\"Failed to add the image to the Page.\");\n  }\n}\n\n// Add image(url) to the current page\nasync function addImageFromURL(url) {\n  try {\n    const blob = await fetch(url).then((response) => response.blob());\n    await document.addImage(blob);\n  } catch (error) {\n    console.log(\"Failed to add the image to the Page.\");\n  }\n}\n\n// Add video(blob) to the current page\nasync function addVideoFromBlob(blob) {\n  try {\n    await document.addVideo(blob);\n  } catch (error) {\n    console.log(\"Failed to add the video to the Page.\");\n  }\n}\n\n// Add video(url) to the current page\nasync function addVideoFromURL(url) {\n  try {\n    const blob = await fetch(url).then((response) => response.blob());\n    await document.addVideo(blob);\n  } catch (error) {\n    console.log(\"Failed to add the video to the Page.\");\n  }\n}\n`}</code></pre>\n    <InlineAlert slots=\"text\" variant=\"warning\" mdxType=\"InlineAlert\" />\n    <p>{`Please note, the supported file types for imported content are currently `}<strong parentName=\"p\"><inlineCode parentName=\"strong\">{`png/jpg/mp4`}</inlineCode>{`,`}</strong>{` and the size of the imported images must not exceed `}<strong parentName=\"p\">{`8000 px`}</strong>{` or `}<strong parentName=\"p\">{`40 MB`}</strong>{`.`}</p>\n    <InlineAlert slots=\"text\" variant=\"success\" mdxType=\"InlineAlert\" />\n    <p>{`Many of the samples we've included in the `}<a parentName=\"p\" {...{\n        \"href\": \"guides/develop/samples\"\n      }}>{`code samples`}</a>{` implement the Import APIs, so please use them as a reference. This includes the the `}<strong parentName=\"p\">{`import-images-from-local`}</strong>{`, `}<strong parentName=\"p\">{`import-images-using-oauth`}</strong>{`, `}<strong parentName=\"p\">{`giphy`}</strong>{`, `}<strong parentName=\"p\">{`qrcode`}</strong>{` and `}<strong parentName=\"p\">{`dropbox`}</strong>{` samples.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","CodeBlock","InlineAlert","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","slots","repeat","languages","parentName","variant","isMDXComponent"],"sourceRoot":""}