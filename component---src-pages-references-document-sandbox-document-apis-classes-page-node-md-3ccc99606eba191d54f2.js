"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6919],{8666:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return i},default:function(){return x}});var d=a(58168),t=a(80045),r=(a(88763),a(15680)),m=a(83407);const o=["components"],i={},l=(p="InlineAlert",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)});var p;const s={_frontmatter:i},h=m.A;function x(e){let{components:n}=e,a=(0,t.A)(e,o);return(0,r.mdx)(h,(0,d.A)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"../overview.md"},"@express-document-sdk")," / PageNode"),(0,r.mdx)("h1",{id:"class-pagenode"},"Class: PageNode"),(0,r.mdx)("p",null,'A PageNode represents a page in the document, a child of the root node of the document\'s "scenegraph" artwork tree\n(see ',(0,r.mdx)("a",{parentName:"p",href:"ExpressRootNode.md"},"ExpressRootNode"),"). A page contains one or more artboards, which in turn contain all the page's visual\ncontent. If multiple artboards are present, each represents a keyframe \"scene\" in the page's animation timeline."),(0,r.mdx)("p",null,"To create new pages, see ",(0,r.mdx)("a",{parentName:"p",href:"PageList.md#addpage"},"PageList.addPage"),"."),(0,r.mdx)("h2",{id:"extends"},"Extends"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"BaseNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"BaseNode")))),(0,r.mdx)("h2",{id:"implements"},"Implements"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"../interfaces/IRectangularNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"IRectangularNode")))),(0,r.mdx)("h2",{id:"accessors"},"Accessors"),(0,r.mdx)("h3",{id:"addondata"},"addOnData"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"addOnData"),"(): ",(0,r.mdx)("a",{parentName:"p",href:"AddOnData.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"AddOnData"))),(0,r.mdx)("p",null,"Get ",(0,r.mdx)("a",{parentName:"p",href:"AddOnData.md"},"AddOnData")," reference for managing the private metadata on this node for this add-on."),(0,r.mdx)("h4",{id:"returns"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"AddOnData.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"AddOnData"))),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"allchildren"},"allChildren"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"allChildren"),"(): ",(0,r.mdx)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.mdx)("inlineCode",{parentName:"p"},"Iterable"),"<",(0,r.mdx)("a",{parentName:"p",href:"BaseNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"BaseNode")),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"any"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"any"),">",">"),(0,r.mdx)("p",null,"Returns a read-only list of all children of the node. General-purpose content containers such as ArtboardNode or\nGroupNode also provide a mutable ",(0,r.mdx)("a",{parentName:"p",href:"../interfaces/ContainerNode.md#children"},"ContainerNode.children"),' list. Other nodes with a more specific structure can\nhold children in various discrete "slots"; this ',(0,r.mdx)("inlineCode",{parentName:"p"},"allChildren")," list includes ",(0,r.mdx)("em",{parentName:"p"},"all")," such children and reflects their\noverall display z-order."),(0,r.mdx)("p",null,"Although BaseNode's allChildren may yield other BaseNodes, the subclasses Node and ArtboardNode override allChildren\nto guarantee all their children are full-fledged Node instances."),(0,r.mdx)("h4",{id:"returns-1"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"Readonly"),"<",(0,r.mdx)("inlineCode",{parentName:"p"},"Iterable"),"<",(0,r.mdx)("a",{parentName:"p",href:"BaseNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"BaseNode")),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"any"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"any"),">",">"),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"artboards"},"artboards"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"artboards"),"(): ",(0,r.mdx)("a",{parentName:"p",href:"ArtboardList.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"ArtboardList"))),(0,r.mdx)("p",null,"The artboards or \"scenes,\" which hold the page's visual contents. If multiple artboards are present, this list\nrepresents an ordered keyframe sequence in the page's animation timeline.\nTo create new artboards, see ",(0,r.mdx)("a",{parentName:"p",href:"ArtboardList.md#addartboard"},"ArtboardList.addArtboard"),"."),(0,r.mdx)("h4",{id:"returns-2"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"ArtboardList.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"ArtboardList"))),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"height"},"height"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"height"),"(): ",(0,r.mdx)("inlineCode",{parentName:"p"},"number")),(0,r.mdx)("p",null,"The height of the node."),(0,r.mdx)("p",null,"All Artboards within a page share the same dimensions, so changing this value will also automatically adjust the\nsize of every child ",(0,r.mdx)("a",{parentName:"p",href:"ArtboardNode.md"},"ArtboardNode"),"."),(0,r.mdx)(l,{slots:"text",variant:"info",mdxType:"InlineAlert"}),"Note: changing the page's size does not adjust the size or position of any of visual content inside any child [ArtboardNode](ArtboardNode.md). Callers should use their own layout logic to update the content for the new bounds as desired. For example, making the size smaller could result in content being clipped and hard to access if it is not adjusted to be visible again.",(0,r.mdx)("p",null,"Must be at least MIN_PAGE_DIMENSION and no larger than MAX_PAGE_DIMENSION."),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"set")," ",(0,r.mdx)("strong",{parentName:"p"},"height"),"(",(0,r.mdx)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.mdx)("inlineCode",{parentName:"p"},"void")),(0,r.mdx)("h4",{id:"parameters"},"Parameters"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("strong",{parentName:"p"},"value"),": ",(0,r.mdx)("inlineCode",{parentName:"p"},"number")),(0,r.mdx)("h4",{id:"returns-3"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"number")),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"id"},"id"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"id"),"(): ",(0,r.mdx)("inlineCode",{parentName:"p"},"string")),(0,r.mdx)("p",null,"A unique identifier for this node that stays the same when the file is closed & reopened, or if the node is\nmoved to a different part of the document."),(0,r.mdx)("h4",{id:"returns-4"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"string")),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"name"},"name"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"name"),"(): ",(0,r.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.mdx)("inlineCode",{parentName:"p"},"string")),(0,r.mdx)("p",null,"The page's name. Displayed as a user-editable label above the current artboard in the UI."),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"set")," ",(0,r.mdx)("strong",{parentName:"p"},"name"),"(",(0,r.mdx)("inlineCode",{parentName:"p"},"name"),"): ",(0,r.mdx)("inlineCode",{parentName:"p"},"void")),(0,r.mdx)("h4",{id:"parameters-1"},"Parameters"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("strong",{parentName:"p"},"name"),": ",(0,r.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.mdx)("inlineCode",{parentName:"p"},"string")),(0,r.mdx)("h4",{id:"returns-5"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.mdx)("inlineCode",{parentName:"p"},"string")),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"parent"},"parent"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"parent"),"(): ",(0,r.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.mdx)("a",{parentName:"p",href:"BaseNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"BaseNode"))),(0,r.mdx)("p",null,"The node's parent. The parent chain will eventually reach ExpressRootNode for all nodes that are part of the document\ncontent."),(0,r.mdx)("p",null,'Nodes that have been deleted are "orphaned," with a parent chain that terminates in ',(0,r.mdx)("inlineCode",{parentName:"p"},"undefined")," without reaching the\nroot node. Such nodes cannot be selected, so it is unlikely to encounter one unless you retain a reference to a node\nthat was part of the document content earlier. Deleted nodes can be reattached to the scenegraph, e.g. via Undo."),(0,r.mdx)("h4",{id:"returns-6"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.mdx)("a",{parentName:"p",href:"BaseNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"BaseNode"))),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"type"},"type"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"type"),"(): ",(0,r.mdx)("a",{parentName:"p",href:"../enumerations/SceneNodeType.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"SceneNodeType"))),(0,r.mdx)("p",null,"The node's type."),(0,r.mdx)("h4",{id:"returns-7"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"../enumerations/SceneNodeType.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"SceneNodeType"))),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"width"},"width"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"get")," ",(0,r.mdx)("strong",{parentName:"p"},"width"),"(): ",(0,r.mdx)("inlineCode",{parentName:"p"},"number")),(0,r.mdx)("p",null,"The width of the node."),(0,r.mdx)("p",null,"All Artboards within a page share the same dimensions, so changing this value will also automatically adjust the\nsize of every child ",(0,r.mdx)("a",{parentName:"p",href:"ArtboardNode.md"},"ArtboardNode"),"."),(0,r.mdx)(l,{slots:"text",variant:"info",mdxType:"InlineAlert"}),"Note: changing the page's size does not adjust the size or position of any of visual content inside any child [ArtboardNode](ArtboardNode.md). Callers should use their own layout logic to update the content for the new bounds as desired. For example, making the size smaller could result in content being clipped and hard to access if it is not adjusted to be visible again.",(0,r.mdx)("p",null,"Must be at least MIN_PAGE_DIMENSION and no larger than MAX_PAGE_DIMENSION."),(0,r.mdx)("p",null,"• ",(0,r.mdx)("inlineCode",{parentName:"p"},"set")," ",(0,r.mdx)("strong",{parentName:"p"},"width"),"(",(0,r.mdx)("inlineCode",{parentName:"p"},"value"),"): ",(0,r.mdx)("inlineCode",{parentName:"p"},"void")),(0,r.mdx)("h4",{id:"parameters-2"},"Parameters"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("strong",{parentName:"p"},"value"),": ",(0,r.mdx)("inlineCode",{parentName:"p"},"number")),(0,r.mdx)("h4",{id:"returns-8"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"number")),(0,r.mdx)("h2",{id:"methods"},"Methods"),(0,r.mdx)("h3",{id:"cloneinplace"},"cloneInPlace()"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("strong",{parentName:"p"},"cloneInPlace"),"(): ",(0,r.mdx)("a",{parentName:"p",href:"PageNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"PageNode"))),(0,r.mdx)("p",null,"Clones this page, all artboards within it, and all content within those artboards. The cloned page is the same size\nas the original. Adds the new page immediately after this one in the pages list. The first artboard in the cloned\npage becomes the default target for newly inserted content (",(0,r.mdx)("a",{parentName:"p",href:"Context.md#insertionparent"},"Context.insertionParent"),") and the viewport\nswitches to display this artboard."),(0,r.mdx)("h4",{id:"returns-9"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"PageNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"PageNode"))),(0,r.mdx)("p",null,"the cloned page."),(0,r.mdx)("hr",null),(0,r.mdx)("h3",{id:"removefromparent"},"removeFromParent()"),(0,r.mdx)("p",null,"• ",(0,r.mdx)("strong",{parentName:"p"},"removeFromParent"),"(): ",(0,r.mdx)("inlineCode",{parentName:"p"},"void")),(0,r.mdx)("p",null,"Removes the node from its parent - effectively deleting it, if the node is not re-added to another parent before the\ndocument is closed."),(0,r.mdx)("p",null,"If parent is a basic ContainerNode, this is equivalent to ",(0,r.mdx)("inlineCode",{parentName:"p"},"node.parent.children.remove(node)"),'. For nodes with other\nchild "slots," removes the child from whichever slot it resides in, if possible. Throws if the slot does not permit\nremoval. No-op if node is already an orphan.'),(0,r.mdx)("h4",{id:"returns-10"},"Returns"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"void")),(0,r.mdx)("h4",{id:"inherited-from"},"Inherited from"),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"BaseNode.md"},(0,r.mdx)("inlineCode",{parentName:"a"},"BaseNode")),".",(0,r.mdx)("a",{parentName:"p",href:"BaseNode.md#removefromparent"},(0,r.mdx)("inlineCode",{parentName:"a"},"removeFromParent"))))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-references-document-sandbox-document-apis-classes-page-node-md-3ccc99606eba191d54f2.js.map