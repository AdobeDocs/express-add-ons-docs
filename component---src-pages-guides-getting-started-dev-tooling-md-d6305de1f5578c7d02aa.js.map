{"version":3,"file":"component---src-pages-guides-getting-started-dev-tooling-md-d6305de1f5578c7d02aa.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/guides/getting_started/dev_tooling.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/express-add-ons-docs/express-add-ons-docs/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineAlert slots=\"text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`The add-on developer documentation you are previewing is for the beta version of Adobe Express. `}<a parentName=\"p\" {...{\n        \"href\": \"https://adobe.com/go/express-developer\"\n      }}>{`Join the waitlist`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"developer-tooling\"\n    }}>{`Developer Tooling`}</h1>\n    <h2 {...{\n      \"id\": \"cli-usage-and-arguments\"\n    }}>{`CLI Usage and Arguments`}</h2>\n    <h4 {...{\n      \"id\": \"create-options\"\n    }}>{`Create Options`}</h4>\n    <p>{`The table below shows the list of arguments that can be specified with the CLI create command (ie: `}<inlineCode parentName=\"p\">{`npx @adobe/create-ccweb-add-on`}</inlineCode>{`):`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`add-on-name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name of the add-on. A new add-on project with this argument will be created in the user's current working directory.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`template`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`none, you will`}<br />{` be prompted from the CLI`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The template to use for creating the add-on.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`verbose`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Setting this argument enables the verbose flag on the underlying operations.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`For instance, the following command would specify all possible arguments:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npx @adobe/create-ccweb-add-on my-addon --template react-typescript --verbose\n`}</code></pre>\n    <InlineAlert slots=\"text\" variant=\"success\" mdxType=\"InlineAlert\" />\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"../getting_started/concepts.md#templates\"\n      }}>{`templates`}</a>{` section for the currently supported template values.`}</p>\n    <h4 {...{\n      \"id\": \"start-options\"\n    }}>{`Start Options`}</h4>\n    <p>{`The table below shows a list of arguments that can be specified with the `}<inlineCode parentName=\"p\">{`start`}</inlineCode>{` script on your add-on project, which starts up the add-on in a local server:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Optional`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`src`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`src`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Directory where the source code and assets for the add-on is present.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`use`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Transpiler/bundler to be used. For example, webpack.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`port`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`5241`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Local development server port.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`verbose`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Setting this argument enables the verbose flag on the underlying operations.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`For instance, to specify a port of `}<inlineCode parentName=\"p\">{`8080`}</inlineCode>{` instead, use the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm run start -- --port 8080\n`}</code></pre>\n    <p>{`To specify you want to use `}<inlineCode parentName=\"p\">{`webpack`}</inlineCode>{` AND port `}<inlineCode parentName=\"p\">{`8080`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm run start -- --use webpack --port 8080\n`}</code></pre>\n    <InlineAlert slots=\"text\" variant=\"info\" mdxType=\"InlineAlert\" />\n    <p>{`The extra arguments are unnecessary unless you do not want to use a transpiler/bundler or use the default port of `}<inlineCode parentName=\"p\">{`5241`}</inlineCode>{`. Also, note that all of the templates other than the `}<inlineCode parentName=\"p\">{`javascript`}</inlineCode>{` template are pre-configured to use webpack by default and the `}<inlineCode parentName=\"p\">{`--use webpack`}</inlineCode>{` is automatically added when you run the `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`start`}</inlineCode>{` commands. Take a look at the `}<inlineCode parentName=\"p\">{`scripts`}</inlineCode>{` property in the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` of those templates and you will see the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"scripts\": {\n    \"clean\": \"ccweb-add-on-scripts clean\",\n    \"build\": \"ccweb-add-on-scripts build --use webpack\",\n    \"start\": \"ccweb-add-on-scripts start --use webpack\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"templates\"\n    }}>{`Templates`}</h2>\n    <p>{`The `}<strong parentName=\"p\">{`add-on CLI`}</strong>{` contains built-in, pre-configured templates to allow you to create an add-on project based on your favorite development stack in the quickest possible manner. There are currently four different template options based on popular web development trends. The table below summarizes the templates and their associated frameworks.`}</p>\n    <br />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Template`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Framework`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`javascript`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`JavaScript`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`typescript`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`TypeScript`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`react-javascript`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React with JavaScript`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`react-typescript`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`React with TypeScript`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The following syntax can be used to specify one of the above templates:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npx @adobe/create-ccweb-add-on <add-on-name> --template <template>\n`}</code></pre>\n    <p>{`For instance, the following is an example of a command that will create an add-on based on the `}<inlineCode parentName=\"p\">{`react-javascript`}</inlineCode>{` template:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npx @adobe/create-ccweb-add-on helloworld-react-js --template react-javascript\n`}</code></pre>\n    <InlineAlert slots=\"text\" variant=\"success\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`TIP:`}</strong>{` If you don't specify a template, the CLI will simply prompt you to choose from the list of template options.`}</p>\n    <h2 {...{\n      \"id\": \"manifest\"\n    }}>{`Manifest`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` file is required in every add-on project. The manifest provides details like metadata about your add-on and how it should behave. See the `}<a parentName=\"p\" {...{\n        \"href\": \"../references/manifest.md\"\n      }}>{`manifest schema reference`}</a>{` for a list of possible values available for use in your add-on's manifest. `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","slots","variant","parentName","isMDXComponent"],"sourceRoot":""}