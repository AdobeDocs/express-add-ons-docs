{"version":3,"file":"component---src-pages-references-document-sandbox-document-apis-interfaces-stroke-md-85976aa7dd5aadf6fd0c.js","mappings":"0TAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,kBAAgB,yBACM,cAClCH,EAAAA,EAAAA,KAAA,MACE,GAAM,oBAAkB,sBAE1BA,EAAAA,EAAAA,KAAA,wDAAkDA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC5D,KAAQ,+BAA6B,iBACf,MAC1BH,EAAAA,EAAAA,KAAA,+DAAyDA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,uBAAqC,4HAExHH,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,eAEpBA,EAAAA,EAAAA,KAAA,MACE,GAAM,SAAO,UAEfA,EAAAA,EAAAA,KAAA,eAASA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,MAAMH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAClE,KAAQ,aACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAC/BH,EAAAA,EAAAA,KAAA,oCACAA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,eAEpBA,EAAAA,EAAAA,KAAA,eAASA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,cAAwB,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YACvFH,EAAAA,EAAAA,KAAA,+FACAA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,eAAa,gBAErBA,EAAAA,EAAAA,KAAA,eAASA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,eAAyB,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,OAChHH,EAAAA,EAAAA,KAAA,2RAIAA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,eAASA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,YAAsB,MAAMH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACrE,KAAQ,+BACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,qBAC/BH,EAAAA,EAAAA,KAAA,8EACAA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,SAAO,UAEfA,EAAAA,EAAAA,KAAA,eAASA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAClFH,EAAAA,EAAAA,KAAA,0FAGJ,CAEAN,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/references/document-sandbox/document-apis/interfaces/Stroke.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/github/workspace/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../overview.md\"\n      }}>{`@express-document-sdk`}</a>{` / Stroke`}</p>\n    <h1 {...{\n      \"id\": \"interface-stroke\"\n    }}>{`Interface: Stroke`}</h1>\n    <p>{`Represents a stroke in the scenegraph. See `}<a parentName=\"p\" {...{\n        \"href\": \"../classes/StrokableNode.md\"\n      }}>{`StrokableNode`}</a>{`.`}</p>\n    <p>{`The most convenient way to create a stroke is via `}<inlineCode parentName=\"p\">{`Editor.makeStroke()`}</inlineCode>{`. This also futureproofs your code in case any\nother required fields are added to the Stroke descriptor in the future.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"color\"\n    }}>{`color`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`color`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"Color.md\"\n      }}><inlineCode parentName=\"a\">{`Color`}</inlineCode></a></p>\n    <p>{`The color of a stroke.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"dashoffset\"\n    }}>{`dashOffset`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`dashOffset`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`Number of pixels the beginning of dash pattern should be offset along the stroke.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"dashpattern\"\n    }}>{`dashPattern`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`dashPattern`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode>{`[]`}</p>\n    <p>{`If empty, this is a solid stroke.\nIf non-empty, the values alternate between length of a rendered and blank segment,\nrepeated along the length of the stroke. The first value represents the first solid segment.\nArray must be of even length. Values cannot be negative.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"position\"\n    }}>{`position`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`position`}</strong>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"../enums/StrokePosition.md\"\n      }}><inlineCode parentName=\"a\">{`StrokePosition`}</inlineCode></a></p>\n    <p>{`The position of the stroke relative to the outline of the shape.`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"width\"\n    }}>{`width`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`width`}</strong>{`: `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`The thickness of a stroke. Must be from MIN_STROKE_WIDTH to MAX_STROKE_WIDTH.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}